%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: ppr.dvi
%%Pages: 21
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter -o ppr.ps ppr.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2006.04.25:1511
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (ppr.dvi)
@start
%DVIPSBitmapFont: Fa cmtt8 8 17
/Fa 17 104 df<EB1F80EB7FE03801FFF8487F487F13F0380FC03F391F801F80EB000F48
14C0003E1307A248EB03E0A30078130100F814F0AB007CEB03E0A3007E1307003E14C0A2
003F130F391F801F80A2390FC03F003807F0FE13FF6C5B6C5B38007FE0EB1F801C2B7DA9
23>48 D<1318133C137CA213FC120112031207127F12FFA2137C127C1200B3A6387FFFFC
14FEA314FC172A7AA923>I<EB7FC03803FFF04813FC001F7F48EBFF80EA7F80397E003F
C000FEEB0FE04813076CEB03F0A31401127C1238C7FC1403A2EC07E0A2EC0FC0141FEC3F
80150014FE1301EB03F8495A495AEB3FC0495A01FEC7FC485A485AD80FF013E0391FE001
F0EA3F8048B5FCB6FCA36C14E01C2A7DA923>I<EB7FC03801FFF0000713FC487F487F39
3FE07F809038801FC0140F1407A3EA0E00C7120FA2EC1F80143F903801FF00EB7FFE495A
5C806DB4FC9038007F80EC1FC0EC0FE01407EC03F0A21401A2127C12FE1403A2EC07E048
130F6CEB1FC0387FC07F6CB512806C14006C13FC00035B38007FC01C2B7DA923>I<14FC
497E1303A2EB07DE130F149EEB1F1E133F133E137E137C13F8120113F0EA03E0120713C0
120FEA1F8013005A123E5A12FCB612F815FCA36C14F8C7EA1E00A7903807FFF84913FCA3
6D13F81E2A7EA923>I<001FB5FC481480A31500003EC8FCAAEB1FE0EBFFF8003F13FE80
15809038E03FC0EB800F90380007E0121EC7EA03F0A21401A2123812FEA21403A2EC07E0
48130F007EEB1FC0397FC0FF806CB512006C5B00075B6C13F038007F801C2A7DA823>I<
EB03F8EB1FFE497E90B512804814C03803FE0F3807F01FEA0FE0EA1FC01380003FEB0F80
90C8FC127EA2EA7C01EB3FF038FCFFFCB57E8015809038C03FC09038000FE014075A48EB
03F0A21401A3127CA2007E1303A27EEC07E0EB800F391FC01FC0390FF07F8090B512006C
5B00015B6C13F0EB3FC01C2B7DA923>I<1270B612E015F0A439F8000FE0EC1FC0007014
80C7EA3F00147E14FE5C495AA2495A5C13075C130F5C131FA291C7FC5BA2133E137EA213
7CA313FCA25BA813701C2B7DA923>I<EB3FC03801FFF8487F487F487F391FE07F80393F
801FC0EB000F007EEB07E0007C1303A4007E1307003E14C06CEB0F80EBC03F3907FFFE00
6C5BC613F0A2000313FC380FF0FF391F801F80393F000FC0007EEB07E0007C130300FC14
F0481301A56C1303007EEB07E0A2393F801FC0391FE07F8090B5FC6C1400000313FC6C5B
38003FC01C2B7DA923>I<EB3FC0EBFFF000037F4813FE487F391FE07F80383F803F397F
001FC0007E130F00FEEB07E05AA248130315F0A47EA2007E1307140F127F383FC03F6CB5
FC7E6C13FD6C13F3C613C390380803E0EB0007A2EC0FC0121F393F801F80143FEC7F0014
FE1383EBFFFC6C13F06C5B000313806C48C7FC1C2B7DA923>I<3803FF80000F13E04813
F8487F80EB80FFEC3F80381F001FC7FC140F14FF137F0003B5FC120F5A387FF00F130012
FCA25A141F7E6C133F387F81FF90B512FC6C14FE7E000713C73901FE01FC1F1D7D9C23>
97 D<B47E7FA41207A7EBC1FCEBC7FF01DF13C090B512E015F09038FE0FF8EBF8039038
F001FCEBE000A249137EA2153EA5157E7F15FC7F14019038F803F89038FE0FF090B5FC15
E001DF138001CF1300380383F81F297FA823>I<EB3FF0EBFFFC000313FF5A5A381FE07F
EA3F80387F003E007E90C7FCA25AA25AA57EA2007E1307007FEB0F80141FEA3FC0391FF0
7F006CB5FC6C5B6C5BC613F0EB3FC0191D7B9C23>I<ECFF8015C0A41407A7EB7F873801
FFE74813F7000F13FF5A13E0383F803F387F001F007E130FA2481307A25AA56C130FA212
7E141F007F133F383F807FEBE0FF6CB512FE7E000313F76C13C738007F031F297EA823>
I<EB3FC0EBFFF800037F4813FF481480381FF07F393F801FC0EB000F007E130715E05AB6
FCA415C000F8C8FC7EA2007EEB01C0007FEB03E0383F800713E0391FF81FC06CB5FC6C14
800001EBFE006C6C5AEB1FE01B1D7D9C23>I<147F903801FFC0010713E05B5BEB3FCF14
0F90383E07C091C7FCA4007FB51280B612C0A36C1480D8003EC7FCB3383FFFFE487FA36C
5B1B297EA823>I<EC01F090383F07FC9038FFDFFE000313FF5A48147E381FE1FE903880
7E18393F003F00A2003E7FA4003F5BA2381F807EEBE1FE6CB45A485B5C001E13C0013FC7
FC90C8FC121F1340380FFFFCECFF804814C04814F0397E0007F8007C130048147CA24814
3CA36C147C6C14FC007FEB03F8EBE01F6CB512F0000F14C06C14800001EBFE0038003FF0
1F2E7E9D23>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmtt10 10.95 29
/Fb 29 127 df<120FEA3FC0EA7FE0A2EAFFF0A4EA7FE0A2EA3FC0EA0F000C0C6E8B30>
46 D<16F01501ED03F8A21507A2ED0FF0A2ED1FE0A2ED3FC0A2ED7F80A2EDFF00A24A5A
A25D1403A24A5AA24A5AA24A5AA24A5AA24A5AA24AC7FCA2495AA25C1303A2495AA2495A
A2495AA2495AA2495AA249C8FCA2485AA25B1203A2485AA2485AA2485AA2485AA2485AA2
48C9FCA25AA2127CA225477BBE30>I<003FB57E4814F0B612FC15FF6C816C812603F801
7F9138003FF0151F6F7E15071503821501A515035E1507150F4B5A153F4AB45A90B65A5E
93C7FC5D8182D9F8007FED3FE0151F150F821507A817F8EEF1FCA53A3FFF8003FB4801C0
EBFFF8B56C7E17F06C496C13E06C49EB7FC0C9EA1F002E397FB730>82
D<003FB712C04816E0B8FCA43AFE003F800FA8007CED07C0C791C7FCB3B1011FB5FC4980
A46D91C7FC2B387EB730>84 D<EB7FF80003B5FC4814C04880488048809038E01FFC9038
C003FE14016E7E6C487F6CC77FC8123FA491B5FC130F137F48B6FC12075A48EB803F383F
F800EA7FE0138048C7FC5AA4157F7E6C6C13FFEBC003263FF01FEBFF8090B712C07E6C14
EF000314876CD9FE01138026003FE0C8FC2A2A7BA830>97 D<EA3FFC487E12FFA2127F12
3F1200AAEC03FE91381FFF80027F13E091B57E90B612FC82ECFE079138F001FF4A6C1380
4A137F4AEB3FC091C7121F17E049140FA217F01607A8160FA217E07F161F6EEB3FC0A26E
EB7F806E13FFDAF00313009138FC0FFE91B55A5E495CD97E7F13C0D93C1F90C7FC903800
03FC2C3980B730>I<ECFFE0010713FC011F7F017F7F90B612804815C048EB807F3907FC
003F485A485A49EB1F804848EB0F004990C7FC127F90C9FCA25A5AA87E7EA27F003FEC07
C06DEB0FE06C7E6D131F6C6C14C0D807FE133F9039FFC0FF806C90B5FCC615006D5B011F
13F801075B01011380232A7AA830>I<913801FFE04A7F5CA28080EC0007AAEB03FE9038
1FFF874913E790B6FC5A5A481303380FFC00D81FF0133F49131F485A150F4848130790C7
FCA25AA25AA87E6C140FA27F003F141F6D133F6C7E6D137F390FF801FF2607FE07EBFFC0
6CB712E06C16F06C14F76D01C713E0011F010313C0D907FCC8FC2C397DB730>I<49B4FC
010713E0011F13F8017F7F90B57E488048018113803A07FC007FC04848133FD81FE0EB1F
E0150F484814F0491307127F90C7FCED03F85A5AB7FCA516F048C9FC7E7EA27F003FEC01
F06DEB03F86C7E6C7E6D1307D807FEEB1FF03A03FFC07FE06C90B5FC6C15C0013F14806D
EBFE00010713F8010013C0252A7CA830>I<EDFF80020713E0021F13F05C4A13F891B5FC
491387903803FE079138FC03F0903907F800C04A1300A8003FB612C04815E0B7FCA36C15
C0260007F0C7FCB3A9003FB512FE4880B71280A26C15006C5C25397DB830>I<D903FC13
FF90261FFF8713C04913DF90B712E05A5A2607FE07138F903AF801FE07C048486C6CC7FC
A2497F001F8149133FA56D137F000F92C7FC6D5BA26C6C485AEBFE0790B55A5D485C15C0
01DF5BD9C3FCC8FC01C0C9FCA37F7F6CB512F015FF6C15C04815F0488148813A3FE0001F
FE0180130148C8127F007E8100FE168048151FA56C153F007FED7F006D5C6C6C495A01F0
13076CB4EB7FFC6C90B55A6C5D000115C06C6C91C7FC011F13FC010113C02B3E7DA730>
I<EA3FFC487E12FFA2127F123F1200AAEC01FE91380FFF80023F13E091B57E90B67EA291
38FE07FCECF8039138E001FE14C0EC8000A291C7FCA25BB3A23B3FFFF81FFFF8486D4813
FCB500FE14FEA26C01FC14FC6C496C13F82F3880B730>I<14E0EB03F8A2497EA36D5AA2
EB00E091C8FCA9381FFFF8487F5AA27E7EEA0001B3A9003FB612C04815E0B7FCA27E6C15
C023397AB830>I<EC01C0EC07F0A2EC0FF8A3EC07F0A2EC01C091C7FCA990B512F04814
F8A47EEB0003B3B3A5EC07F0A2123C007EEB0FE0B4131FEC3FC0147F90B512806C14005C
6C5B000F13F0000313C01D4E7CB830>I<387FFFF8B57EA47EEA0001B3B3A8007FB612F0
B712F8A46C15F025387BB730>108 D<02FC137E3B7FC3FF01FF80D8FFEF01877F90B500
CF7F15DF92B57E6C010F13872607FE07EB03F801FC13FE9039F803FC01A201F013F8A301
E013F0B3A23C7FFE0FFF07FF80B548018F13C0A46C486C01071380322881A730>I<EC01
FE3A3FFC0FFF80267FFE3F13E000FF90B57E90B67E7E6C9038FE07FCC6EBF8039138E001
FE14C0EC8000A291C7FCA25BB3A23B3FFFF81FFFF8486D4813FCB500FE14FEA26C01FC14
FC6C496C13F82F2880A730>I<49B4FC010F13E0013F13F8497F90B57E0003ECFF801401
3A07FC007FC04848EB3FE0D81FE0EB0FF0A24848EB07F8491303007F15FC90C71201A300
FEEC00FEA86C14016C15FCA26D1303003F15F86D13076D130F6C6CEB1FF06C6CEB3FE06D
137F3A07FF01FFC06C90B512806C15006C6C13FC6D5B010F13E0010190C7FC272A7CA830
>I<EC03FE3A3FFC1FFF80267FFE7F13E000FF90B57E90B612FC6C816CEBFE07C69038F0
01FF4A6C13804A137F4AEB3FC091C7121F17E049140FA217F01607A8160FA217E07F161F
6EEB3FC0A26EEB7F806E13FFDAF00313009138FC0FFE91B55A5E495C6E13C0021F90C7FC
EC03FC91C9FCAD383FFFF8487FB57EA26C5B6C5B2C3C80A730>I<49B413F8010FEBC1FC
013F13F14913FD48B6FC5A481381390FFC007F49131F4848130F491307485A491303127F
90C7FC15015A5AA77E7E15037FA26C6C1307150F6C6C131F6C6C133F01FC137F3907FF01
FF6C90B5FC6C14FD6C14F9013F13F1010F13C1903803FE0190C7FCAD92B512F84A14FCA4
6E14F82E3C7DA730>I<ED07F83A3FFF803FFF486DB51280B512C302CF14C06C13DF6C90
38FFFC3FD8001F13E09238801F809238000F004A90C7FC5C5C5CA25CA45CAF003FB512FC
4880B7FCA26C5C6C5C2A287EA730>I<90381FFC1E48B5129F000714FF5A5A5A387FF007
EB800100FEC7FC4880A46C143E007F91C7FC13E06CB4FC6C13FC6CEBFF806C14E0000114
F86C6C7F01037F9038000FFF02001380007C147F00FEEC1FC0A2150F7EA27F151F6DEB3F
806D137F9039FC03FF0090B6FC5D5D00FC14F0D8F83F13C026780FFEC7FC222A79A830>
I<EB0780497E131FA9003FB612E04815F0B7FCA36C15E026001FC0C7FCB216F8ED01FCA5
ECE003010FEB07F814F09138FC1FF06DB512E06D14C016806D14009038007FFCEC1FF026
337EB130>I<D83FFCEB3FFC486C497E00FF14FFA2007F147F003F143F00001400B3A415
01A2150315076D130F903A7FC07FFFF891B612FC6D15FE7F6D4913FC6D9038F87FF80100
01C0C7FC2F2880A630>I<3B3FFFC07FFF80486DB512C0B515E0A26C16C06C496C13803B
01F80003F000A26D130700005DA26D130F017E5CA2017F131F6D5CA2EC803F011F91C7FC
A26E5A010F137EA2ECE0FE01075BA214F101035BA3903801FBF0A314FF6D5BA36E5A6E5A
2B277EA630>I<3B3FFFC01FFFE0486D4813F0B515F8A26C16F06C496C13E0D807E0C7EA
3F00A26D5C0003157EA56D14FE00015DEC0F80EC1FC0EC3FE0A33A00FC7FF1F8A2147DA2
ECFDF9017C5C14F8A3017E13FBA290393FF07FE0A3ECE03FA2011F5C90390F800F802D27
7FA630>I<3A3FFF81FFFC4801C37FB580A26C5D6C01815BC648C66CC7FC137FEC80FE90
383F81FC90381FC3F8EB0FE3ECE7F06DB45A6D5B7F6D5B92C8FC147E147F5C497F819038
03F7E0EB07E790380FE3F0ECC1F890381F81FC90383F80FE90387F007E017E137F01FE6D
7E48486D7E267FFF80B5FCB500C1148014E3A214C16C0180140029277DA630>I<3B3FFF
C07FFF80486DB512C0B515E0A26C16C06C496C13803B01FC0003F000A2000014076D5C13
7E150F017F5C7F151FD91F805BA214C0010F49C7FCA214E00107137EA2EB03F0157C15FC
EB01F85DA2EB00F9ECFDF0147D147FA26E5AA36E5AA35DA2143F92C8FCA25C147EA2000F
13FE486C5AEA3FC1EBC3F81387EB8FF0EBFFE06C5B5C6C90C9FC6C5AEA01F02B3C7EA630
>I<017C133848B4137C48EB80FE4813C14813C348EBEFFC397FEFFFF0D8FF8713E00107
13C0486C1380D87C0113003838007C1F0C78B730>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr9 9 16
/Fc 16 71 df<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E0391F00
01F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A239
0F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126>48
D<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126>
I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F15F00060
130712FC6C14F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F80150014
7E5C495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48C7FC001C14
70001FB512F05A5AB612E0A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F80390F00
1FC0001EEB0FE0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15F0A2EC0F
E015C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F8140315
FC140115FEA3127EB4FCA415FC48130312780070EB07F86C14F0003C130F001FEB1FE039
0FE03F800003B51200C613FCEB1FE01F347DB126>I<EC01C0A214031407A2140F141FA2
143F147F146F14CF1301EB038F140F1307130E130C131C13381330137013E013C0EA0180
120313001206120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107B51280A3
21337EB226>I<000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8FCA9
EB0FC0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F01403A215
F8A41218127E12FEA315F0140712F8006014E01270EC0FC06C131F003C14806CEB7F0038
0F80FE3807FFF8000113E038003F801D347CB126>I<14FE903807FF80011F13E090383F
00F0017C13703901F801F8EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA35A12
7EEB07F0EB1FFC38FE381F9038700F809038E007C039FFC003E0018013F0EC01F8130015
FC1400A24814FEA5127EA4127F6C14FCA26C1301018013F8000F14F0EBC0030007EB07E0
3903E00FC03901F81F806CB51200EB3FFCEB0FE01F347DB126>I<1230123C003FB6FCA3
4814FEA215FC0070C7123800601430157015E04814C01401EC0380C7EA07001406140E5C
141814385CA25CA2495A1303A3495AA2130FA3131F91C7FCA25BA55BA9131C20347CB126
>I<EB0FE0EB7FFC90B5FC3903F01F803907C007C0390F0003E0000EEB01F0001E130000
1C14F8003C1478A3123EA2003F14F86D13F0EBC001D81FF013E09038F803C0390FFE0780
3907FF0F006C13DE6C13F87EEB3FFE8001F713C0D803E313E0D8078013F0390F007FF800
1E131F003EEB07FC003C1303481301EC007E12F848143EA2151EA37E153C1278007C1478
7E6C14F0390F8003E03907F01FC00001B5120038007FFCEB1FE01F347DB126>I<EB0FE0
EB7FF8EBFFFE3803F83F3907E00F80390FC007C0D81F8013E0EC03F0EA3F0048EB01F812
7EA200FE14FC1400A415FEA5007E1301A2127F7E1403EA1F80000F13073807C00E3803E0
1C3801F03838007FF090381FC0FC90C7FC1401A215F8A215F01403001F14E0383F800715
C0140FEC1F809038003F00001C137E381F01FC380FFFF0000313C0C690C7FC1F347DB126
>I<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7EA202707FEC601FA202
E07FECC00FA2D901807F1507A249486C7EA301066D7EA2010E80010FB5FCA249800118C7
7EA24981163FA2496E7EA3496E7EA20001821607487ED81FF04A7ED8FFFE49B512E0A333
367DB53A>65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F17E0160F
17F0A617E0161F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED00FEEE3F
80EE1FC0EE0FE017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE7FC00003
913803FF00B75A16F816C02E337DB236>I<DA03FE130C91393FFF801C91B512E0903A03
FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B
4848157C485A173C485A171C123F5B007F160CA390C9FC481600AB7E6D150CA3123F7F00
1F161C17186C7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F80EB0380D91FC0
EB0F00D90FF0131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E377CB437>I<B77E
16F016FE3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2
EF1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5A
EE3FC000014AB45AB748C7FC16F8168034337EB23B>I<B812C0A3D803FCC7127F000115
0FEE03E01601A21600A21760A403061330A41700150EA2151E157E90B512FEA39038FC00
7E151E150EA21506170CA3171892C7FCA41738A21770A217F01601160316070003157FB8
12E0A32E337DB234>I<B81280A3D803FCC7FC0001151FEE07C01603A21601A21600A417
60150CA31700A2151CA2153C15FC90B5FCA3EBFC00153C151CA2150CA592C8FCAB487EB5
12FEA32B337DB232>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr7 7 17
/Fd 17 72 df<EB3F803801FFF03803E0F83807803C48487E001E7F003E1480A2003C13
07007C14C0A400FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803E0F86C
B45A38003F801B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8
A215267BA521>I<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F
80A4127CC7FC15005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0
EA0180390300030012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F
01F8381C007C0030137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801
FF8091C7FC380001E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00
705B6C5B381F01F03807FFC0C690C7FC19277DA521>I<1438A2147814F81301A2130313
071306130C131C131813301370136013C012011380EA03005A120E120C121C5A12305A12
E0B612E0A2C7EAF800A7497E90383FFFE0A21B277EA621>I<0018130C001F137CEBFFF8
5C5C1480D819FCC7FC0018C8FCA7137F3819FFE0381F81F0381E0078001C7F0018133EC7
FC80A21580A21230127C12FCA3150012F00060133E127000305B001C5B380F03E03803FF
C0C648C7FC19277DA521>I<EB0FE0EB3FF8EBF81C3801E0063803C01F48485AEA0F005A
121E003E131E91C7FC5AA21304EB3FC038FCFFF038FDC078EB003CB4133E48131E141FA2
481480A4127CA4003C1400123E001E131E143E6C133C6C6C5A3803C1F03801FFC06C6CC7
FC19277DA521>I<1230123C003FB512E0A215C0481480A239700007000060130E140C48
131C5C5CC75A5C1301495AA249C7FC5B130E131EA3133E133CA2137CA413FCA813781B28
7DA621>I<137F3803FFE0380781F8380E007C48131E5A801278A3127C007E131EEA3F80
EBE03C6C6C5A380FFCF03807FFC06C5BC613E0487F38079FFC380F07FEEA1E0348C67E48
133FEC1F8048130FA21407A315001278140E6C5B6C5B380F80F03803FFE0C66CC7FC1927
7DA521>I<137F3801FFC03807C1E0380F0070001E1378003E7F003C133E007C131EA200
FC131FA41580A4007C133FA2123C003E137F001E135F380F01DF3807FF9F3801FE1FD800
1013001300A2143E123C007E133CA25C5C007C5B383003C0381C0780D80FFFC7FCEA03F8
19277DA521>I<140EA2141FA34A7EA3EC6FC0A2ECEFE014C7A290380183F0A390380301
F8A201067F1400A249137EA2011C137F01187FA24980013FB5FCA2903960000FC0A201E0
80491307A248486D7EA200038115011207D81FC0497ED8FFF890383FFFE0A22B2A7EA931
>65 D<B612E015FC3907F0003F0003EC0FC0ED07E01503ED01F016F8A6ED03F016E01507
ED1FC0ED7F0090B512FC819039F0003F80ED07E0ED03F0ED01F8ED00FCA2167EA616FCA2
ED01F8ED03F0ED07E00007EC3FC0B7120015F827287EA72E>I<91387FC002903903FFF8
0690390FE01E0E90383F0007017CEB019ED801F0EB00FE4848147E4848143E5B000F151E
48C8FC48150E123EA2007E1506A2127C00FC1500A8127C007E1506A2123EA2003F150C7E
6C7E000715186D14386C6C14306C6C1460D8007CEB01C0013FEB038090390FE01E009038
03FFF89038007FC0272A7DA82F>I<B612F015FE3A07F0003F800003EC07C0ED01F06F7E
167C82A282EE0F80A3EE07C0A317E0A917C0A2160F1780A2EE1F00A2163E5E5E4B5AED07
E00007EC3F80B600FEC7FC15F02B287EA732>I<B712F0A23907F000070003EC00F81678
1638A21618A3160C1560A21600A215E0A2140390B5FCA2EBF0031400A21560A21606A2ED
000CA4161C16181638A21678ED01F80007EC07F0B7FCA227287EA72D>I<B712C0A23907
F0001F0003EC03E015011500A21660A31630A215C01600A31401A2140790B5FCA2EBF007
1401A21400A492C7FCA9487EB512E0A224287EA72B>I<91387FC002903903FFF8069039
0FE01E0E90383F0007017CEB019ED801F0EB00FE4848147E4848143E5B000F151E48C8FC
48150E123EA2007E1506A2127C00FC92C7FCA792387FFFE0127C007E02001300167E123E
A2123F7E6C7E6C7EA26C7ED801F814FEEA007C013FEB039E90390FE00F0E903903FFFC02
9026007FE0C7FC2B2A7DA833>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmtt12 12 20
/Fe 20 127 df<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B6C8A33>46
D<167816F8ED01FCA21503A2ED07F8A2ED0FF0A2ED1FE0A216C0153FA2ED7F80A2EDFF00
A24A5AA25D1403A24A5AA24A5AA24A5AA25D143FA24A5AA24AC7FCA2495AA25C1303A249
5AA2495AA25C131FA2495AA2495AA249C8FCA25B1201A2485AA2485AA2485AA25B121FA2
485AA2485AA248C9FCA25AA2127CA2264D7AC433>I<127CB8128017C0A4178048C81300
4B5A4B5A007C4A5AC8485A5E151F4B5A4B5A93C7FC5D5D4A5A14035D14075D140F5D141F
5D143F5DA24AC8FCA25C5CA213015CA3495AA413075CA5130F5CAA6D5A6D5A2A3F7CBD33
>55 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00C7FCB3A3121FEA3F80EA7FC0
EAFFE0A5EA7FC0EA3F80EA1F000B2B6CAA33>58 D<EB1FFC90B57E000314E048804814FC
48809038F007FFEBE0016E7F153F6C48806C48131FC87F150FA5EC0FFF49B5FC131F137F
48B6FC0007140F4813C0381FFC00EA3FF0EA7FC05B48C7FC5AA56C141F7E6D137FD83FE0
497ED9F807EBFFF06CB712F87E6C14F36C14C1C69138003FF0D91FF090C7FC2D2E7BAC33
>97 D<EA3FFC487E12FFA2127F123F1200ABEC01FE91380FFFC04A13F0027F7F91B512FE
90B7FCECFE07DAF800138002E0EB7FC04AEB3FE04A131FEE0FF091C7FC16074915F81603
A217FC1601A9160317F8A26D140717F06E130F17E06E131FEE3FC06E137F9139F801FF80
DAFE07130091B55A495C6E5BD97E3F13E0D93C0F138090260003FEC7FC2E3E7FBC33>I<
ECFFF0010713FE011FEBFF804914C04914E048B612F048EBC01F9038FE000F485A485A48
48EB07E049EB03C0484890C7FC5BA2127F90C9FCA25A5AA97E7EA27F003FEC01F06DEB03
F86C7E6D13076C6C14F06C6C130F01FFEB1FE06CEBE07F6C90B512C06C1580013F14006D
13FC01075B010013C0252E79AC33>I<ED7FF84B7E5CA280157F1501ABEB01FF010713C1
011F13F1017F13F990B6FC5A4813813907FE003FD80FF8131F49130F4848130749130312
3F491301127F90C7FCA25A5AA97E7E15037F123F6D1307A26C6C130F6D131F6C6C133F6C
6C137F2603FF81B512F091B612F8C602FD13FC6D13F96D01E113F8010F018013F0D901FE
C8FC2E3E7DBC33>I<ECFF80010713F0011F13FC497F90B6FC48158048018013C03A07FE
003FE001F8EB0FF048481307484814F8491303003F15FC491301127F90C7FC16FE15005A
5AB7FCA516FC48C9FC7E7EA36C7E167C6C6C14FE7F6C7E6D13016C6CEB03FC6CB4130F6C
9038C03FF86C90B512F06D14E06D14C0010F1400010313FC9038007FE0272E7BAC33>I<
EA3FFC487E12FFA2127F123F1200AB4AB4FC020713C0021F13F0027F7F91B5FC90B67EED
07FEECF801ECF0004A7F4A7F5CA291C7FCA35BB3A43B3FFFF80FFFFC486D4813FEB56C48
13FFA26C496C13FE6C496C13FC303D7FBC33>104 D<383FFFFC487FB5FCA27E7EC7FCB3
B3AD003FB612F84815FCB712FEA26C15FC6C15F8273D7ABC33>108
D<EC01FE3A3FFC0FFFC0486C4813F000FF017F7F91B512FE6CB7FC6CEBFE07C6D9F80013
8002E0EB7FC04AEB3FE04A131FEE0FF091C7FC16074915F81603A217FC1601A9160317F8
A26D140717F06E130F17E06E131FEE3FC06E137F9139F801FF80DAFE07130091B55A495C
6E5B6E13E0020F1380DA03FEC7FC91C9FCAF383FFFF8487FB57EA26C5B6C5B2E427FAB33
>112 D<ED03FE3B7FFF801FFF80B5D8C07F13E002C1B5FC02C314F014C76C9038CFFE0F
39001FDFF09139FFC007E092388003C092C8FC5C5C5CA25CA25CA35CB2007FB512FEB7FC
A46C5C2C2C7DAB33>114 D<90381FFE0F90B5EA8F80000314FF120F5A5AEBF007387F80
0190C7FC00FE147F5A153FA37E007FEC1F0001C090C7FCEA3FF8EBFFC06C13FF6C14E000
0314F8C680011F13FF01001480020713C0EC007FED1FE0007C140F00FEEC07F01503A27E
A27F15076D14E06D130F6DEB3FC09038FE01FF90B61280160000FD5C00FC14F8D8F83F13
E0D8780790C7FC242E79AC33>I<EB03C0497E130FAA003FB612FC4881B7FCA36C5D2600
0FE0C8FCB3A3161FEE3F80A5167F6E140001075C6E5A9138FE07FE6DB55A6D5C6D5C6E5B
021F1380DA07FCC7FC29387EB633>I<D83FFCEB1FFE486C497E00FF5CA2007F80003F80
0000EC007FB3A75EA25DA26D5B90387F800FDAE03F13FC6DB612FE17FF6D806D01FE13FE
01039038F83FFC010001C0C7FC302C7FAA33>I<3B7FFF8007FFF8B56C4813FC6E5AA24A
7E6C496C13F8D80FC0C7EA0FC06D141F00071680A56D143F00031600A3EC0FC0EC1FE0A2
3A01F83FF07EA3EC7FF8147CA20000157C9039FCFCFCFCA3ECF87CA2017C5C017D137EEC
F03EA2017F133FA26D486C5AA3ECC00F90390F8007C02E2B7EAA33>119
D<3B3FFFC07FFF80486DB512C0B500F114E0A26C01E014C06C496C13803B00FE000FE000
017F495AEB3F804B5A6D6C48C7FC90380FE07E903807F0FEECF1FC903803FBF8EB01FF6D
5B5D6E5A143F6E5A143F814A7E14FF903801FBF0ECF9F8903803F1FCEB07E0157E90380F
C07F011F6D7E90383F801F02007F496D7E01FE6D7E484813033B7FFFC03FFFE0B56C4813
F0A46C496C13E02C2B7DAA33>I<3B7FFF801FFFE0B56C4813F06E4813F8A24A6C13F06C
496C13E0D803F8C7EAFC00000114015E7F000014036D5C137EA2017F495A7FA26E485A13
1FA26D6C485AA214E0010749C7FCA214F01303157EEB01F8A2157C010013FC14FC5D147C
147DEC3FF0A36E5AA36E5AA2141F5DA2143F92C8FCA3147EA214FE003F5B1301387F81F8
1383EB87F0139FEBFFE06C5B5C6C90C9FCEA0FFCEA03F02D427DAA33>I<013E13079039
FF800F8000039038C01FC048EBE03F48EBF07F489038F9FF803A7FE7FFFE00D8FF835B01
015B486C5B007CEB7FC00038011FC7FC220C78BC33>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmcsc10 10.95 6
/Ff 6 119 df<D903FE130690391FFFC00E017FEBF81E3901FE01FC3A03F0003F3E4848
EB0FFE484813074848130390C71201003E1400007E157EA2007C153E12FCA2161EA36C15
0EA27E7F007F92C7FC7F13F0EA3FFCEBFFC06C13FC6CEBFFC06C14FC6C14FF6C15C06C6C
80011F80010380D9003F7F02037F9138003FFF15070301138081167F17C0163F00E0151F
A3160FA27EA36C1680161F7E17006C5D6C153E6D5C6D14FCD8FDF0495AD8F8FC495A3AF0
7FC01FC0011FB55AD8E00349C7FC39C0003FF02A427ABF38>83 D<B8FCA33903FE00016C
489038003F80161F160F1607A21603A317C0ED1C01A393C7FCA2153CA215FC90B5FCA3EB
FC00153CA2151CA21770A392C712E0A41601A2EE03C0A21607160F161F486C14FFB81280
A32C2F7CAE33>101 D<B512FCA3D803FEC8FC6C5AB3A7160EA4161CA4163CA2167C16FC
1501ED03F8486C131FB7FCA3272F7CAE2F>108 D<EC1FF891B5FC903907F00FE090390F
C003F0013FC712FC017E147E49804848EC1F804848EC0FC04848EC07E0000F16F0491403
001F16F8491401003F16FCA2007F16FE90C9FCA34816FFAA6C6CEC01FEA3003F16FCA26D
1403001F16F86C6CEC07F0A26C6CEC0FE0000316C06C6CEC1F806C6CEC3F00017E147E6D
5C90390FC003F0903907F00FE00100B5C7FCEC1FF830317BAF3A>111
D<B612E015FE6F7E3A03FE003FE06C48EB07F8ED01FC6F7EA2828283A594C7FC5E5E4B5A
4B5A4B5AED3FC090B500FEC8FC5D9038FC007FED1F806F7E826F7EA26F7EA582A4EF01C0
16FEA21501486CED0380B538F800FF93383F8700EE1FFEC9EA03F832307CAE37>114
D<B500E0903807FFF0A3000790C7000113806C48913800FE000001167C0000167817706D
15F06D5DA26D6C495AA26E1303011F5DA26D6C49C7FCA26E5B0107140EA26D6C5BA26E13
3C010114388001005CA26E13F06E5B1581023F5BA215C3021F5B15E7020F90C8FCA2EC07
FEA36E5AA26E5AA36E5AA234307EAE38>118 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr6 6 3
/Fg 3 52 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I<13FF000313C0380F03E0381C00F014F800
3E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2380003E0EB00
F01478147C143E143F1230127812FCA2143E48137E0060137C003813F8381E03F0380FFF
C00001130018227DA01E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmsy8 8 5
/Fh 5 104 df<130C131EA50060EB01800078130739FC0C0FC0007FEB3F80393F8C7F00
3807CCF83801FFE038007F80011EC7FCEB7F803801FFE03807CCF8383F8C7F397F0C3F80
00FCEB0FC039781E078000601301000090C7FCA5130C1A1D7C9E23>3
D<137813FE1201A3120313FCA3EA07F8A313F0A2EA0FE0A313C0121F1380A3EA3F00A312
3E127E127CA35AA35A0F227EA413>48 D<0060150C00E0151CB3AA6C153C00701538A200
7815786C15F06CEC01E06C6CEB07C0D807E0EB1F803A03FE01FF00C6B512FC013F13F001
0390C7FC26297CA72F>91 D<141F14FFEB03F0EB0FC0EB1F8014005B133EB3A2137E137C
13FC485A485AEA7FC048C7FCEA7FC0EA03F06C7E6C7E137C137E133EB3A2133F7F1480EB
0FC0EB03F0EB00FF141F18437BB123>102 D<12FCB47EEA0FE0EA01F0EA00FC137C137E
133EB3A37F1480130FEB07E0EB01FEEB007FEB01FEEB07E0EB0F80131F1400133EB3A313
7E137C13FCEA01F0EA0FE0EAFF8000FCC7FC18437BB123>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmcsc10 12 17
/Fi 17 119 df<B612E0A61B067E9826>45 D<1638167CA316FEA34B7EA24B7FA34B7F16
7FA2030E7F163FA24B6C7EA2033C7FED380FA203787FED7007A203E07F1603A24A486C7E
A20203814B7EA202078192C7127FA2020E81173FA24A6E7EA2023C810238140FA2027FB6
7EA302E0C7EA07FE17030101824A80A20103834A80A249C97F187FA2010E707EA2011E83
181F133E85137E48B483000701C0ED7FFFB500FC021FB512FEA347477CC651>65
D<B812E017FE717EC601F0C713E06D48EC1FF8013FED03FC71B4FC716C7E727E727E727E
727E727E180185727EA2F17F80A21AC0193F1AE0A3F11FF0A41AF8AD1AF0A4F13FE0A31A
C0197F1A8019FF1A004E5AA24E5A4E5A61180FF03FC04E5A4EC7FCEF03FE017FED0FF849
6CECFFF0B912804DC8FC17E045447BC353>68 D<49B46C13C0010FEBF001013FEBFC0390
38FF007FD801F8EB0F874848EB03E7D807C0EB01FF48487F001F157F90C8123F003E151F
A2007E150F127C160712FC1603A37E16017EA27F6C6C91C7FC7F7FEA3FFCEBFFC06C13FC
6CEBFFC015FC6CECFF806C15E0C615F86D80011F80010380D9003F1480020314C0EC003F
030313E01500EE7FF0161FA2EE0FF8160712E01603A21601A37EA217F07E16037E17E06C
15076C16C06DEC0F806D141F6DEC3F00D8F8F8147E017F5C3AF01FE007F00107B55AD8E0
0191C7FC39C0001FFC2D4879C53D>83 D<157015F8A34A7EA24A7EA34A7E81A291380E3F
80A2021E7FEC1C1FA24A6C7EA34A6C7EA202F07FECE003A249486C7EA349486C7EA20107
8091C77EA249B67EA24981011CC7121FA2013C810138140FA2496E7EA201F08149140312
0183486C140100074B7ED81FF84A7EB5027F13F8A335357CB43D>97
D<B7FC16F016FC3A03FE0003FF6C489038007F80EE1FE0707E707E707E1601707E177FA2
1880173F18C0A2EF1FE0A418F0AA18E0A4EF3FC0A21880177F180017FE16015F4C5AEE0F
F04C5AEE7FC0486CD903FFC7FCB712FC16F093C8FC34337BB23E>100
D<B812F0A3D803FEC7123F6C48EC07F816011600A21778A21738A3171C1507A31700A25D
A25D157F90B6FCA39038FC007F151F81A2811707A3170E92C7FCA4171EA2173CA2177C17
FC16011607486C143FB812F8A330337BB238>I<DA03FF1303021FEBE00791B5EAF80F01
03903800FE1FD90FF8EB1F3FD91FE0EB07BFD97F806DB4FC49C77E484880484881484881
A2484881121F4981123F5BA2007F82A25B00FF93C7FCAA4BB512F86C7EA2DB0001138000
3F6F1300837F121F7F120F6C7E7F12036C7E6C6C5DEB7FC0D91FE05BD90FF8EB07DF903A
03FF803F8F01009038FFFE07021FEBF80302030180C7FC35357BB340>103
D<B5D8F803B512E0A3D803FEC7380FF8006C486E5AB390B7FCA301FCC71207B3A3486C4A
7EB5D8F803B512E0A333337BB23D>I<B512F8A33803FE006C5AB3B3A7487EB512F8A315
337BB21E>I<B512FEA3000390C9FCEA01FCB3A9EE01C0A416031780A41607A2160F161F
A2167FEEFF00486C1307B8FCA32A337BB233>108 D<D8FFFEEE7FFFA26D93B5FC000318
C06C1880D9DF80EC01DFA2D9CFC0EC039FA3D9C7E0EC071FA2D9C3F0140EA3D9C1F8141C
A2D9C0FC1438A3027E1470A26E14E0A391391F8001C0A291390FC00380A3913907E00700
A2913803F00EA36E6C5AA26E6C5AA3ED7E70A26F5AA3486C6D5A487ED81FFC6D48EB3FC0
B50080020FB5FCA2ED070040337BB24A>I<D8FFFC91383FFFE07FA2D801FF020713006E
EB01FC6E6D5A1770EBDFE0EBCFF013C780EBC3FC13C180EBC0FF80816E7E6E7EA26E7E6E
7E1403816E7E140081ED7F80ED3FC0A2ED1FE0ED0FF0150716F8ED03FC150116FEED00FF
167F17F0163F161FA2160F1607486C1403487ED81FFC1401B56C1300A2177033337BB23D
>I<EC07FF023F13E0903901FE03FC903907F0007FD90FC0EB1F80D93F80EB0FE049C76C
7E01FE6E7E48486E7E48486E7E4848157FA24848ED3F80001F17C0A24848ED1FE0A3007F
17F049150FA300FF17F8AA007F17F06D151FA2003F17E0A26D153F001F17C0A26C6CED7F
80000717006D5D00035E6C6C4A5A6C6C4A5A017F4A5A6D6C495AD90FC0EB1F80D907F001
7FC7FC903901FE03FC9039003FFFE0020790C8FC35357BB33F>I<B612F8EDFF8016E03A
03FE000FF86C48EB03FEED00FF707E707E83161FA283A55FA24C5A5F4CC7FC16FEED03FC
ED1FF090B6128003FCC8FC9038FC003FED0FC06F7E6F7E6F7E82150082A382A383A4EFC0
1CA2167FEFE03C486C023F1338B500F890381FF07893380FF8F0933803FFE0CAEA7F8036
347BB23C>114 D<007FB812C0A3903A8007FC003F277E0003F8130F007C160700781603
00701601A200F017E0A2481600A6C71600B3AA4A7E4A7E010FB512FEA333327CB13B>
116 D<B500E0ECFFFEA3000790C8EA3FF0D803FCED1FC00001EE0F806D16001200170E6D
151E6D151CA26D6C5CA26E1478011F157080010F5DA26E130101075D6E130301035DA26D
6C49C7FCA26E5B0100140EA2027F5BA2ED803C023F133815C0021F5BA2EDE0F0020F5B15
F102075BA2913803FB80A215FF6E90C8FCA26E5AA3157CA2153837347DB23D>118
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj lasy10 12 1
/Fj 1 51 df<003FB9FCBA1280A300F0CA1207B3B3ADBAFCA4393977BE4A>50
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmmi8 8 12
/Fk 12 123 df<92387FC003913903FFF80791391FC03E0F91397E00071FD901F8EB03BF
4948EB01FED90FC013004948147E49C8FC017E157C49153C485A120348481538485AA248
5A173048481500A2127F90CAFCA35A5AA292381FFFFCA29238003FC0EE1F80163F1700A2
127E5E167E7EA26C6C14FE000F4A5A6C7E6C6C1307D801F8EB1E3CD8007EEBFC3890391F
FFE018010390C8FC302F7CAD37>71 D<013FB6FC17E0903A00FE0007F0EE01FC4AEB007E
A2010181A25C1880010316005F5CA2010715FEA24A5C4C5A010F4A5A4C5A4AEB1F8004FF
C7FC91B512F84914C00280C9FCA3133F91CAFCA35B137EA313FE5BA312015BA21203B512
E0A2312D7DAC2D>80 D<ED7FC0913807FFF891381F80FE91397C001F804948EB0FC0D907
E0EB07E04948EB03F049C71201013E15F8017EEC00FC5B485A484815FE0007167E5B120F
485AA2485A17FEA248C9FCA300FEED01FCA3EE03F8A217F016074816E06C150F17C0EE1F
80007EED3F00143E003E01FF137E3A3F01C380FC3A1F0381C1F890398700C3E0D80FC6EB
CFC0D807E601DFC7FCD803F613FE3900FF03F8903A3FFFE00180EB07FE90C7130303F013
005E5EEDF83EEDFFFE5E5EA26F5A16C0031FC7FC2F3B7CAD38>I<013FB512F816FF903A
00FE001FC0EE07E04A6D7E707E01016E7EA24A80A213034C5A5CA201074A5A5F4A495A4C
5A010F4A5A047EC7FC9138C003F891B512E04991C8FC9138C007C04A6C7E6F7E013F8015
0091C77EA2491301A2017E5CA201FE1303A25BA20001EE038018005B5F0003913801FC0E
B5D8E000133CEE7FF0C9EA0FC0312E7CAC35>I<913807F00691383FFE0E9138F80F9E90
3903E001FE903807800049C7127C131E49143CA2491438A313F81630A26D1400A27FEB7F
8014F86DB47E15F06D13FC01077F01007F141F02011380EC003F151F150FA215071218A3
150F00381500A2151EA2007C5C007E5C007F5C397B8003E039F1F00F8026E07FFEC7FC38
C00FF0272F7CAD2B>I<90260FFFFCEB7FFFA29026007FC0EB0FF06E48148018006E6C13
1E1718020F5C6F5B02075C6F485A020349C7FCEDF8065E6E6C5A5E6E6C5A5EED7F8093C8
FC6F7EA26F7E153F156FEDCFE0EC018791380307F0EC0703020E7F141C4A6C7E14704A6C
7E495A4948137F49C7FC010E6E7E5B496E7E5BD801F081D807F8143FD8FFFE0103B5FCA2
382D7EAC3A>88 D<1307EB0F80EB1FC0A2EB0F80EB070090C7FCA9EA01E0EA07F8EA0E3C
EA1C3E123812301270EA607EEAE07C12C013FC485A120012015B12035BA21207EBC04014
C0120F13801381381F01801303EB0700EA0F06131EEA07F8EA01F0122E7EAC18>105
D<15E0EC01F01403A3EC01C091C7FCA9147CEB03FE9038078F80EB0E07131C013813C013
30EB700F0160138013E013C0EB801F13001500A25CA2143EA2147EA2147CA214FCA25CA2
1301A25CA21303A25CA2130700385BEAFC0F5C49C7FCEAF83EEAF0F8EA7FF0EA1F801C3B
81AC1D>I<130E131FA25BA2133EA2137EA2137CA213FCA2B512F8A23801F800A25BA212
03A25BA21207A25BA2120FA25BA2001F1310143013001470146014E0381E01C0EB038038
1F0700EA0F0EEA07FCEA01F0152B7EA919>116 D<013F137C9038FFC1FF3A01C1E38380
3A0380F703C0390700F60F000E13FE4813FC12180038EC0700003049C7FCA2EA20010000
5BA313035CA301075B5D14C000385CD87C0F130600FC140E011F130C011B131C39F03BE0
38D8707113F0393FE0FFC0260F803FC7FC221F7E9D28>120 D<EA01E0D807F8130ED80E
3C131FD81C3E133F0038143E12301270D8607E137ED8E07C137C12C013FC484813FC0000
14F812015B1401000314F013E0A21403000714E013C0A2140715C00003130FEBE01F143F
3901F07F8038007FEFEB1F8FEB001F1500A2003E133EA2007E5B5C387C01F0387003E038
3007C0383C0F80D80FFEC7FCEA03F0202C7E9D23>I<011E1330EB3F809038FFC07048EB
E0E0ECF1C03803C0FF9038803F80903800070048130EC75A5C5C5C495A495A49C7FC131E
13385B491340484813C0485A38070001000EEB0380380FE007391FF81F0038387FFF486C
5A38601FFC38E00FF038C003C01C1F7D9D21>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmsl10 10.95 23
/Fl 23 119 df<EC07F8EC3FFF9138FC0FC0903903F003E0903907C001F0D90F8013F849
C7FC013E14FC017E147C017C147E13FC485AA20003157F5B1207A2120F5BA2121F16FF5B
A2123FA44848EB01FEA648C7EA03FCA5ED07F8A25A16F0A2150F16E0A3ED1FC0A2168000
7E143F1600157E123E003F5C4A5AD81F805B000FEB07E06C6C485A2603F03FC7FC3800FF
FCEB1FE0283F79BC2D>48 D<EC01FE91380FFFE0023F13F89138FC07FC903901E001FE90
3907C000FF49C7EA7F80011E15C0163F4915E05B0170141F13FF80A35A163FA26C90C7FC
137E0118EC7FC090C8FCEEFF80A24B1300A24B5A5E4B5A4B5A4B5A5E4B5A4BC7FC15FEEC
01F84A5A4A5A4A5A4AC8FC143E5C5CEB01E04948130E49485B49C7FC131E495C13705B48
485C484814F0000FB6FC5A485D5AB7FC5EA22B3D7CBC2D>50 D<01061403D90780131F90
390FF801FE91B512FC16F816F016E0168049EBFE0015F890381C7FC091C8FCA3133C1338
A513781370A2EC1FE0ECFFF8903873E03E9038FF001F01FCEB0F804914C049EB07E04914
F049130390C7FC16F8A61507A21206EA3F80487EA2150F00FF15F0A24914E090C7121F00
FC15C000F0143F00701580ED7F0012786C14FE4A5A6C495A390F800FE03907E03FC06CB5
C7FCC613FCEB1FE0283F7ABC2D>53 D<ED7F80913803FFE091380FC0F091383E003802FC
131C495A494813FE903807E003EB0FC090381F8007133FD97F0013FC01FE1303ED01F048
4890C7FC1203A2485AA2120F5BA2001FEB3F809038E0FFE0393FE3C0F89038E7007C01EE
7F01FC133F4848EB1F80A24914C05B16E0A2485AA216F05BA2ED3FE0A290C7FCA4157F16
C0A316804814FF007E1500007F5C14016C5C4A5A6C6C485A4A5A6C6C485A2607E07FC7FC
3803FFFEC613F8EB3FC0273F78BC2D>I<17E016011603831607A2160FA2161F83163FA2
167F167716F7EEE7FCED01E316C3150316831507EE03FEED0F01150E151E151C153C0338
7FED7800157015F05D4A4880177F4A5AA24AC7FCA2020E81173F5C021FB6FC5CA20270C7
EA3FE0171F5CA2495AA2494881170F49C8FCA2130EA24982013C1507A2137CD801FE4B7E
2607FF80EC3FFEB500F00107B512FC19F85E3E417DC044>65 D<013FB812F8A39026007F
F0C7127F6E48140F18034B14011800A31978147F4B1570A502FF147092C7FCA3190017F0
495D4A1301A21607161F91B6FC495DA29138FC003F160F1607160301075D5CA219E01801
19C0010FEC07004A90C712031980A218071900011F5E5C181EA2183E183C013F167C4A15
FC4D5A1707017F151F01FF4AB45AB9FCA2603D3E7DBD3E>69 D<013FB612FEEFFFE018F8
903B007FF0000FFC6E48EB01FF7113804BEC7FC0183F19E0F01FF0A2147F5D19F8A402FF
ED3FF092C8FCA219E0A2F07FC05B4AEDFF8019004D5A4D5AEF0FF80103ED3FE04A903801
FF8091B648C7FC17F002FCCAFCA213075CA5130F5CA5131F5CA5133F5CA3137F497EB612
E0A25D3D3E7DBD3E>80 D<9238FF80070207EBE00F021FEBF81E91387F00FE02FCEB1F3E
D903F0EB0FFE49481307494813034AEB01FC49C7FC491400133E137E177C491578A57F17
70A26D1500808080EB7FFEECFFE06D13FEEDFFC06D14F06D14FC010380010080143F0203
1480DA003F13C015031500EE7FE0163F161FA2160F121CA31607160F003C16C0A3178000
3E151F1700007E5D007F153E6D5C16FC01E0495AD87DF0495AD8FCFCEB0FC03AF87F803F
8027F01FFFFEC7FCD8E00713F839C0007FC030427BBF33>83 D<EB3F80EA1FFFA3C6FC13
7FA291C9FCA55B5BA512015BA4EC07F80003EB3FFF9039F8F80FC09039FBE003E09039FF
8001F891C77E5B4848147E49147F5B821780A2120F5B17C0A3167F001F16805BA4EEFF00
123F5B4B5AA24B5A5E007F4A5AA24B5A6D495A4BC7FCD87CE0137E39F87001F839F03C07
E039E00FFF80260003FCC8FC2A4077BE33>98 D<EC1FF0ECFFFE903903F01F8090390FC0
03C0D93F0013E0017E130F49131F000115F04848EB3FE0485AA24848EB1FC0001FEC0F00
4990C7FC123FA2485AA412FF90C9FCA96CEC0380150716006C6C5B151E001F5C6C6C5B6C
6C5B6C6C485A3901F80F8026007FFEC7FCEB0FF0242A7AA828>I<EE03F8ED01FFA3ED00
0F1607A217F0A4160FA217E0A4161FA217C0A491380FF03FECFFFC902603F81F13809039
0FC007BF90391F8003FF90387E0001497F0001157F48481500485A120F5B001F5D485A5E
5B127FA2150112FF90C75BA41503A25EA37E1507A26C4A5A7F001F141F6C6C133F6C6CEB
FFF83B03F001EFFFC03900F80F8F90383FFE0FD90FF0EBE0002D407ABE33>I<EC3FE090
3801FFF8903807E07E90380F801F90393F000F80017E14C049EB07E0485A12034848EB03
F0485AA2121F5B123FA248481307A290B6FCA2D8FF80C8FC90C9FCA87EED01C015036C15
806D1307001FEC0F006D131E000F5C6C6C5B6C6C485A3900FC07C0D93FFFC7FCEB07F824
2A7BA828>I<1478EB01FE130314FFA25B14FE130314FCEB00F01400ACEB03F8EA01FF14
F0A2EA001F130FA314E0A5131F14C0A5133F1480A5137F1400A55B5BA4EA03FF007F13F0
A2B5FC183E7DBD1A>105 D<143FEB1FFF5BA213017FA214FEA5130114FCA5130314F8A5
130714F0A5130F14E0A5131F14C0A5133F1480A5137F1400A55B5BA4EA03FF007F13F8A2
B5FC183F7DBE1A>108 D<902707F007F8EB03FCD803FFD91FFF90380FFF80913CE0781F
C03C0FE09126E1E00FEBF0073E001FE38007E1C003F090260FE700EBE38002EEDAF70013
F802FC14FE02D85C14F84A5CA24A5C011F020F14074A4A14F0A5013F021F140F4A4A14E0
A5017F023F141F91C74914C0A549027F143F4992C71380A300014B147F486C496DEBFFC0
B5D8F87FD9FC3F13FEA347287DA74C>I<903907F007F8D803FFEB1FFF9139E0781FC091
38E1E00F3B001FE38007E090380FE70002EE14F014FC14D814F85CA24A130F131F4A14E0
A4161F133F4A14C0A4163F137F91C71380A4167F5B491500A300015D486C491380B5D8F8
7F13FCA32E287DA733>I<EC0FF0ECFFFE903903F01F8090390FC007C049C66C7E013E6D
7E01FC6D7E48488049147C0003157E485A000F157F5B121FA2485AA2007F1680A2170048
C85AA54B5AA25E5A6C4A5A7E4B5A5E6C140F6C6C5C4B5A6C6C013EC7FC6C6C5B6C6C485A
3900FC0FE090383FFF80D90FF8C8FC292A7BA82D>I<91387F01FE903A7FFF0FFFC09139
FE3E03F09238F801F8903A03FFE000FE6D49137F4B7F92C713804A15C04A141FA218E0A2
0103150F5C18F0A3171F010716E05CA3173F18C0130F4A147F1880A2EFFF004C5A011F5D
16034C5A6E495AEE1FC06E495AD93FDC017EC7FC91388F01F8913883FFE0028090C8FC92
C9FC137FA291CAFCA45BA25BA31201487EB512F8A3343A81A733>I<903907F01F80D803
FFEB7FE09138E1E1F09138E387F839001FE707EB0FE614EE02FC13F002D813E09138F801
804AC7FCA25C131FA25CA4133F5CA5137F91C8FCA55B5BA31201487EB512FEA325287EA7
24>114 D<9138FF81C0010713E390381F807F90397C003F8049131F4848130F5B000314
07A248481400A27FA27F6D90C7FCEBFF8014FC6C13FF6C14C015F06C6C7F011F7F130790
38007FFE1403140100381300157EA2123C153E157E007C147CA2007E147815F8007F495A
4A5A486C485A26F9E01FC7FC38E0FFFC38C01FE0222A7DA824>I<EB0380A4130791C7FC
A25BA25BA2133EA2137E13FE12011207001FB512C0B6FCA2D801FCC7FCA312035BA51207
5BA5120F5BA41407001F130E13C0A4141E141C1380A26D5AA2000F5B14F03807E1E03801
FF80D8007EC7FC1A3978B723>I<01FE147F00FFEC7FFF4914FEA20007140300031401A3
4914FCA4150312074914F8A41507120F4914F0A4150F121F4914E0A2151FA3153F4914C0
157F15FFEC01DF3A0FC003BFE09138073FFF3803F01E3801FFF826003FE01380282977A7
33>I<B539E007FFF05D17E02707FE000313006C48EB01FC6F5A5E00014A5A5EA24B5A6D
1307000092C7FC5D150E6D5B7F5DA25D1480013F5B14815D14C3011F5B02C7C8FCA214CE
14EEEB0FFCA25CA26D5A5CA25CA26D5A2C2878A630>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmmi10 10.95 2
/Fm 2 72 df<1403A44A7EA84A7EA400F0163CD8FF80EC07FCD83FFE9038C1FFF0000FB7
12C000031600C615FC011F14E001071480010149C7FC9038007FF8A24A7EA2497FA29038
03FCFF4A7E49486C7EECE01F49486C7EEC800749486C7E013E6D7E013C13004914780170
14384980014014082E2C81AC2D>63 D<DC3FF0130E923803FFFE031F9038FF801C923A7F
F00FC03C913B01FF0001E07CDA07FC903800F0FCDA0FF0EC79F8DA3FC0143F4A48141F4A
C8120FD903FC16F0495A49481507495A013F17E04A1503495A49C9FC4818C05B1203485A
1980485AA2485A95C7FC123F5BA2127F5BA312FF5BA3043FB512E0A290C8FC9339001FF8
00170F60A2171F60A36C6C153F60A26C7E177F001F5F7F6C6C15FF00075D6C6C4A90C7FC
6C6CEC07BF6CB4EC1F1FD97FC0EB7E0F903A1FF803F80E0107B5EAE00601010280C8FC90
26001FF8C9FC3F427BBF47>71 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmsy10 12 10
/Fn 10 121 df<007FB912E0BA12F0A26C18E03C04789A4D>0 D<0060160600F8160F6C
161F007E163F6C167E6C6C15FC6C6CEC01F86C6CEC03F06C6CEC07E06C6CEC0FC06C6CEC
1F80017EEC3F006D147E6D6C5B6D6C485A6D6C485A6D6C485A6D6C485A6D6C485ADA7E3F
C7FCEC3F7E6E5A6E5A6E5AA24A7E4A7EEC3F7EEC7E3F4A6C7E49486C7E49486C7E49486C
7E49486C7E49486C7E49C7127E017E8049EC1F804848EC0FC04848EC07E04848EC03F048
48EC01F84848EC00FC48C9127E007E163F48161F48160F00601606303072B04D>2
D<147014F8A81470007815F0007C1401B4EC07F8D87F80EB0FF0D83FE0EB3FE0D80FF0EB
7F80D803F8EBFE003900FE73F890383F77E090380FFF80D903FEC7FCEB00F8EB03FE9038
0FFF8090383F77E09038FE73F83903F870FED80FF0EB7F80D83FE0EB3FE0D87F80EB0FF0
D8FF00EB07F8007CEC01F000781400C7140014F8A81470252B7AAD32>I<49B4FC010F13
E0013F13F8497F48B6FC4815804815C04815E04815F0A24815F8A24815FCA3B712FEA96C
15FCA36C15F8A26C15F0A26C15E06C15C06C15806C15006C6C13FC6D5B010F13E0010190
C7FC27277BAB32>15 D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB
07FCEB01FF9038007FC0EC1FF0EC07FC913801FF809138007FE0ED1FF8ED07FE923800FF
80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF8EF03FE943800FF80F03FE0F00FF0A2
F03FE0F0FF80943803FE00EF0FF8EF3FE0EFFF80DC03FEC7FCEE0FF8EE3FE0EEFF80DB03
FEC8FCED1FF8ED7FE0913801FF80DA07FEC9FCEC1FF0EC7FC04948CAFCEB07FCEB1FF0EB
7FC04848CBFCEA07FCEA1FF0EA7FC048CCFC12FC1270CDFCB0007FB912E0BA12F0A26C18
E03C4E78BE4D>21 D<0060170C00F0171EB3B3A66C173EA20078173C007C177C007E17FC
003E17F86CEE01F06D15036C6CED07E06C6CED0FC0D803F8ED3F80D801FEEDFF0026007F
C0EB07FCD93FFCEB7FF8010FB612E001031580D9007F01FCC7FC020713C0373D7BBA42>
91 D<ED0FE015FF913803FC00EC0FE0EC3FC04A5A4AC7FC5C495AA2495AB3AD495AA249
5A131F495A495A01FEC8FCEA07F8EAFFE0A2EA07F8EA00FEEB7F806D7E6D7E130F6D7EA2
6D7EB3AD6D7EA26D7E806E7E6E7EEC0FE0EC03FC913800FFE0150F236479CA32>102
D<12FEEAFFE0EA07F8EA00FEEB7F806D7E6D7E130F6D7EA26D7EB3AD6D7EA26D7E806E7E
6E7EEC0FE0EC03FC913800FFE0A2913803FC00EC0FE0EC3FC04A5A4AC7FC5C495AA2495A
B3AD495AA2495A131F495A495A01FEC8FCEA07F8EAFFE048C9FC236479CA32>I<126012
F0B3B3B3B3B3A81260046474CA1C>106 D<EB1FC0EBFFF83801F03E3807C00F390F8007
80001FEB03C0393F0001E01400007E14F0140314075AA3EC03E0EC00801500A3127EA212
3E123F7E6C7E6C7E6C7E6C7EEA0078131EEB7F803801F9E03803E0F8380FC03C48487EEB
001F48EB0F80007EEB07C015E0EC03F05AA2EC01F8A6127EA2EC03F07E7E390F8007E0D8
07C013C00003130F3901E01F803900F83E00EB3CFCEB0FF0EB03C0EB00F0147C8080EC0F
80EC07C015E0140315F0A2EC01F8A31208123E127FA3EC03F0127E12780038EB07E0123C
6CEB0FC06C14803907801F003803E07CC6B45AEB1FC01D5A79C52C>120
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmmi12 12 28
/Fo 28 123 df<161CA21618A21638A21630A21670A21660A216E0A25EA21501A25EA215
03A293C8FCA25DED7FE0913807FFFE91391FC63F809139FE0E07C0D901F8EB03F0903A07
E00C00F8D91FC08090263F001C137E017E814913184848ED1F8000031438485A48480130
14C0A248481370A248481360A248C712E0A24B133F481780481301A24B137F1800140348
16FE92C7FC4C5A6C49495AA2007E0106495A4C5A6C010E495A4C5A261F800C49C7FC000F
15FC3A07C01C01F8D803E0EB07E03A01F8181F80D8007E01FEC8FC90381FFFF801011380
D90030C9FCA21470A21460A214E0A25CA21301A25CA21303A291CAFCA332597BC43A>30
D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>58 D<121EEA7F8012FF13C0A2
13E0A3127FEA1E601200A413E013C0A312011380120313005A1206120E5A5A5A12600B1D
78891B>I<1830187018F0A217011703A24D7EA2170F171FA21737A2176717E717C79338
0187FCA2EE0307EE07031606160CA216181638163004607FA216C0030113011680ED0300
A21506150E150C5D845D03707F15605DA24A5A4AB7FCA25C0206C87F5C021C157F14185C
A25C14E05C495A8549C9FC49163F1306130E5B133C137C01FE4C7ED807FFED01FF007F01
F0027FEBFFC0B5FC5C42477DC649>65 D<91B87E19F019FC02009039C00003FF6F480100
138003FFED3FC01AE093C8121FF10FF0A24A17F84B1507A314035D190FA2020717F04B15
1F1AE0193F020F17C04BED7F80F1FF004E5A021F4B5A4B4A5AF01FF0F03FC0023F4AB4C7
FC4BEB1FFC92B612F018FEDA7FC0C7EA7F804BEC1FC0F00FF0727E02FF6F7E92C8FC727E
A249835CA313035CA301075F4A1503A24E5A130F4A4B5A4E5AA2011F4C5A4A4B5A4D485A
013F4B48C7FCEF0FFC4AEC3FF801FF913801FFE0B9128005FCC8FC17C045447CC34A>I<
4CB46C1318043F01F013384BB512FC0307D9007E1378DB1FF090380F80F0DB7F80EB03C1
DA01FEC7EA01C34A48EC00E7DA0FF0ED7FE04A48153F4A5A02FFC9121F494817C0494816
0F495A130F4A178049481607495A137F4948170091CAFC5A485A1906485AA2485A96C7FC
121F5BA2123F5BA3127F5BA4485AA419C0A2180161127F180396C7FC6018066C6C160E60
1818001F17386D5E000F5F6D4B5A6C6C4B5A00034CC8FC6C6C150E6C6C153C017F5DD93F
C0EB01E0D91FF0EB0FC0D907FE017FC9FC0101B512FCD9003F13E0020790CAFC45487CC5
46>I<4CB46C1318043F01F013384BB512FC0307D9007E1378DB1FF090380F80F0DB7F80
EB03C1DA01FEC7EA01C34A48EC00E7DA0FF0ED7FE04A48153F4A5A02FFC9121F494817C0
4948160F495A130F4A178049481607495A137F4948170091CAFC5A485A1906485AA2485A
96C7FC121F5BA2123F5BA3127F5BA4485A4CB612805EA293C7EBE000725AA3007F60A218
FF96C7FCA26C7E5F606C7EA2000F16036D5E6C6C15070003160F6C6C151F6C6CED3DF8D9
7F8014786D6CEB01E0D91FF0903807C078D907FE90387F00700101B500FC1330D9003F01
F090C8FC020790CAFC45487CC54D>71 D<91B712FEF0FFE019F802009039C0000FFE6F48
EB01FF03FF9138007F80F13FC093C8EA1FE0A24AEE0FF0A25D1AF81403A25DA21407F11F
F05DA2020FEE3FE0A24B16C0197F021F1780F1FF004B4A5A4E5A023F4B5A4E5A4BEC3FC0
06FFC7FC027FEC07FC92B612F018800380CAFC14FFA292CBFCA25BA25CA21303A25CA213
07A25CA2130FA25CA2131FA25CA2133FA25CEBFFE0B612E0A345447CC33F>80
D<EE03FF047F13F0923901FC01FC92390FE0007FDB3F80EB1FC003FEC76C7EDA01F8EC03
F0DA07F0814A486E7EDA1F806E7E027FC9FC02FE167F495A4948EE3F801307494817C04A
161F495A013F18E0495AA249CAFC485A1AF012035B12075B120F5B001F19E0193F5B123F
A34848EF7FC0A31A8019FF485A1A0060A24E5AA2614E5AA2007F4D5AA24E5A4E5A61003F
021F147F6DD9FFC049C7FC913A01E0E001FE001F90260380705B913A07003003F8260FE0
0690383807F00007010E9038180FE0D9F00CEC1F80D803F84BC8FC0001011CEB1CFE2600
FC18EB1DF8017EEC1FF0D93F9C14C0D90FEC017FC9FC902703FE03FC14600100B5FC9126
0FFE1C14E091C7001E5C1801A24E5A043F1307180FDD803FC7FC71B4FCEFFFFE705BA260
60705B60040390C8FCEE00FC44597CC54D>I<91B712F018FF19E002009039C0003FF86F
48EB07FC03FFEC01FEF0007F93C8EA3F801AC0F11FE05C5D1AF0A214035DA30207EE3FE0
5DA2F17FC0020F17804B15FF1A004E5A021F4B5A4B4A5AF00FE04E5A023F037FC7FC4BEB
03FCEF1FF092B612804A4AC8FC923980007F80EF0FC0EF07F002FF6E7E92C77F1701845B
4A1400A2170113035CA2170313075CA24D5A130F5CA3011F18185CA2013F4C13381A304A
6F1370D9FFE0020314E0B600E0ED01C00501EB0380943900FE0F00CBEA3FFEF007F04546
7CC34A>I<9339FF8001800307EBF003033F13FC9239FF007E07DA01F8EB0F0FDA07E090
38079F004A486DB4FC4AC77E023E804A5D187E5C495A183C495AA213074A1538A3130F18
3080A295C7FC806D7E8014FF6D13E015FC6DEBFFC06D14FC6E13FF6E14C0020F80020314
F8EC003F03077F9238007FFE160F1603707E8283A283A21206A4000E163EA2120C177E00
1E167CA25F5F003F15014C5A6D4A5A4C5A486C4AC8FC6D143ED87CF85CD8787E495A3AF0
1FC00FE0D8E007B51280010149C9FC39C0003FF039487BC53C>I<48BA12C05AA291C7D9
80001380D807F092C7121F4949150F0180170748C75B1903120E48020316005E12181238
003014074C5C00701806126000E0140F485DA3C8001F92C7FC5EA3153F5EA3157F5EA315
FF93CAFCA35C5DA314035DA314075DA3140F5DA3141F5DA3143F5DA2147FA214FF01037F
001FB612FCA25E42447EC339>I<003FB500F80103B512E0A326003FF8C8381FF800D91F
E0ED07E0013F705A615C96C7FC60017F16065CA2180E01FF160C91C9FCA2181C4817185B
A21838000317305BA21870000717605BA218E0120F495EA21701121F495EA21703123F49
93C8FCA25F127F491506A2170E00FF160C90C9FC171CA21718173817304816705F6C5E6C
15014C5A4CC9FC6C150E6D141E001F5D6D5C6C6CEB01E06C6C495A6C6CEB1F80C6B401FE
CAFC90387FFFF8011F13E0010190CBFC43467AC342>I<007FB56C91381FFFF8B65DA200
0101E0C8000313006C0180ED01FCF000F0614E5AA2017F4C5A96C7FC1806A2606E5DA201
3F5E1870186060A24D5A6E4AC8FCA2011F1506170E170C5FA26E5C5FA2010F5D16015F4C
C9FCA26E13065EA201075C5EA25E16E06E5B4B5A13034BCAFC1506A25D151CECFE185D13
015D5DA26E5AA292CBFC5C13005C5CA25CA25C45467BC339>I<023FB500E0011FB5FCA3
9126007FFEC7000313E0DB3FF8913801FE006F486E5A1AF06F6C4A5A626F6C4A5A0706C7
FC190E6F6C5C616F6C5C6171485A6F5D4EC8FC93387FC00660706C5A6060706C5A17F193
380FFB8005FFC9FC5F705AA2707EA3707E5E04067F5E93381C7FC0163816704C6C7EED01
C04B486C7E160015064B6D7E5D4B6D7E5D5D4A486D7E14034AC76C7E140E5C4A6E7F1430
02E06F7E495A0103707E495A131F496C4B7E2603FFE04A487E007F01FC021FEBFFF0B5FC
A250447EC351>88 D<B66C91381FFFFCA21AF8000101E0C8000313806C49923801FC004A
16F06D6C5E4E5A616D6C4BC7FC180E606D6C1518606E5D010F5E4D5A6D6C14034DC8FC17
066D6C5C5F5F6D6C5C17E04C5A6D01805B4CC9FCEDC006027F5B5EEDE038023F5B16606E
6C5AEDF18003F3CAFCEC0FFEA25D6E5A5D140FA35D141FA35D143FA35D147FA392CBFC5C
A3495AA3EB07FF0007B6FCA25D46447CC339>I<020FB812C05C1A809326800001130003
F8C7FCDA3FE04A5A03804A5A92C8485A027E4B5A027C4B5A02784B5A4A4B5AA24A4A90C7
FC4A4A5A01014B5A4D5A4A4A5A01034B5A91C8485A4D5AA290C84890C8FC4C5A4C5A4C5A
4C5A4C5A4C5A4C5AA24B90C9FC4B5A4B5A4B5A4B5A4B5A4B5AA24B5A4A90CAFC4A5A4A48
14064A5A4A5A4A48140E4A48140CA24A48141C4990C8121849481538495A49485D495A49
4815F049485D1701494814034890C8485A4848150F4848151F48484B5A484815FF484814
03043F90C8FC48B8FCB9FC5F42447BC343>I<EC07F8EC3FFF9138FC07C0903903F000E0
49481370D91F80133049C71270017EEB03F801FE1307485A4848EB0FF012075B000FEC07
C0484890C7FCA2485AA2127F5BA312FF90C9FCA45AA5161816381670007E15E0ED01C06C
EC0380ED07006C6C131E000F14383907C001F03903F00FC02600FFFEC7FCEB1FF0252D7C
AB2A>99 D<EE01FC16FFA3EE03F816011603A217F0A21607A217E0A2160FA217C0A2161F
A21780A2163FA21700EC0FC091387FF07F903801F838903907E01C7E90380FC00E90393F
0007FE49130301FE5C485A491301120348485C120F491303121F5E485A1507127F495CA2
150F12FF90C75BA2151FA2485DA2033F13301770EE0060A24B13E017C015FE007E130102
031301003ED9073E1380003F010E13036C011C14006C6C486C5A3A07C0F00F0E3A01FFC0
07FC3A007F0001F02E467CC433>I<163C16FEA21501A316FCED00701600AE15FCEC03FF
91380F0780021C13C091383803E0147014E014C01301EC8007130314005B0106130F130E
010C14C090C7FC151FA21680A2153FA21600A25DA2157EA215FEA25DA21401A25DA21403
A25DA21407A25DA2140FA25DA2141F5DA2143F001C91C7FC127F48137E5CA248485AEB03
E038F807C038781F80D83FFEC8FCEA07F0275681C128>106 D<14FE137FA3EB01FC1300
1301A25CA21303A25CA21307A25CA2130FA25CA2131FA25C163F013FECFFC0923803C0E0
9138000703ED1E0F491338ED701F017E13E0EC01C001FE018013C00203EB07004948C8FC
140E00015B5C495A5C3803FBC001FFC9FC8014F83807F1FE9038F03F809038E00FE06E7E
000F130381EBC001A2001FED01C017801380A2003F15031700010013F05E481506160E00
7E150C161C00FE01005BED787048EC3FE00038EC0F802B467BC433>I<01F8EB03FCD803
FEEB1FFFD8071F90387C0FC03B0E0F80E007E03A0C07C3C003001CD9C7007F001801CE13
01003801DC80003013D8EB0FF800705B00605BA200E0491303D8C01F5D5C12001607013F
5D91C7FCA2160F495D137E161F5F13FE49143F94C7FC187000014B136049147E16FE4C13
E0000317C049150104F81380170300071700495D170EEE781C000FED7C3849EC1FF0D803
80EC07C0342D7DAB3A>110 D<141C147EA314FE5CA313015CA313035CA313075CA2007F
B512FCB6FC15F839000FC000A2131F5CA3133F91C7FCA35B137EA313FE5BA312015BA312
035BA21570000714605B15E015C0000F130101C013801403EC070000071306140E5C6C6C
5A000113F03800FFC0013FC7FC1E3F7EBD23>116 D<133ED9FF8014E02603C3C0EB03F0
380703E0380601F0000E1507121CD818035D12380030150FA2D870075D00605B161FEAE0
0F00C0495CEA001F4A133FA2013F92C7FC91C7FC5E5B017E147EA216FE13FE495CA20301
EB01801703484802F81300A25F0303130616F000001407030F130E6D010D130C017C011D
131C033913186D9038F0F838903A1F03C07870903A07FF803FE0903A01FC000F80312D7D
AB38>I<013E140ED9FF80EB3F802603C3C0137F380703E0380601F0120E121CD8180314
3F0038151F0030150FA2D87007140700605BA2D8E00F150000C0497FEA001F4A5B160613
3F91C7FC160E49140C137EA2161C01FE14185B1638163016704848146016E05E15010000
5D15036D49C7FC1506017C130E017E5B6D137890380F81E06DB45AD900FEC8FC292D7DAB
2F>I<02FCEB07E0903A03FF801FFC903A0F07C0781E903A1C03E0E01F903A3801F1C07F
D9700013804901FB13FF4848EBFF00495B000316FE90C71438484A130012061401000E5C
120CC7FC14035DA314075DA3140F5DA3021F143817305D1770023F1460121E003F16E026
7F807FEB01C0026F148000FF01EF1303D901CFEB070000FE903887C00E267C03835B3A3C
0F01E0783A1FFC00FFE0D803F0EB3F80302D7EAB37>120 D<133ED9FF8014E02603C3C0
EB03F0380703E0380601F0000E1507001C16E0EA180312380030150F007016C0EA60075C
161FD8E00F158000C05BEA001F4A133F1700133F91C7FC5E49147E137EA216FE01FE5C5B
A215015E485AA215035EA200001407150F6D5C017C131F153F6D13FF90391F03CFC09038
07FF8F903801FC0F90C7121F5EA2153F93C7FCD807C05BD81FE0137E5DA24848485A4A5A
01805B39380007C00018495A001C49C8FC6C137C380781F83803FFE0C66CC9FC2C407DAB
30>I<027CEB018049B413034901801300010F6D5A49EBE00E6F5A90393F03F838903978
007EF80170EB1FF00160EB01E001E05C49495A90C748C7FC150E5D5D5D5D4A5A4A5A4AC8
FC140E5C5C5C5CEB03C049C9FC130E49141C4914185B49143848481430491470D8039014
F048B4495A3A0FEFC007C0391E03F01FD81C01B55A486C91C7FC485C00606D5A00E0EB3F
F048EB0FC0292D7CAB2D>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmbx12 12 44
/Fp 44 120 df<B612F8A91D097F9A25>45 D<EC03C01407141F147FEB03FF133FB6FCA4
13C3EA0003B3B3ADB712FCA5264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E000
0315F82607FC0313FE3A0FE0007FFFD81F806D138048C7000F13C0488001C015E001F07F
00FF6E13F07F17F881A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1F
FC4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8
D907E014F0495A495A49C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D
417BC038>I<ECFFF0010713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E
81D80FF86D138013FE001F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A
5B020F1380902607FFFEC7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017
E0A26F13F0A217F8A3EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F
80491380D81FF0491300D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E0
2D427BC038>I<163FA25E5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F
87EC1F07143E147E147C14F8EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A48
5A485A120F5B48C7FC123E5A12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038
>I<0007150301E0143F01FFEB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0
C9FCAAEC3FF001C1B5FC01C714C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D
13804915C0497F6C4815E0C8FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D
6C4815E05B007EC74813C0123E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6C
B612F0C65D013F1480010F01FCC7FC010113C02D427BC038>I<4AB47E021F13F0027F13
FC49B6FC01079038807F8090390FFC001FD93FF014C04948137F4948EBFFE048495A5A14
00485A120FA248486D13C0EE7F80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000
FF017F13E091B512F89039F9F01FFC9039FBC007FE9039FF8003FF17804A6C13C05B6F13
E0A24915F0A317F85BA4127FA5123FA217F07F121FA2000F4A13E0A26C6C15C06D491380
6C018014006C6D485A6C9038E01FFC6DB55A011F5C010714C0010191C7FC9038003FF02D
427BC038>I<121E121F13FC90B712FEA45A17FC17F817F017E017C0A2481680007EC8EA
3F00007C157E5E00785D15014B5A00F84A5A484A5A5E151FC848C7FC157E5DA24A5A1403
5D14074A5AA2141F5D143FA2147F5D14FFA25BA35B92C8FCA35BA55BAA6D5A6D5A6D5A2F
447AC238>I<EC7FF0903807FFFE011F6D7E017F14E09039FFE03FF0489038800FF84849
6C7E48488048486D7E001F80003F1680A2484815C08117E0A212FF17F0A617F8A45D127F
A3003F5CA26C7E5D6C6C5B12076C6C133E6CEBC07C6CEBFFF8013F5B010F01C013F00101
130090C8FCA217E05DA2EA03C0D80FF015C0487E486C491380A217004B5A150F5E49495A
6C48495A01C0EBFFE0260FF0035B6CB65A6C4AC7FC6C14F86C6C13E0D907FEC8FC2D427B
C038>57 D<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07C0C7FCAE
EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07C00F2C78AB1F>I<EE
1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F80161F82033F80ED3E
07037E80157C8203FC804B7E02018115F0820203814B137F0207815D173F020F814B7F02
1F8292C77EA24A82023E80027E82027FB7FCA291B87EA2498302F0C8FCA20103834A157F
0107834A153FA249488284011F8491C97E4984133E017E82B6020FB612F0A54C457CC455
>65 D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F
4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F4849163F48
49161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FFAE127F7F1A
F0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E
6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001FF80023F90
B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>67
D<B9FC18F018FE727E19E026003FFEC7001F13F805017F9438003FFF060F7F727F727F72
7F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B006162193F
624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F095C9
FC4B447CC356>I<BA12F8A485D8001F90C71201EF003F180F180318011800A2197E193E
A3191EA21778A285A405F890C7FCA316011603161F92B5FCA5ED001F160316011600A2F1
01E01778A2F103C0A494C7FC1907A21A80A2190FA2191FA2193FF17F0061601807181F4D
B5FCBBFC61A443447DC34A>I<BA1280A419C026003FFEC7121F1701EF007F183F181F18
0F180719E01803A31801A3EE01E0F000F0A419001603A31607160F167F91B6FCA59138FE
007F160F16071603A31601A693C9FCAFB712F0A53C447CC346>I<DCFFF01470031F01FF
14F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F4949C7EA3F9F010701F0EC0F
FF4901C0804990C87E4948814948814948167F4849163F4849161F5A4A160F485B190748
90CAFC19035A5BA2007F1801A34994C8FC12FFAD057FB612F0127F7FA3003FDC0001EBF0
00A27F7EA26C7FA26C7F807E6C7F6C7F6D7E6D6C5D6D6C7E6D6D5C6D01F05C010101FE14
3F6D903AFFF001FF9F023F90B6120F0207EDFC030201EDF000DA001F02C01330030001FC
C9FC4C467AC458>I<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC32A>73
D<B712F0A526003FFECAFCB3B1F00780A4180F1900A460A360A2187EA218FE1701170317
07171F177FEE03FFB95AA539447CC343>76 D<923807FFC092B512FE0207ECFFC0021F15
F091267FFE0013FC902601FFF0EB1FFF01070180010313C04990C76C7FD91FFC6E6C7E49
486F7E49486F7E01FF8348496F7E48496F1380A248496F13C0A24890C96C13E0A24819F0
4982003F19F8A3007F19FC49177FA400FF19FEAD007F19FC6D17FFA3003F19F8A26D5E6C
19F0A26E5D6C19E0A26C6D4B13C06C19806E5D6C6D4B13006C6D4B5A6D6C4B5A6D6C4B5A
6D6C4A5B6D01C001075B6D01F0011F5B010101FE90B5C7FC6D90B65A023F15F8020715C0
02004AC8FC030713C047467AC454>79 D<B9FC18F018FE727E19E0D8001F90C7000F7F05
017F716C7E727E727E721380A21AC084A21AE0A91AC0A24E1380A21A00604E5A4E5A4D48
5A050F5B92B712C096C7FC18FC18C092CBFCB3A7B712E0A543447DC34D>I<B812F8EFFF
C018F818FE727ED8001F90C7003F13E005037F05007F727E727E727EA28684A286A762A2
4E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F818E018F892C77FEF
3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72141EB700E06DEB80
3E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82
D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC
00014848EB007F4848143F4848140F491407007F15035B1601160012FF177CA27FA26D15
3C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C
81011F810107811300020F80140003077FED007F82040F1380828212F082A282A27EA218
007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F
92C7FCD8F80714FC48C614F0480107138031467AC43E>I<003FBA12E0A59026FE000FEB
8003D87FE09338003FF049171F90C71607A2007E1803007C1801A300781800A400F819F8
481978A5C81700B3B3A20107B8FCA545437CC24E>I<B792B6FCA526003FFECAEAFC0080
6D606F15016D608119036D606F15076D606F150F6D6081191F6D6D93C7FC61027F163E6F
157E023F167C8119FC6E6D5C18016E5E7013036E5E8218076E6D5C180F6E5E70131F6E93
C8FC705B037F143E82187E033F147C7013FC6F5C17816F5C17C117C36F5C17E76F5C17FF
6F5CA36F91C9FCA2705AA2705AA3705AA2705AA2705AA250457EC355>86
D<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7E
A26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC0100
0313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013E
EBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97
D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DFC03FFC9139FF000F
FE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A2177F18
F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC07FFC496CB512F0D9
F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C0010F14F0013F14FC90
397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300007F6E5AED
00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F00
6C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32
>I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF8
07FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA212FFAC
127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01F
EF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3FF80103B57E
010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D1380485A001F
ED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F
17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE
011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF80020F13E0027F13
F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03
F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC522>I<DAFFE0137E
010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001FF84848EB0FFC4848
903907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FCA26D5B000F5D6C6C
495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0000F90CAFCA47F7F
7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0C77ED83FC0140748
48020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B
07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32427DAC38>I<EB7F
C0B5FCA512037EB1ED07FE92383FFF8092B512E002C114F89139C7F03FFC9138CF801F91
39DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512FEA537457CC43E>I<137C48
B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFF
A512037EB3AFB6FCA518467CC520>I<EB7FC0B5FCA512037EB293387FFFE0A593380FE0
004C5A4CC7FC167E5EED03F8ED07E04B5A4B5A037FC8FC15FEECC1FCECC3FE14C7ECDFFF
91B57E82A202F97F02E17F02C07FEC807F6F7E826F7E816F7F836F7F816F7F83707E163F
B60003B512F8A535457DC43B>107 D<EB7FC0B5FCA512037EB3B3B3A3B61280A519457C
C420>I<90277F8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001B512E002816E48
80913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF3E007F6C019E6D
013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7C
AC5E>I<90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F801F00
0390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>
I<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848C7EA
3FE000078248486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F1700A4
6C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7
FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<90397FC00FF8B590B57E
02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D13804A15C04A
6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E4913
806E4913006E495A9139DFC07FFC02CFB512F002C314C002C091C7FCED1FF092C9FCADB6
7EA536407DAC3E>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE00
0313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D7D
AC2E>114 D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48C712
1F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C80
0003806C15806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA26C15
C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FEC7FC
232F7CAD2C>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B512
80B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC1F
006DB5FC6D13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5FCA50003
EC000F6C81B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C7010F14
07010313FE9026007FF0EBFC00372E7CAC3E>I<B5D8FE1FB539801FFFF0A500019027C0
003FE0C7EA7C007114786E17F86C6F6C5C6E1601017F6E6C5CA26E011F1403013F6F5C6E
013F1407011F6F5CA26E0179140F010F048090C7FC6E01F95C6D02F0EBC01E15806D9026
81E07F5B18E003C3157C6D9139C03FF07815E76DDA801F5B18F803FF14F96E9039000FFD
E018FF6E486D5BA36E486D5BA26E486D90C8FCA24B7F02075DA26E48147C4B143C4C2C7E
AB51>119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmti12 12 58
/Fq 58 122 df<EF7FF80407B5FC93391FC00FC093393E0001E004FCEB00F04B4813014B
4813075E0307140FA24B5A19E0031FEC03804C90C7FCA3153F93C9FCA45D157EA415FE91
B8FCA260DA00FCC7127E020115FE4B5CA317016014035D170360A214074B130760A3020F
140F4B5CA3171F021F5D5DA2053F13E01801023F16C092C7FCA2EF7F03057E13805C027E
15071900173E180E02FEEC1E1E4AEC1F1CEF07F8EF01E094C8FC495AA35C1303A2001C5B
127FEAFF075CA2495A00FE90CBFCEAF81FEA701EEA783CEA1FF0EA07C03C5A83C537>12
D<13F0EA03F8EA07FC120FA6EA03CCEA001C1318A213381330A2137013E013C012011380
1203EA0700120E5A5A5A5A5A0E1D6BC41E>39 D<167016E0ED01C0ED0380ED0700150E15
3C5D15F85D4A5A4A5A4A5A140F4AC7FC141E143E5C147814F8495A5C1303495AA2495AA2
49C8FCA25B133E137E137CA25BA212015BA212035BA212075BA2120FA25BA2121FA290C9
FCA25AA2123EA3127EA2127CA65AAB1278A6127C123CA47EA2120E120FA27E6C7EA26C7E
A26C7E1360246472CA28>I<1560A2157081A281151E150E150FA2811680A3ED03C0A516
E0A21501A71503A91507A216C0A4150FA21680A2151FA21600A25DA2153EA2157EA2157C
15FCA25D1401A25D14035DA214075D140F5DA24AC7FCA2143EA25C147814F8495AA2495A
5C1307495A91C8FC131E133E5B13785B485A485A485A48C9FC121E5A5A12E05A23647FCA
28>I<13F0EA03FC1207A2EA0FFEA4EA07FCEA03CCEA000C131C1318A213381330137013
6013E0EA01C013801203EA0700120E5A5A5A5A5A0F1D7A891E>44
D<007FB5FCB6FCA214FEA21805789723>I<120FEA3FC0127FA212FFA31380EA7F00123C
0A0A76891E>I<16C01501A215031507ED0F80151F153F157F913801FF005C140F147F90
3807FCFEEB0FF0EB0700EB00015DA314035DA314075DA3140F5DA3141F5DA3143F5DA314
7F92C7FCA35C5CA313015CA313035CA313075CA2130FA2131F133FB612FCA25D224276C1
32>49 D<ED3FC0913801FFF0913807C07C4AC67E021CEB1F800278130F4AEB07C0494814
E04A1303494814F0130749C7FCEB0E06D91E0714F8EB1C03133C1338137813704A1307D9
F00614F013E0140E020C130F0001011C14E0EBC0180238131F4A14C06C6C48EB3F80D9E1
C0137FD97F801400013EC712FE90C7485A4B5A4B5A4B5AED1F804BC7FC15FC4A5AEC03E0
EC0FC0023FC8FC147CEB01F0495AEB0780011FC9FC133E49EC03805B4914074848150048
5A48485C90C8121E5A001E5D001C157CD83FFC5C9038FFC0013A7C0FFC07F0D87803B55A
EA700126F0007F5B486D90C7FCEC0FFEEC03F82D4478C132>I<ED1FE0EDFFFC913803E0
3F91390F000F80023EEB07C00278EB03E05C4948EB01F0495A495A91C713F85BEB0E0CEB
1E0EEB1C061603013C15F01338A2020E1307020C14E0141CD91C78EB0FC0D90FE0131F6D
48148090C8EA3F00167E5E4B5A4B5AED0FE091383FFF804A48C7FC15F8EC007E151F6F7E
6F7E82150382A482A34B5A121FEA7F80A2150F48C75BA2484A5A12F800E04A5AA24BC7FC
007014FE5D0078495A0038495A003CEB0FC06C495A260780FEC8FC3803FFF038007F802D
4477C132>I<026014300278EB01F091397F801FE091B612C01780170016FC4914F016C0
DACFFEC7FC02C0C8FC13035CA3130791C9FCA35B130EA3131E90381C07F8EC3FFE9138F8
0F8090393DC007C0D93F807F90383E0003013C80496D7E1370A290C7FC82A41503A41507
5E120E123F486C130F00FF5DA390C7485A5A00F84A5A12E04B5A93C7FC15FE14016C5C00
70495A0078495A6CEB1FC0003E495A261F80FEC8FC6CB45A000313E0C66CC9FC2C4476C1
32>53 D<ED03FCED1FFF037F13C0913801FE07913903F001E091380FE00091381F800391
383F000F027E131F5C495A495A010715C04948EB07004A90C7FC131F495AA249C9FCA213
FE1201A2485AEC07F09038F83FFC0007EB781F9039F9E00F803A0FFB8007C0EBF70001FE
80491303001F815B5B82485AA3491307127F5BA2150F5E90C7FCA2151F485DA25A4B5AA2
007E5D157F93C7FC5D5D4A5A003E495A003F5C4A5A6C6C485A000FEB3F80D9C0FEC8FC38
03FFFC6C13F038007F802B4475C132>I<130FEB1FC0133FEB7FE013FFA214C0EB7F8014
00131E90C7FCB3A5120FEA3FC0127FA212FFA35B6CC7FC123C132B76AA1E>58
D<14F0EB01FC1303EB07FE130FA214FCEB07F814F0EB01E090C7FCB3A513F0EA03F8487E
A2120FA46C5AEA03D8EA001813381330A21370136013E05B12015B120348C7FC1206120E
5A5A5A5A5A173E7AAA1E>I<EF03801707A24D7EA2171FA2173F177FA217FFA25EA2EE03
BF1607173F160F160E161C841638171F167016F016E0ED01C0A2ED0380A2ED0700A2150E
151E151C5D845D170F5D14015D14035D4AC7FC92B6FC5CA2021CC7120F143C14385CA24A
81A249481407A2495A130791C8FC130E131EA25B137C13FC00014C7ED807FE151FB500E0
0107B512F8A219F03D477BC648>65 D<91B712FCF0FF8019E00201903980001FF06E90C7
EA07F84A6F7E727E4B81841A800203167F5DA314075D19FFA2020F17004B5C611803021F
5E4B4A5A180F4E5A023F4B5A4BEC7F804EC7FCEF03FC027FEC0FF84BEBFFC092B6C8FC18
E0913AFF800007F892C7EA01FC717E187F49834A6F7EA30103835CA313075CA3010F5F4A
157FA24E5A131F4A4A90C7FC601703013F4B5A4A4A5A4D5A017F4B5A4D5A4A4948C8FC01
FFEC0FFEB812F817C04CC9FC41447AC345>I<DC0FF8130393B513070307ECC00F923A1F
F803E01F923A7FC000F81E4BC7EA7C3EDA03FCEC3C7EDA0FF0EC1EFE4A48EC0FFC4A4814
074AC8FC02FE1503494816F8130349481501495A494816F0495A137F5C01FF17E04890C9
FCA2485A19C0485AA2485A95C7FC121F5BA2123F5BA3127F5BA4485AA41838A218781870
A218F0007F5F1701601703003F5F17076D4BC7FC001F160E171E6C6C5D6D5D00075E6C6C
4A5A6DEC07C06C6C4A5AD8007F023EC8FCD93FC013FC90391FF807F00107B512C0010191
C9FC9038001FF0404872C546>I<91B912C0A30201902680000313806E90C8127F4A163F
191F4B150FA30203EE07005DA314074B5D190EA2140F4B1307A25F021F020E90C7FC5DA2
171E023F141C4B133C177C17FC027FEB03F892B5FCA39139FF8003F0ED00011600A2495D
5CA2160101034B13705C19F061010791C8FC4A1501611803010F5F4A150796C7FC60131F
4A151E183E183C013F167C4A15FC4D5A017F1503EF0FF04A143F01FF913803FFE0B9FCA2
6042447AC342>69 D<91B91280A30201902680000713006E90C8FC4A163FA24B81A30203
160E5DA314074B151E191CA2140F5D17075F021F020E90C7FC5DA2171E023F141C4B133C
A2177C027F5CED800392B5FCA291B65AED00071601A2496E5A5CA2160101035D5CA21603
01075D4A90CAFCA3130F5CA3131F5CA3133F5CA2137FA313FFB612E0A341447AC340>I<
91B6D8803FB512E0A302010180C7387FE0006E90C86C5A4A167FA24B5EA219FF14034B93
C7FCA26014074B5DA21803140F4B5DA21807141F4B5DA2180F143F4B5DA2181F147F92B7
5AA3DAFF80C7123F92C85BA2187F5B4A5EA218FF13034A93C8FCA25F13074A5DA2170313
0F4A5DA21707131F4A5DA2170F133F4A5DA2017F151FA24A5D496C4A7EB6D8803FB512E0
A34B447AC348>72 D<027FB512E091B6FCA20200EBE000ED7F8015FFA293C7FCA35C5DA3
14035DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA314FF92C8FCA35B5CA313035C
A313075CA3130F5CA3131F5CA2133FA25CEBFFE0B612E0A25D2B447BC326>I<91B612F0
A25F020101C0C7FC6E5B4A90C8FCA25DA314035DA314075DA3140F5DA3141F5DA3143F5D
A3147F5DA314FF92C9FCA35B5CA3010316104A1538A21878010716705C18F018E0010F15
015C18C01703011F15074A1580170FA2013FED1F004A5C5F017F15FE16034A130F01FFEC
7FFCB8FCA25F35447AC33D>76 D<91B56C93387FFFC08298B5FC02014DEBC0006E614A5F
A203DF4C6CC7FC1A0E63912603CFE05D038F5F1A381A711407030FEEE1FCA2F101C3020F
EE0383020E60F107036F6C1507021E160E021C60191CF1380F143C023804705BA2F1E01F
0278ED01C091267003F85EF003801A3F02F0ED070002E0030E5CA24E137F130102C04B91
C8FC606201036D6C5B02805F4D5A943803800113070200DA07005BA2050E1303495D010E
606F6C5A1907011E5D011C4B5CA27048130F133C01384B5C017892C7FC191F01F85C486C
027E5DD807FE027C4A7EB500F00178013FB512C0A216705A447AC357>I<91B56C49B512
E0A28202009239000FFC00F107F0706E5A4A5F15DF705D1907EC03CFDB8FF892C7FCA203
875D02077F0303150EA270141EEC0F01020E161C826F153C141E021C6E1338167F197802
3C800238013F1470A27113F00278131F02705E83040F130102F014F84A5E1607EFFC0313
014A01035C17FE1807010314014A02FF90C8FCA2705B0107168F91C8138E177F18DE5B01
0EED3FDC18FCA2011E151F011C5EA2170F133C01386F5A1378A201F81503486C5EEA07FE
B500F01401A2604B447AC348>I<EE1FF84BB5FC923907F01FC092391F8003F092397E00
01F8DA01F86D7EDA03E0147EDA0FC0804A48EC1F804AC813C0027E150F4A16E049481507
494816F01307495A494816F8013F16035C137F49C9FC4917FC120112035B120749160712
0FA25B121F19F849160F123FA34848EE1FF0A3183F19E0485A19C0187FA2F0FF80A21900
5F604D5AA2007F4C5A4D5AA24D5A003F5F4D5A6D4BC7FC001F5E4C5A6C6C5DEE03F06C6C
4A5A0003ED1FC06C6C4A5A6C6C027EC8FC017EEB01F890393F8007F090390FE03F809026
03FFFEC9FC9038007FE03E4872C54B>I<91B712F018FEF0FF800201903980007FE06E90
C7EA1FF04AED07F818034B15FCF001FE1403A24B15FFA21407A25DA2140FF003FE5DA202
1F16FC18074B15F8180F023F16F0F01FE04B15C0F03F80027FED7F0018FE4BEB03FCEF0F
F002FFEC7FC092B6C7FC17F892CAFC5BA25CA21303A25CA21307A25CA2130FA25CA2131F
A25CA2133FA25CA2137FA25C497EB67EA340447AC342>I<91B77E18F818FE0201903980
01FF806E90C7EA3FC04AED1FE0F00FF04BEC07F8180319FC14034B15FEA314075DA3020F
ED07FC5DA2F00FF8141F4B15F0F01FE0F03FC0023F16804BEC7F0018FEEF03F8027F4A5A
4BEB1FC04CB4C7FC92B512F891B612E092380003F8EE00FE177F496F7E4A6E7EA2841303
4A140FA2171F13075CA2173F130F5CA24D5A131F5CA3013F170E5CA2017FEE801E191C4A
163C496C1638B66C90383FC070051F13F094380FE1E0CA3803FF80943800FE003F467AC3
47>82 D<DB03FE130C92390FFF801C037FEBE03C9238FE03F8913A03F0007C7C4A48EB3E
F84A48131F4A48130F4AC7FC027EEC07F05C1703495A18E0495AA213074A15C0A3130F18
80A28094C7FCA280806D7EECFFE015FC6DEBFF806D14F016FC6D14FF023F80020F801403
DA003F7F150703007F163F161F160FA21607A3120716031607A2485EA2120E160F001E5E
A2001F4B5AA2484BC7FC6D143E167E6D5C007F4A5A6D495AD87CF0495AD8787CEB1F8027
F03F807FC8FC90381FFFFCD8E00713F039C0007F80364879C537>I<48B912F85AA2913B
0007FC001FF0D807F84A130701E0010F140349160148485C90C71500A2001E021F15E05E
121C123C0038143F4C1301007818C0127000F0147F485DA3C800FF91C7FC93C9FCA35C5D
A314035DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA314FF92CAFCA35B5CA21303
A21307497E007FB612C0A25E3D446FC346>I<001FB500F090383FFFFCA326003FF0C700
0113806D48913800FE00013F167C18785C187018F0017F5E5CA2170101FF5E91C8FCA217
03485F5BA21707000394C7FC5BA25F0007160E5BA2171E120F49151CA2173C121F491538
A21778123F491570A217F0127F495DA2160100FF5E90C8FCA216035F16074893C8FC5E16
0E161E5E007E1538007F15785E6C4A5A6D495A001F4A5A6D49C9FC6C6C133E6C6C13F839
03FC07F0C6B512C0013F90CAFCEB07F83E466DC348>I<B6913807FFFEA25C000301C002
0013E06C90C9EA7F00183E183C60A26C1770601701604D5AA24DC7FC5F170E6E5CA2017F
5D177817705FA24C5AA24C5A16076E91C8FC160E133F5E163C16385EA25E15015E6E485A
A24BC9FC131F150E151E151C5DA25D15F05DECF1C0A290380FF38014F792CAFC14FEA25C
A25C5CA25C13075CA25C91CBFC3F466CC348>I<B500FE013FB50107B5FC5EA200030180
010101C09038007FF091C849EC3FC04993C8EA1F8000011B001B1E1B1C1B3C1B381B781B
704C5EA24C4B5A5E505A5E040E4BC7FC5E1A0E4C151E1A1C4C6D133C1A384C5D177FDB01
C05DA26DD903804A5A150704004A5A6C5C030E4BC8FC5D190E4B151E191C4B153C19384B
5DA24A485D14034BEC81C0140792C7EB8380140E0687C9FC4A158F188E4A15DE18DC4A15
F8173F4A5DA24A5DA24A5D137F91C85B137E95CAFC137C173E1378173C0170153858466C
C361>I<EDFFFEA216FCA2913801F0005DA314035DA314075DA3140F92C7FCA35C141EA3
143E143CA3147C1478A314F85CA313015CA313035CA313075CA3130F91C8FCA35B131EA3
133E133CA3137C1378A313F85BA312015BA312035BA312075BA3120F90C9FCA35A121EA3
123E123CA3127C1278A3EAFFFEA25BA227647BCA1E>91 D<EDFFFEA216FCA2ED007CA216
78A216F8A216F0A21501A216E0A21503A216C0A21507A21680A2150FA21600A25DA2151E
A2153EA2153CA2157CA21578A215F8A25DA21401A25DA21403A25DA21407A25DA2140FA2
92C7FCA25CA2141EA2143EA2143CA2147CA21478A214F8A25CA21301A25CA21303A25CA2
1307A25CA2130FA291C8FCA25BA2131EA2EAFFFEA25BA2276483CA1E>93
D<EC1F80EC7FE0903901F07070903907C039F890380F801D90381F001F013E6D5A137E5B
484813075E485A120749130F000F5DA2485A151F003F5D5BA2153F007F92C7FC90C7FCA2
5D157E12FEA29238FE0380EDFC071700A2007E13015E913803F80E1407003E010F131E16
1C6C131C02385B3A0F80F078783A07C3E07C703A01FF801FE03A007E000780292D76AB32
>97 D<EB0FE0EA07FFA338001FC0130F131FA25CA3133F91C8FCA35B137EA313FE5BA312
015BEC1F80EC7FE03903F9E0F89038F3C07C9038F7003E13FE48487F5BA2491480485AA2
5BA2121F5BA2153F123F90C7FCA2157F481500127EA25D5D5AA24A5AA24A5AA2007C5C4A
5A140F5D4A5A003C49C7FC003E137E001E5B6C485A380783E03803FF80C648C8FC214676
C42D>I<EC0FE0EC7FF8903801F81E903807E00F90390F80078090381F0003017E14C049
131F0001143F5B4848EB7F801207485AED3E00484890C7FCA2485AA2127F90C9FCA35A5A
A45AA5ED0180ED03C0ED0780A2007CEC0F00007E141E003E147C15F06CEB03E0390F800F
802607C07EC7FC3801FFF838007FC0222D75AB2D>I<EE07F0ED03FFA39238000FE01607
160FA217C0A2161FA21780A2163FA21700A25EA2167EA216FEA25EEC1F80EC7FE1903801
F071903907C039F890380F801D90381F001F013E130F017E5C5B48481307A248485C1207
49130F120F5E485A151F123F495CA2153F127F90C790C7FCA25DA200FE147EA29238FE03
80160703FC1300A2007E13015E913803F80E1407003E010F131E161C6C131C02385B3A0F
80F078783A07C3E07C703A01FF801FE03A007E0007802C4676C432>I<EC0FE0EC7FF890
3801F83E903807C00F90391F800780EB3F00017E14C0491303485A48481307000715805B
000F140F484814005D4848133E15FCEC07F0007FEBFFC0D9FFFEC7FC14C090C9FC5A5AA5
5AA4ED0180ED03C0007CEC0780A2007EEC0F00003E141E157C6C14F06CEB03E03907800F
802603C07EC7FC3801FFF838003FC0222D75AB2D>I<EE0F80EE3FE0EEF870923801F038
923803E0F8923807E1FC16C3ED0FC7A2EE87F892381F83F0EE81E0EE8000153F93C7FCA4
5D157EA415FE5DA349B512FEA390260001F8C7FCA314035DA414075DA4140F5DA4141F5D
A4143F92C8FCA55C147EA314FE5CA413015CA4495AA35C1307121C007F5B12FF495AA291
C9FC485AEAF81E485AEA7878EA1FF0EA07C02E5A83C51E>I<15FCEC03FF91390F838380
91393E01CFC091387C00EF4A13FF4948137F010315804948133F495A131F4A1400133F91
C75A5B167E13FE16FE1201495CA215011203495CA21503A2495CA21507A25EA2150F151F
5E0001143F157F6C6C13FF913801DF8090387C039F90383E0F3FEB0FFCD903F090C7FC90
C7FC5DA2157EA215FEA25DA2001C495A127F48495A14074A5A485C023FC8FC00F8137E38
7C01F8381FFFE0000390C9FC2A407BAB2D>I<14FE137FA3EB01FC13001301A25CA21303
A25CA21307A25CA2130FA25CA2131FA25C157F90393F83FFC091388F81F091381E00F802
387F4948137C5C4A137EA2495A91C7FCA25B484814FE5E5BA2000314015E5BA200071403
5E5B1507000F5DA249130F5E001F1678031F1370491480A2003F023F13F0EE00E090C7FC
160148023E13C01603007E1680EE070000FEEC1E0FED1F1E48EC0FF80038EC03E02D467A
C432>I<143C147E14FE1301A3EB00FC14701400AE137C48B4FC3803C780380703C0000F
13E0120E121C13071238A21278EA700F14C0131F00F0138012E0EA003F1400A25B137EA2
13FE5B12015BA212035B141E0007131C13E0A2000F133CEBC038A21478EB807014F014E0
EB81C0EA0783EBC7803803FE00EA00F8174378C11E>I<16F0ED03F8A21507A316F0ED01
C092C7FCAEEC01F0EC07FCEC1E1EEC380F0270138014E0130114C0EB03800107131F1400
A2130E153F131E011C140090C7FC5DA2157EA215FEA25DA21401A25DA21403A25DA21407
A25DA2140FA25DA2141FA25DA2143FA292C7FCA25C147EA214FE001C5B127F48485A495A
A248485A495AD8F81FC8FCEA707EEA3FF8EA0FC0255683C11E>I<14FE137FA3EB01FC13
001301A25CA21303A25CA21307A25CA2130FA25CA2131FA25C167E013F49B4FC92380783
C09138000E07ED3C1F491370ED603F017E13E0EC01C09026FE03801380913907000E00D9
FC0E90C7FC5C00015B5C495AEBF9C03803FB8001FFC9FCA214F03807F3FCEBF07F9038E0
1FC06E7E000F130781EBC003A2001F150FA20180140EA2003F151E161C010013E0A2485D
A2007E1578167000FE01015B15F1489038007F800038021FC7FC2A467AC42D>I<EB03F8
EA01FFA3380007F013031307A214E0A2130FA214C0A2131FA21480A2133FA21400A25BA2
137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA2
90C7FCA2387F01C01303007E1380A2130700FE130012FCA25B130EEA7C1E131CEA3C3CEA
3E786C5AEA07C0154678C419>I<D801F0D90FE0EB07F0D803FCD97FF8EB3FFC28071E01
F03EEBF81F3E0E1F03C01F01E00F80271E0F8700D983807F001C018E90390F870007003C
019C148E003801B802DC8002F814FC26781FF05C0070495CA24A5C00F0494948130FD8E0
3F6091C75B1200043F141F4960017E92C7FCA24C143F01FE95C7FC49147E6104FE147E12
01494A14FE610301EE0780000305011400494A14F8A2030302035B0007F0F00E495C1A1E
0307EDE01C000F193C494A153862030F020113F0001FF0F1E0494A903800FF800007C7D8
0380023EC7FC492D78AB50>I<D801F0EB0FE0D803FCEB7FF83A071E01F03E3A0E0F03C0
1F001ED987001380001C018E130F003C139C003801B814C014F838781FF000705BA25C00
F049131FD8E03F158091C7FC1200163F491500137EA25E01FE147E5B16FE5E1201491301
5E170F00030203130E4914F0A20307131E0007EDE01C5B173CEEC038000F167849157017
E0ED03C1001FEDE3C049903801FF000007C8127C302D78AB37>I<EC0FE0EC7FFC903801
F83E903907E00F8090390F8007C0EB1F00017EEB03E04914F0A248481301484814F81207
485AA2485AA2485A1503127F90C7FCA215074815F05AA2150F16E05AED1FC0A21680153F
16005D157E5D007C495A007E495A003E5C4A5A6CEB1F80260F803EC7FC3807C0FC3801FF
F038003F80252D75AB32>I<D903E0137E903A07F801FF80903A0E3C0783E0903A1C1E0F
01F0903A3C1F1C00F801385B017849137C01705BA24A48137E01E05BA292C7FC00015B13
C0147EC7FC02FE14FEA25CA20101140117FC5CA20103140317F85CA20107EC07F0A24AEB
0FE0A2010F15C0EE1F80163F1700496C137E5E4B5A9138B803F090393F9C07E091389E0F
80DA07FEC7FCEC01F849C9FCA2137EA213FEA25BA21201A25BA21203A21207B512F0A25C
2F3F7FAB32>I<D801F0EB3F803A03FC01FFF03A071E03C0F83A0E0F0F007C001E90389E
01FC001C139CECB803003813F0A2D91FE013F80078EC00E00070491300A200F05BEAE03F
91C8FC1200A25B137EA313FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9
FC262D78AB29>114 D<EC0FE0EC7FF8903801F01E903803C00F90390780078090380F00
03011E14C0150749131FA2017CEB3F801378137CED0E0092C7FC137E137F14F014FF6D13
C06D13F06D7F6D7F1300EC0FFE14011400157F81120E003F141E487EA2153E48C7123CA2
00FC5C12705D0078495A6C495A6CEB0F80260F803EC7FC3803FFF838007FC0222D7AAB28
>I<1470EB01F8A313035CA313075CA3130F5CA3131F5CA2007FB512E0B6FC15C0D8003F
C7FCA25B137EA313FE5BA312015BA312035BA312075BA3120F5BA2EC0780001F14001380
5C140E003F131EEB001C143C14385C6C13F0495A6C485AEB8780D807FEC7FCEA01F81B3F
78BD20>I<137C48B414072603C780EB1F80380703C0000F7F000E153F121C0107150012
385E1278D8700F147E5C011F14FE00F05B00E05DEA003FEC0001A2495C137E150313FE49
5CA215071201495CA2030F13380003167849ECC070A3031F13F0EE80E0153F0001158103
7F13C06DEBEF8300000101148090397C03C787903A3E0F07C70090391FFE01FE903903F0
00782D2D78AB34>I<017C143848B414FC3A03C78001FE380703C0000F13E0120E001C14
000107147E1238163E1278D8700F141E5C131F00F049131C12E0EA003F91C7123C16385B
137E167801FE14705BA216F0000115E05B150116C0A24848EB0380A2ED0700A2150E1201
5D6D5B000014786D5B90387C01E090383F0780D90FFFC7FCEB03F8272D78AB2D>I<017C
EE038048B4020EEB0FC02603C780013FEB1FE0380703C0000E7F5E001C037E130F010716
07123804FE130300785DEA700F4A1501011F130100F001804914C012E0EA003FDA000314
034C14805B137E0307140701FE1700495CA2030F5C0001170E495CA260A24848495A60A2
601201033F5C7F4B6C485A000002F713036D9039E7E0078090267E01C349C7FC903A1F07
81F81E903A0FFF007FF8D901FCEB0FE03B2D78AB41>I<02F8133FD907FEEBFFE0903A0F
0F83C0F0903A1C07C780F890393803CF03017013EE01E0EBFC07120101C013F8000316F0
0180EC01C000074AC7FC13001407485C120EC7FC140F5DA3141F5DA3143F92C8FCA34AEB
03C01780147EA202FEEB0700121E003F5D267F81FC130E6E5BD8FF83143CD903BE5B26FE
079E5B3A7C0F1F01E03A3C1E0F83C0271FF803FFC7FC3907E000FC2D2D7CAB2D>I<137C
48B414072603C780EB1F80380703C0000F7F000E153F001C1600130712385E0078157EEA
700F5C011F14FE00F0495B12E0EA003FEC00015E5B137E150301FE5C5BA2150700015D5B
A2150F00035D5BA2151F5EA2153F12014BC7FC6D5B00005BEB7C0390383E0F7EEB1FFEEB
03F090C712FE5DA214015D121F397F8003F0A24A5A4848485A5D48131F00F049C8FC0070
137E007813F8383801F0381E07C06CB4C9FCEA01FC294078AB2F>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmr12 12 81
/Fr 81 128 df<9239FFC001FC020F9038F80FFF913B3F803E3F03C0913BFC00077E07E0
D903F890390FFC0FF0494890383FF81F4948EB7FF0495A494814E049C7FCF00FE0499139
3FC0038049021F90C7FCAFB912F0A3C648C7D81FC0C7FCB3B2486CEC3FF0007FD9FC0FB5
12E0A33C467EC539>11 D<4AB4FC020F13E091387F80F8903901FC001C49487FD907E013
0F4948137F011FECFF80495A49C7FCA25B49EC7F00163E93C7FCACEE3F80B8FCA3C648C7
FC167F163FB3B0486CEC7FC0007FD9FC1FB5FCA330467EC536>I<913801FFC0020FEBFB
8091387F803F903801FC00494813FFEB07E0EB1FC0A2495A49C7FC167F49143F5BAFB8FC
A3C648C7123FB3B2486CEC7FC0007FD9FC1FB5FCA330467EC536>I<DBFF80EB3FE0020F
9039F001FFFC913B3F807C0FF01F913CFC000E3F800380D903F86D48486C7E4948D90FFC
804948D93FF8130F4948017F4A7E49485C49C75BA25B494B6D5A041F6E5A96C8FCACF107
F0BBFCA3C648C7391FC0001F190F1907B3B0486C4A6C497E007FD9FC0FB50083B512E0A3
4B467EC551>I<001EEB03C0397F800FF000FF131F01C013F8A201E013FCA3007F130F39
1E6003CC0000EB000CA401E0131C491318A3000114384913300003147090C712604814E0
000614C0000E130148EB038048EB070048130E0060130C1E1D7DC431>34
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
1206120E5A5A5A12600B1D78C41B>39 D<140C141C1438147014E0EB01C01303EB0780EB
0F00A2131E5BA25B13F85B12015B1203A2485AA3485AA348C7FCA35AA2123EA2127EA412
7CA312FCB3A2127CA3127EA4123EA2123FA27EA36C7EA36C7EA36C7EA212017F12007F13
787FA27F7FA2EB0780EB03C01301EB00E014701438141C140C166476CA26>I<12C07E12
707E7E7E120F6C7E6C7EA26C7E6C7EA21378137C133C133E131E131FA2EB0F80A3EB07C0
A3EB03E0A314F0A21301A214F8A41300A314FCB3A214F8A31301A414F0A21303A214E0A3
EB07C0A3EB0F80A3EB1F00A2131E133E133C137C13785BA2485A485AA2485A48C7FC120E
5A5A5A5A5A16647BCA26>I<16C04B7EB3AB007FBAFCBB1280A26C1900C8D801E0C9FCB3
AB6F5A41407BB84C>43 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0
A312011380120313005A1206120E5A5A5A12600B1D78891B>I<B612C0A61A067F9721>I<
121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>I<1618163C167CA2167816F8A2
16F01501A216E01503A216C01507A21680150FA2ED1F00A2151E153EA2153C157CA21578
15F8A25D1401A24A5AA25D1407A25D140FA292C7FC5CA2141E143EA2143C147CA25CA25C
1301A25C1303A25C1307A25C130FA291C8FC5BA2133EA2133C137CA2137813F8A25B1201
A25B1203A2485AA25B120FA290C9FC5AA2121E123EA2123C127CA2127812F8A25A126026
647BCA31>I<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F4848
EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815FF
B3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D13
0F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131>
I<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA3204278
C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA7F80
48EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C481307
6CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A
4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A4848143848C8
1230000E1570001FB612F0A25A5AB712E0A326427BC131>I<49B4FC010F13E0013F13FC
9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A215
077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1F
C0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316FE
A2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F8003814
0F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E00101
90C7FC28447CC131>I<ED0380A21507150FA2151F153FA2157F15FFA25CEC03BF153F14
071406140C141C141814301470146014C013011480EB03005B13065B131C13185B137013
6013E0485A5B120390C7FC1206120E120C5A123812305A12E0B812C0A3C8383F8000ADED
FFE0027FEBFFC0A32A437DC231>I<000615C0D807C0130701FCEB7F8090B612005D5D5D
15E0158026063FFCC7FC90C9FCAE14FF010713C090381F01F090383800FC01F0137ED807
C07F49EB1F8016C090C7120F000615E0C8EA07F0A316F81503A216FCA5123E127F487EA4
16F890C712075A006015F0A20070140F003015E00038EC1FC07E001EEC3F806CEC7F006C
6C13FE6C6C485A3901F807F039007FFFE0011F90C7FCEB07F826447BC131>I<EC07FCEC
3FFF91B512C0903903FC03E0903907E000F0D91FC0133849C71258017EEB01FC01FE1303
491307485A485AA24848EB03F8000FEC01F092C7FC485AA3485AA3127FA29038007F8090
3801FFF090380780FC39FF0E003E49EB1F8049EB0FC049EB07E0136001E0EB03F04914F8
150116FC5BED00FEA390C812FFA47EA57F123FA216FE121F15016D14FC120FED03F86C7E
ED07F06C6C14E06C6CEB0FC06C6CEB1F80017EEB3F0090383F80FE90380FFFF8010313E0
0100138028447CC131>I<121CA2EA1F8090B712C0A3481680A217005E0038C8120C0030
151C00705D0060153016705E5E4814014B5A4BC7FCC81206150E5D151815385D156015E0
4A5AA24A5A140792C8FC5CA25C141E143EA2147E147CA214FCA21301A3495AA41307A613
0FAA6D5AEB01C02A457BC231>I<14FF010713E0011F13F890387F00FE01FC133FD801F0
EB1F804848EB0FC049EB07E00007EC03F048481301A290C713F8481400A47FA26D130116
F07F6C6CEB03E013FC6C6CEB07C09039FF800F806C9038C01F006CEBF03EECF87839007F
FEF090383FFFC07F01077F6D13F8497F90381E7FFFD97C1F1380496C13C02601E00313E0
48486C13F000079038007FF84848EB3FFC48C7120F003EEC07FE150148140016FF167F48
153FA2161FA56C151E007C153EA2007E153C003E157C6C15F86DEB01F06C6CEB03E06C6C
EB07C0D803F8EB1F80C6B4EBFF0090383FFFFC010F13F00101138028447CC131>I<14FF
010713E0011F13F890387F80FC9038FC007E48487F4848EB1F804848EB0FC0000FEC07E0
485AED03F0485A16F8007F140190C713FCA25AA216FE1500A516FFA46C5CA36C7E5D121F
7F000F5C6C6C130E150C6C6C131C6C6C5BD8007C5B90383F01E090390FFF80FE903801FE
0090C8FC150116FCA4ED03F8A216F0D80F801307486C14E0486C130F16C0ED1F80A249EB
3F0049137E001EC75A001C495A000F495A3907E01FE06CB51280C649C7FCEB1FF028447C
C131>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3A5121EEA7F80A2EAFFC0A4EA
7F80A2EA1E000A2B78AA1B>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3A5121E
127FEAFF80A213C0A4127F121E1200A512011380A3120313005A1206120E120C121C5A5A
12600A3E78AA1B>I<007FBAFCBB1280A26C1900CEFCB0007FBAFCBB1280A26C19004118
7BA44C>61 D<EB0FFC90387FFFC03901F007F039078001FC000EC77E48147F48EC3F8048
15C00060141F00FE15E07E7FA56CC7FC001CEC3FC0C8FCED7F80A2EDFF004A5AEC03F84A
5A5D4A5A4A5A92C7FC143E143C5CA2147014F05CA25C1301A35CA990C9FCAAEB03C0EB0F
F0A2497EA46D5AA2EB03C023467BC52E>63 D<16C04B7EA34B7EA34B7EA34B7EA3ED19FE
A3ED30FFA203707FED607FA203E07FEDC03FA2020180ED801FA2DA03007F160FA2020680
1607A24A6D7EA34A6D7EA34A6D7EA20270810260147FA202E08191B7FCA249820280C712
1FA249C87F170FA20106821707A2496F7EA3496F7EA3496F7EA201788313F8486C83D80F
FF03037FB500E0027FEBFFC0A342477DC649>65 D<B8FC17E017FC00019039C00003FF6C
6C4801007FEF3FC0717E717E717E84170384170184A760A21703601707604D5A4D5AEF7F
C04DC7FCEE03FEEE3FF091B65A17FC0280C7B47EEF1FC0EF0FF0717E717E717E717E1980
187F19C0A2183F19E0A8F07FC0A2198018FF4D1300A24D5AEF0FFC4D5AEF7FE048486C90
3803FFC0B9C7FC17FC17C03B447CC345>I<DB0FFE146092B500C013E0020314F0913A0F
FC01FC0191393FC0003E02FFC7EA0F83D903FCEC03C74948EC01E74948EC00FF4948157F
4948153F4948151F49C9120F485A491607120348481603A248481601A248481600A2123F
A2491760127FA31900485AAE6C7EA21960A2123F7FA2001F18E07F000F18C0A26C6C1601
19806C6C160312016DEE07006C6C16066D6C150E6D6C5D6D6C5D6D6C15786D6C5D6D6C4A
5AD900FFEC0780DA3FC0011FC7FCDA0FFC13FC0203B512F0020014C0DB0FFEC8FC3B487B
C546>I<B8FC17F017FC00019039C00007FF6C499038007FC0017FED1FE0EF07F0EF03FC
717E717E84727E727E727EA2727E85180385A2180185A38584A31A80AD1A00A36061A361
180361180761180F614E5A183F614EC7FC18FEEF03FC4D5AEF1FE001FFED7FC0486DD907
FFC8FCB812FC17F094C9FC41447CC34B>I<B912F8A3000101C0C7127F6C6C48EC07FC17
011700187C183C181CA284A31806A4180704067FA395C7FCA4160EA2161E163E16FE91B5
FCA3EC8000163E161E160EA21606A319C0A3F0018093C7FCA41803A21900A260A260A218
1EA2183E187EEF01FE170748486C147FB95AA33A447CC342>I<B912F0A3000101C0C712
7F6C6C48EC0FF817031701170018781838A2181CA3180CA4180E1806160CA21800A5161C
A2163C167CED01FC91B5FCA3EC8001ED007C163C161CA2160CA793C8FCB08048487EB612
F8A337447CC340>I<DB0FFE146092B500C013E0020314F0913A0FFC01FC0191393FC000
3E02FFC7EA0F83D903FCEC03C74948EC01E74948EC00FF4948157F4948153F4948151F49
C9120F485A491607120348481603A248481601A248481600A2123FA2491760127FA396C7
FC485AAD4CB612C06C7EA293C7387FF000725A003F171F7FA2121F7F120FA26C7EA26C7E
6C7EA26C7E6D7E6D6C153F6D7E6D6C157F6D6C15E7D903FEEC01C7D900FFEC0383DA3FE0
EB0F01DA0FFCEBFE000203B500F81360020002E090C7FCDB0FFEC9FC42487BC54D>I<B6
D8C003B6FCA3000101E0C70007138026007F80913801FE00B3A991B7FCA30280C71201B3
AC2601FFE0913807FF80B6D8C003B6FCA340447CC349>I<B612F0A3C6EBF0006D5A6D5A
B3B3B3A4497E497EB612F0A31C447DC323>I<010FB512FEA3D9000313806E130080B3B3
AB123F487E487EA44A5A13801300006C495A00705C6C13076C5C6C495A6CEB1F802603E0
7FC7FC3800FFFCEB1FE027467BC332>I<B600C049B512C0A3000101E0C8387FFC006C49
ED3FE06D481680063EC7FC183C183860604D5A4D5A4DC8FC171E17385F5F4C5A4C5A4CC9
FC160E5E5E5E5E4B5A4B7E4B7E150F4B7E4B7E1577EDE3FE913881C1FFEC8381DA87007F
028E6D7E149C02B86D7E02F06D7E14C04A6D7E707EA2707E707EA2707F717EA2717E717E
A2717E717EA2717E717EA2717F8585496C82486D4A13FCB600C0011FEBFFE0A343447CC3
4C>I<B612F8A3000101E0C9FC6C6C5A5CB3B31830A418701860A518E0A3EF01C0A21703
1707A2170F173F177FEE01FF48486C011F1380B9FCA334447CC33D>I<B56C933807FFFC
6E5EA20001F1FE0026006FE0EE1BF8A3D967F01633A2D963F81663A3D961FC16C3A3D960
FEED0183A2027FED0303A36E6C1406A36E6C140CA26E6C1418A36E6C1430A36E6C1460A2
6E6C14C0A36E6CEB0180A3037FEB0300A292383F8006A36F6C5AA36F6C5AA26F6C5AA36F
6C5AA36F6C5AA26FB45AA370C7FC13F0A2486C143ED80FFFEF0FFEB500F0011C0107B512
FCA34E447BC359>I<B56C020FB5FC8080C6040013F06D6CED1F80D96FF8ED0F00A2D967
FC1506EB63FEA2EB61FF01607FA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E
6F7EA26F7E6F7EA26F7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FC
EE03FEA2EE01FF701386A2EF7FC6EF3FE6A2EF1FF6EF0FFEA217071703A217011700A201
F0167E183E487ED80FFF161EB500F0150EA2180640447CC349>I<ED1FFC4AB512C09139
07F007F091391F8000FC027EC7123FD901F8EC0FC049486E7E49486E7E49486E7E49486E
7E49C9127E017E8201FE834848707E4848707EA24848707EA2000F84491603001F84A248
48707EA3007F84A24982A300FF1980AD6C6C4C1300A4003F606D1603A2001F60A26C6C4C
5AA26C6C4C5AA20003606D161F6C6C4C5A000060017F4CC7FC6E5D013F5E6D6C4A5AD907
E0EC03F06D6C4A5AD901FCEC1FC0D9007E4AC8FCDA1F8013FC913907F007F00201B512C0
9126001FFCC9FC41487BC54C>I<B712FCEEFFC017F800019039C0000FFC6C6C48EB01FF
9338007F80EF1FE0170FEF07F018F8EF03FCA218FE1701A218FFA718FEA2170318FCA2EF
07F818F0EF0FE0EF1FC0EF7F80933801FE00EE0FFC91B612F017800280C9FCB3AA3801FF
E0B612C0A338447CC342>I<B712E016FF17C000019039C0003FF86C6C48EB03FCEE00FF
717E717E717E717E717EA284170384A760A21707604D5AA24D5A4D5A4DC8FCEE01FEEE07
F8EE3FE091B6C9FC16FC913980007F80EE0FE0707EEE03FC707E160083717EA2717EA784
A71A6084171FA21AE0716C13C02601FFE002071301B600C01680943801FC03943900FE07
00CBEA3FFEF007F843467CC348>82 D<49B41303010FEBE007013F13F89039FE00FE0FD8
01F8131FD807E0EB079F49EB03DF48486DB4FC48C8FC4881003E81127E82127C00FC81A2
82A37E82A27EA26C6C91C7FC7F7FEA3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF
6C15C0013F14F0010F80010180D9001F7F14019138001FFF03031380816F13C0167F163F
161F17E000C0150FA31607A37EA36C16C0160F7E17806C151F6C16006C5D6D147ED8FBC0
5CD8F9F0495AD8F07C495A90393FC00FE0D8E00FB51280010149C7FC39C0003FF02B487B
C536>I<003FB912F8A3903BF0001FF8001F01806D481303003EC7150048187C0078183C
A20070181CA30060180CA5481806A5C81600B3B3A54B7EED7FFE49B77EA33F447DC346>
I<B600C0010FB5FCA3000101E0C813F026007F80ED1F80F00F00A21806B3B3A7180E6D6C
150CA2181C131F6E1518010F163818306D6C1570606D6C14016D6C5D6D6CEC0780027F4A
C7FC6E6C131EDA1FE0137C913907FC03F00201B55A6E6C1380DB07FCC8FC40467CC349>
I<B692383FFFF0A3000301E003071300C649ED01FC4A5E017F705A6E5E133F616E150101
1F5FA26D6C4BC7FCA28001071606A26E150E0103160CA26D6C5DA2806D5EA26F1470027F
156081023F5DA281021F4A5AA26F1303020F92C8FC8102071406A26F130E0203140CA26E
6C5BA2816E5CA2EE8070037F1360A26F6C5AA216E092381FE180A216F3030F90C9FC16FB
ED07FEA36F5AA36F5AA26F5AA3166044467EC349>I<B60107B500F890380FFFFEA30003
01E0D9001F90C813F06C0180DA0FFCED3FC091C86C48ED1F006C871C0E6D6C6E7E1C0CA2
6D6C6F5DA36EDA06FF1538011F1A30A26E020E6D1470010FDB0C7F1560A26E021C7F0107
DB183F5DA2856D6CDA301F4A5AA36D6C4A6C6C49C7FCA36D6C4A6C6C1306A3DB80016E13
0E027FDA8003140CA2DBC00380023FDA00015CA203E081021F01066D5CA36E6C486E6C5A
A36E6C486E6C5AA36F48EC1FE1020360A2DBFE7015F302010160020F90C8FCA2DBFFE015
FB6E49EC07FEA36F486E5AA36FC86C5AA3031E6F5AA4030C16605F467EC364>I<B66C91
380FFFFCA3000101F8C8000313C026007FE0923800FE0061013F17F06D6C5E80010F5F6D
6C4B5A18036D6C93C7FC6E15066D160E6D6D140C181C6E6C14186E6C5C18706E6C146018
E06E6C5C6E6C495A17036E6C91C8FC5F6E6C13066E6D5A171C92387FC0185FED3FE06F6C
5A17E06F6C5AEEF980ED07FF6F90C9FCA26F5AB3A6923807FF800203B6FCA346447FC349
>89 D<EAFFFCA4EAF000B3B3B3B3B3A2EAFFFCA40E6476CA1B>91
D<01C01318000114384848137048C712E0000EEB01C0000C1480001C1303001814000038
5B003013060070130E0060130CA300E0131C481318A400CFEB19E039FFC01FF801E013FC
A3007F130FA2003F130701C013F8390F0001E01E1D71C431>I<EAFFFCA4EA003CB3B3B3
B3B3A2EAFFFCA40E647ECA1B>I<EB07FC90383FFF809038F80FE03903C003F048C66C7E
000E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC9038
0FFE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B176048C7FCA3153FA36D137F00
7F14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E03FF802701FFFC0113003A001F
E0007C2B2E7CAC31>97 D<EA01FC12FFA3120712031201B3EC03FC91380FFF8091383C07
E091387001F89039FDE0007E02807F01FFEC1F8091C713C049EC0FE049140717F0A2EE03
F8A217FCA2160117FEAB17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FBEC3F80
D9F380EB7E00D9E1C05B9039E0F001F89039C03C07E09039801FFF80C7D803FCC7FC2F46
7DC436>I<EC7F80903803FFF090380FC07C90383F000F01FCEB03804848EB01C0000314
0F4848EB1FE049133F120F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB7E7FA2
123F16307F001F15706C6C146016E06C6C14C06C6C13010001EC03806C6CEB0700013F13
1E90381FC078903807FFF001001380242E7DAC2B>I<167FED3FFFA315018182B3EC7F80
903803FFF090380FC07C90383F000E017E1307496D5AD803F87F48487F5B000F81485AA2
485AA2127FA290C8FC5AAB7E7FA2123FA26C7EA2000F5D7F6C6C5B00035C6C6C9038077F
806C6C010E13C0013F011C13FE90380FC0F8903803FFE09026007F0013002F467DC436>
I<EB01FE903807FFC090381F03F090387E00FC49137E48487F485A4848EB1F80000F15C0
49130F121F484814E01507A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F
16306C7E1670000F15606D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90
381F80F8903803FFE0010090C7FC242E7DAC2B>I<EC0FE0EC7FF8903801F81E903803F0
3F90390FE07F8090381FC0FF5C133F495AA2ED7F0001FE131C92C7FCAFB67EA3C648C8FC
B3B2486C7E007F13FFA321467EC51E>I<EE0F80D901FCEB7FE0903A0FFF81F0F090393F
07E3819039FC01FF033A01F800FE014848017E13E00007027FC7FC497F000F8149131F00
1F81A9000F5D6D133F000792C7FC6D5B0003147E6C6C5B6D485A3903BF07E090380FFF80
260701FCC8FC90CAFCA25AA37F6C7E7F90B512F86C14FF16E06C15F86C6C8048B67E3A07
C0000FFF48481300003FC8EA3F80003E151F48ED0FC0A2481507A56C150F007C1680007E
151F003E16006C153E6C6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7FC
010113E02C427DAC31>I<EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07
F091383801F802707FECE000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5
D8F83F13FEA32F457DC436>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12
FFA3120712031201B3B0487EB512F8A315437DC21C>I<143C14FFA2491380A46D1300A2
143C91C7FCADEC7F80EB3FFFA31300147F143FB3B3AA123E127F39FF807F00A2147EA25C
6C485A383C01F06C485A3807FF80D801FEC7FC195785C21E>I<EA01FC12FFA312071203
1201B3A292381FFFE0A36F1300ED07F816E05E5E030EC7FC5D5D5D5D4A5A4A5A4AC8FC5C
EC3F804A7E14FF9038FDCFE09038FF8FF01407496C7E01FC7F14016E7E81816F7E82151F
6F7E821507826F7E8282486C491380B5D8F81F13F8A32D457DC433>I<EA01FC12FFA312
0712031201B3B3B3A5487EB512F8A315457DC41C>I<D801FC01FFEC1FE000FF010701E0
EBFFFC913B0F03F801E07F913C3C01FC07803F800007903C7000FE0E001FC0000349D97E
1C130F2601FDC0D97F38804A143001FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C
497EB5D8F81FB50003B512E0A34B2C7DAB52>I<3901FC01FE00FF903807FFC091381E07
F091383801F8000701707F0003EBE0002601FDC07F5C01FF147F91C7FCA25BA35BB3A848
6CECFF80B5D8F83F13FEA32F2C7DAB36>I<EC7F80903803FFF090380FC0FC90383E001F
496D7E496D7E48486D7E48486D7E48486D7E000F81A24848147E003F157FA290C87E4816
80A44816C0AA6C1680A26D147F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C
495A6C6C495A6C6C495A013E49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>
I<3901FC03FC00FF90380FFF8091383C07E091387001F83A07FDE000FE00030180137FD8
01FFEC3F8091C7EA1FC04915E049140F17F0160717F8160317FCA3EE01FEABEE03FCA3EE
07F8A217F0160F6D15E0EE1FC06D143F17806EEB7E00D9FDC05B9039FCF003F891383C0F
E091381FFF80DA03FCC7FC91C9FCAE487EB512F8A32F3F7DAB36>I<91387F8003903903
FFE00790380FE07890393F801C0F90387E000E496D5AD803F8EB039F0007EC01BF4914FF
48487F121F5B003F81A2485AA348C8FCAB6C7EA3123F7F121F6D5C120F6D5B12076C6C5B
6C6C497E6C6C130E013F131C90380FC0F8903803FFE09038007F0091C7FCAEEEFF80033F
13FEA32F3F7DAB33>I<3903F803F000FFEB1FFCEC3C3EEC707F0007EBE0FF3803F9C000
015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3202C7DAB26>I<90383FE0
183901FFFC383907E01F78390F0003F8001E1301481300007C1478127800F81438A21518
A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14C06C14E0C614F0011F13F813
00EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C6C147C15786C14F86CEB01F0
39F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26>I<1306A5130EA4131EA313
3E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4150CAA017E131C017F1318A2
6D133890381F8030ECC070903807E0E0903801FFC09038007F001E3E7EBC26>I<D801FC
147F00FFEC3FFFA300071401000380000181B3A85EA35DA212006D5B017E9038077F8001
7F010E13C06D011C13FE90380FC078903803FFF09026007F8013002F2D7DAB36>I<B539
F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E1200160C017F5CA280013F5CA2
6E1370011F146080010F5CA2ECF00101075CA26D6C48C7FCA26E5A01011306A26D6C5AA2
14FF6E5AA215B8EC3FB015F06E5AA36E5AA26E5AA36EC8FC2E2C7EAA33>I<B500E0B539
E03FFF80A30007903C000FFE000FFC00D803FCD903F8EB03F8F001E0120103015D6D8000
0060A26D6E13036DD9037E91C7FCA20280017F5B013FD9063F1306A2D91FC06E5AED0C1F
A2D90FE06E5AED180FA2D907F06E5AED3007A2D903F86E5AED6003A2902601FCE06D5AED
C00117FCD900FFECFD80ED800017FF027F92C8FC92C77EA26E147E023E143EA2021E143C
021C141CA2412C7EAA46>I<B539F007FFFCA30003D9C00113C0C6496C1300017F14FC01
3F5C6E13E06D7E010F495A6D6C485A02F890C7FC903803FC060101130E6E5A903800FF18
6E5AEC3FF05D141F140F6E7E81140FEC0DFCEC19FEEC38FF4A7E9138603F8002C07F0101
131F49486C7E02007F01066D7E010E1303496D7E013C80017C80D801FC1580D80FFE4913
C0B5D8800F13FFA3302B7FAA33>I<B539F001FFFCA3000790C7EA7FE06C48EC1F800001
1600160E0000150C6D141C6D1418A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C
485AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2
EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C
0380D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>I<003FB612E0A29038C0003F90C7
13C0003CEC7F800038ECFF00A20030495A0070495AA24A5A0060495AA24A5A4A5AA2C748
5A4AC7FC5B5C495A13075C495A131F4A1360495A495AA249C712C0485AA2485A485A1501
485A48481303A24848EB07804848131F00FF14FF90B6FCA2232B7DAA2B>I<B9FCA23002
809B31>I<001EEB0780007FEB0FE039FF801FF0EBC03FA4EB801F397F000FE0001EEB07
801C0A76C231>127 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmr10 10.95 80
/Fs 80 128 df<4AB4EB0FE0021F9038E03FFC913A7F00F8FC1ED901FC90383FF03FD907
F090397FE07F80494801FF13FF4948485BD93F805C137F0200ED7F00EF003E01FE6D91C7
FC82ADB97EA3C648C76CC8FCB3AE486C4A7E007FD9FC3FEBFF80A339407FBF35>11
D<EC03FE91383FFF809138FE03E0903903F800F0D90FE013384948137C90393F8001FE90
387F00035B5BA2485A6F5AED007093C7FCAA16FEB7FCA33901FC000315011500B3AC486C
497EB5D8F87F13FCA32E407EBF33>I<EC03FF023F13EE9138FE01FEEB03F090380FE003
EB1FC0EB3F80EB7F005B5B150148481300AEB7FCA3D801FCC7FCB3AE486C497EB5D8F87F
13FCA32E407EBF33>I<133E133F137F13FFA2EA01FEEA03FCEA07F813F0EA0FE0EA1FC0
1380EA3E005A5A1270122010116EBE2D>19 D<001E130F397F803FC000FF137F01C013E0
A201E013F0A3007F133F391E600F3000001300A401E01370491360A3000114E04913C000
03130101001380481303000EEB070048130E0018130C0038131C003013181C1C7DBE2D>
34 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313
005A120E5A1218123812300B1C79BE19>39 D<1430147014E0EB01C0EB03801307EB0F00
131E133E133C5B13F85B12015B1203A2485AA2120F5BA2121F90C7FCA25AA3123E127EA6
127C12FCB2127C127EA6123E123FA37EA27F120FA27F1207A26C7EA212017F12007F1378
7F133E131E7FEB07801303EB01C0EB00E014701430145A77C323>I<12C07E12707E7E12
1E7E6C7E7F12036C7E7F12007F1378137CA27FA2133F7FA21480130FA214C0A3130714E0
A6130314F0B214E01307A614C0130FA31480A2131F1400A25B133EA25BA2137813F85B12
015B485A12075B48C7FC121E121C5A5A5A5A145A7BC323>I<1506150FB3A9007FB912E0
BA12F0A26C18E0C8000FC9FCB3A915063C3C7BB447>43 D<121EEA7F8012FF13C0A213E0
A3127FEA1E601200A413E013C0A312011380120313005A120E5A1218123812300B1C7989
19>I<B512FEA617067F961E>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>
I<EB01FE90380FFFC090383F03F090387C00F849137C48487F48487F4848EB0F80A2000F
15C04848EB07E0A3003F15F0A290C712034815F8A64815FCB3A26C15F8A56C6CEB07F0A3
001F15E0A36C6CEB0FC0A26C6CEB1F80000315006C6C133E6C6C5B017C5B90383F03F090
380FFFC0D901FEC7FC263F7DBC2D>48 D<EB01C013031307131F137FEA07FFB5FC139FEA
F81F1200B3B3ACEB7FF0B612F8A31D3D78BC2D>I<EB07FC90383FFF8090B512E03903F0
1FF83907C007FC390F0001FE001E6D7E001C1580003CEC7FC05AED3FE01270B4FC6DEB1F
F07FA56C5A6CC7FC120CC813E0153FA216C0157F168015FF16004A5A5D4A5A4A5A5D4A5A
4A5A4AC7FC147E147C5C495A495A495A495A49C71270133E133C5B4914E0485A485A485A
48C7120148B6FCA25A4815C0B7FCA3243D7CBC2D>I<EB07FC90383FFF809038F80FE039
01E003F839078001FCD80F007F000E6D7E001E1580D81F80137F486C14C07FA27F5BA212
1F6C5AC8138015FF1600A24A5AA24A5A5DEC07E04A5A023FC7FCEB1FFCECFF809038000F
E0EC07F86E7E6E7E6E7E1680ED7FC0A216E0153FA216F0A2120C123F487E487EA316E0A2
49137F6CC713C01278EDFF807E6C4913006C495A3907C007FC3903F80FF0C6B55A013F13
80D907F8C7FC243F7CBC2D>I<150E151E153EA2157EA215FE1401A21403EC077E140614
0E141CA214381470A214E0EB01C0A2EB0380EB0700A2130E5BA25B5BA25B5B1201485A90
C7FC5A120E120C121C5AA25A5AB8FCA3C8EAFE00AC4A7E49B6FCA3283E7EBD2D>I<0006
1403D80780131F01F813FE90B5FC5D5D5D15C092C7FC14FCEB3FE090C9FCACEB01FE9038
0FFF8090383E03E090387001F8496C7E49137E497F90C713800006141FC813C0A216E015
0FA316F0A3120C127F7F12FFA416E090C7121F12FC007015C012780038EC3F80123C6CEC
7F00001F14FE6C6C485A6C6C485A3903F80FE0C6B55A013F90C7FCEB07F8243F7CBC2D>
I<EC1FE0ECFFF8903803F03E90380FC00F90391F000780133E017EEB1FC049133F484813
7F12035B12074848EB3F80ED1F00001F91C7FC5BA2123FA3485AA214FE903887FF8039FF
8F07E090389C01F09038B800FC01B0137E13F0497F16804914C0A2ED1FE0A34914F0A512
7FA6123F6D14E0A2121FED3FC0A26C6C1480A20007EC7F006C6C137E6C6C5B6C6C485A90
387E07F06DB45A010F1380D903FCC7FC243F7CBC2D>I<1238123C123F90B612FCA316F8
5A16F016E00078C712010070EC03C0ED078016005D48141E151C153C5DC8127015F04A5A
5D14034A5A92C7FC5C141EA25CA2147C147814F8A213015C1303A31307A3130F5CA2131F
A6133FAA6D5A0107C8FC26407BBD2D>I<EB03FC90381FFF8090387C07E09038F001F839
01E0007C48487F48487F48C7FCED0F80121E16C0003E1407A4123FA26DEB0F807F6C6C13
1F6D140001FC133E6C6C5B9038FF80786C6D5A6CEBF3E06CEBFF806C91C7FC133F6D13C0
6D7F013F13F801787F48486C7E3903E01FFF48486C1380260F800313C048487E48903800
7FE0003E143F007E141F007CEC0FF01507481403A31501A46C15E0007C1403A2007E15C0
6C14076CEC0F806DEB1F006C6C133ED807F05B3901FC03F86CB512E0011F1380D903FCC7
FC243F7CBC2D>I<EB03FCEB1FFF90387E07C09038FC03F048486C7E48486C7E4848137C
000F147E4848137F81003F15805B007F15C0A2151F12FF16E0A516F0A5127F153FA36C7E
A2001F147F120F6C6C13FF6D13DF000313013900F8039F90387E0F1FD91FFE13E0EB07F0
90C7FCA2ED3FC0A41680157FD80F801400487E486C13FEA24A5A5D49485AEB8007391E00
0FE0001F495A260FC07FC7FC3803FFFE6C13F838003FC0243F7CBC2D>I<121EEA7F80A2
EAFFC0A4EA7F80A2EA1E00C7FCB3121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A2779A619
>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3121E127FEAFF80A213C0A4127F12
1E1200A412011380A3120313005A1206120E120C121C5A1230A20A3979A619>I<EB1FF8
90B5FC3903E01FC0390F0007F0001EEB03F848EB01FC4814FE140000FE14FF7E7FA46CC7
FC123EC7EA01FEA2EC03FCEC07F815F0EC0FC0EC1F80EC3F00143E5C147814F85C13015C
A2495AA25CAB91C7FC90C8FCA8EB0780EB1FE0A2497EA46D5AA2EB078020407BBF2B>63
D<15074B7EA34B7EA34B7EA34B7EA34B7E15E7A2913801C7FC15C3A291380381FEA34AC6
7EA3020E6D7EA34A6D7EA34A6D7EA34A6D7EA34A6D7EA349486D7E91B6FCA24981913880
0001A249C87EA24982010E157FA2011E82011C153FA2013C820138151FA2017882170F13
FC00034C7ED80FFF4B7EB500F0010FB512F8A33D417DC044>65 D<B712FCEEFF8017F000
01903980000FF86C6CC7EA03FE707E701380EF7FC0EF3FE0A2EF1FF0A218F8A3170F171F
A318F0A2EF3FE0177F18C0EFFF804C1300EE03FCEE0FF8EE7FE091B6C7FC17E091C7EA07
FCEE01FE933800FF80EF7FC0EF3FE0EF1FF018F8170F18FC1707A218FEA718FC170FA2EF
1FF818F0173FEF7FE0EFFFC00403138048486C90380FFE00B85A17E094C7FC373E7DBD40
>I<DB3FF01306912603FFFE130E020F9038FF801E913A3FF007E03E9139FF8000F8D903
FEC7EA7C7ED907F8EC1EFE4948140FD93FE0140749481403495A91C81201484815001203
4848167E5B000F173EA24848161EA2123F5B180E127FA349160012FFAC127F7F180EA212
3FA27F001F171E181C6C7EA20007173C6D16386C6C1678000117706C6C16F06EEC01E06D
6C15C06D6C1403D90FF0EC07806D6CEC1F00D903FE143E902600FF8013F891393FF007F0
020FB512C0020391C7FC9138003FF037427BBF42>I<B712FCEEFF8017E000019039C000
1FF86C6C48EB03FEEE00FF717E717EEF0FE084717E717E170184717EA21980187F19C0A3
F03FE0A519F0AB19E0A5F07FC0A21980A218FF19004D5AA24D5A6017074D5A4D5AEF7FC0
4DC7FCEE03FE48486CEB1FF8B85A178004FCC8FC3C3E7DBD45>I<B912E0A300019038C0
00016C6C48EB001FEF0FF01703A217011700A31870A418381638A41800A21678A216F815
01150791B5FCA3EC8007150115001678A21638A2180EA3181C93C7FCA4183C1838A21878
A318F8EF01F0A21707170F173F48486CEB03FFB912E0A3373E7DBD3E>I<B91280A30001
9038C000036C6C48EB007FEF1FC0170F1707A21703A31701A4EF00E0A21638A31800A316
78A216F81501150791B5FCA3EC8007150115001678A21638A693C8FCAF3801FFE0B612F0
A3333E7DBD3B>I<DB3FE0130C912603FFFE131C021F9038FF803C913A7FF00FC07C9139
FF0001F0D903FC90380078FC4948143DD91FE0141F4948140F4948140701FF15034890C8
FC491501485A000716005B000F177C5B001F173CA2485AA2181C127FA25B95C7FC12FFAB
041FB512F0127FA26D9139000FFE00EF03FC123FA27F121FA26C7EA212077F12036C7E7F
6C7F6D6C14076D7E6D6C140FD907F8141ED903FEEC3C7C902600FF80EBF83C913A7FF007
F01C021FB5EAC00C020391C8FC9138003FF03C427BBF47>I<B6D8C01FB512F8A3000101
E0C7383FFC0026007F80EC0FF0B3A691B7FCA30280C7120FB3A92601FFE0EC3FFCB6D8C0
1FB512F8A33D3E7DBD44>I<B612F0A3C6EBF000EB3FC0B3B3B2EBFFF0B612F0A31C3E7E
BD21>I<011FB512FCA3D9000713006E5A1401B3B3A6123FEA7F80EAFFC0A44A5A1380D8
7F005B007C130700385C003C495A6C495A6C495A2603E07EC7FC3800FFF8EB3FC026407C
BD2F>I<B600C090387FFFFCA3000101E0C7000F138026007F80913807FE0018F818E060
4D5A4DC7FC173E5F5F4C5A4C5A4C5A4C5A4CC8FC163E5E5E4B5A4B5AED07804B7E151F4B
7E4B7E15FF913881EFF8913883C7FCEC878791388F03FE91389E01FF14BCDAF8007F4A6D
7E5C4A6D7E4A6D7EA2707E707EA2707E707EA2707F717E84173F717E717EA2717E848419
802601FFE04A13C0B600C090B6FCA3403E7DBD47>I<B612F8A3000101E0C9FC38007F80
B3B0EF0380A517071800A45FA35FA25F5F5F4C5A160748486C133FB8FCA3313E7DBD39>
I<B500C093B512C0A300016D4BEBE000D8007F1880D977F0ED03BFA3D973F8ED073FA3D9
71FC150EA2D970FE151CA3027F1538A36E6C1470A36E6C14E0A26E6CEB01C0A36E6CEB03
80A36E6CEB0700A26E6C130EA36E6C5BA3037F5BA26F6C5AA36F6C5AA392380FE1C0A392
3807F380A26FB4C7FCA36F5AA213F8486C6D5AD807FFEFFFE0B500F80178017FEBFFC0A3
4A3E7CBD53>I<B56C91B512F88080D8007F030713006EEC01FC6E6E5A1870EB77FCEB73
FEA2EB71FF01707FA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E6F7EA26F7E
6F7EA26F7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE
01FF7013F0A2177F173FA2171F170FA2170701F81503487ED807FF1501B500F81400A218
703D3E7DBD44>I<ED7FE0913807FFFE91391FC03F8091397E0007E04948EB03F8D907F0
EB00FE4948147F49486E7E49486E7E49C86C7E01FE6F7E00018349150300038348486F7E
A248486F7EA2001F188049167F003F18C0A3007F18E049163FA300FF18F0AC007F18E06D
167FA4003F18C0A26C6CEEFF80A36C6C4B1300A26C6C4B5A00035F6D150700015F6C6C4B
5A6D5E6D6C4A5A6D6C4A5A6D6C4AC7FC6D6C14FED901FCEB03F8D9007FEB0FE091391FC0
3F80912607FFFEC8FC9138007FE03C427BBF47>I<B712F8EEFF8017E000019039C0003F
F86C6C48EB07FCEE01FE707EEF7F80EF3FC018E0A2EF1FF0A218F8A818F0A2EF3FE0A218
C0EF7F80EFFF004C5AEE07FCEE3FF091B612C04CC7FC0280C9FCB3A73801FFE0B612C0A3
353E7DBD3E>I<ED7FE0913807FFFE91391FC03F8091397F000FE0D901FCEB03F8D907F0
EB00FE4948147F49486E7E49486E7E49C86C7E498248486F7E49150300038348486F7EA2
000F834981001F1880A24848EE7FC0A3007F18E0A249163FA200FF18F0AC007F18E0A26D
167FA3003F18C0A26C6CEEFF80A3000F18006D5D0007DA0F805B6C6C90393FE003FCED70
706C6C496C485A6C6C48486C485A017FD9800E5BD93F819038061FC0D91FC19038073F80
D90FE14AC7FCD907F1EB03FE902601FDC013F8903A007EE007E091271FF03FC013180207
B5FC9139007FE1E0DB0001143883711378A2706C13F0EFFF0318FFA27113E0A37113C071
1380711300715AEF01F83D527BBF47>I<B712C016FCEEFF800001D9C00013E06C6C48EB
1FF0EE07FCEE01FE707E84717EA2717EA284A760177F606017FF95C7FCEE01FCEE07F8EE
1FE0EEFF8091B500FCC8FC16F091388001FCED003FEE1FC0707E707E83160383160183A3
83A484A4F0C004190EA28218E0057F131E2601FFE0161CB600C0EB3FF094381FF8380507
1370CA3801FFE09438003F803F407DBD43>I<D907FC131890391FFF8038017FEBE07839
01FC03F83A03F0007CF8D807C0133F4848130F001F140748C7FC003E1403007E1401A200
7C140012FC1678A46C1538A27EA26C6C14007F7FEA3FF8EBFF806C13F86CEBFF806C14F0
6C14FC6C14FF6C15C0013F14E0010714F0EB007F020713F89138007FFC150FED07FE1503
1501ED00FFA200E0157FA3163FA27EA3163E7E167E6C157C6C15FC6C15F86D13016DEB03
F06DEB07E0D8F9FCEB0FC03AF07F803F8090391FFFFE00D8E00713F839C0007FC028427B
BF33>I<003FB91280A3903AF0007FE001018090393FC0003F48C7ED1FC0007E1707127C
00781703A300701701A548EF00E0A5C81600B3B14B7E4B7E0107B612FEA33B3D7DBC42>
I<B600C090B512F8A3000101E0C70007130026007F80EC01FC715A1870B3B3A4013F16F0
6E5DA21701011F5E80010F15036E4A5A010793C7FC6D6C5C6D6C141E6D6C5C027F14F86E
6C485A91390FF00FE00203B51280020049C8FCED1FF03D407DBD44>I<B691380FFFFEA3
000301E0020113E06C01809138007F806CEF3F00017F163E181C6E153C013F1638A26E15
78011F1670A26D6C5DA26E140101075EA26E140301035EA26D6C4AC7FCA2806D150EA26F
131E027F141CA26F133C023F1438A26E6C5BA26F13F0020F5CA2EDF80102075CA26E6C48
5AA2EDFE07020191C8FCA26F5A6E130EA2ED7F9CA216DCED3FF8A36F5AA36F5AA26F5AA3
6F5A3F407EBD44>I<B500FE017FB5D88007B5FCA3000301C0010101E0C713F86C90C849
EC3FE07148EC0F807E7215006E143F017F190E84A26D6C60A24D7E6D6C60A2EFE7F86D6C
60A2933801C3FC6E18F001076104037F6E0281140101036104077F17006D6C4D5AA2040E
EB7F806D6C4DC7FCA24CEB3FC0DA7F80160EA24CEB1FE003C0161E023F171C047814F0DB
E070010F133C021F173804F014F84C1307DA0FF05EA2DBF1C0EB03FCDA07F95EA2DBFB80
EB01FEDA03FF6F5AA293C8FCA26E5FA24B157F020094C8FCA24B81037C153EA20378151E
0338151C58407EBD5D>I<B66C0103B51280A3000101F0C8EBF8006C6C48ED3FC0725A01
3F041EC7FC6D7E606D6C15386D6C1578606D6C5D6E14016D5E6D6D1303606E6C49C8FC6E
6C5B170E6E6C131E171C6E6C5B6E6C137817706E6C13F06F5B6E13016EEB83C05FED7FC7
DB3FE7C9FC16EFED1FFE5E150F6F5AB3A4ED1FFC020FB512FCA3413E7FBD44>89
D<EAFFFCA4EAF000B3B3B3B3ABEAFFFCA40E5B77C319>91 D<486C13C000031301010013
80481303000EEB070048130E0018130C0038131C003013180070133800601330A300E013
70481360A400CFEB678039FFC07FE001E013F0A3007F133FA2003F131F01C013E0390F00
07801C1C73BE2D>I<EAFFFCA4EA003CB3B3B3B3ABEAFFFCA40E5B7FC319>I<EB0FF8EBFF
FE3903F01F8039078007E0000F6D7E9038E001F8D81FF07F6E7EA3157F6C5AEA0380C8FC
A4EC1FFF0103B5FC90381FF87FEB7F803801FC00EA07F8EA0FE0485A485AA248C7FCEE03
8012FEA315FFA3007F5BEC03BF3B3F80071F8700261FC00E13CF3A07F03C0FFE3A01FFF8
07FC3A003FC001F0292A7DA82D>97 D<EA01FC12FFA3120712031201B1EC03FC91381FFF
8091387C07E09039FDE001F09039FFC000FC4A137E91C77E49158049141F17C0EE0FE0A2
17F0A2160717F8AA17F0A2160FA217E0161F17C06D1580EE3F006D5C6E13FE9039F3C001
F89039F1E003F09039E0780FC09026C03FFFC7FCC7EA07F82D407EBE33>I<49B4FC010F
13E090383F00F8017C131E4848131F4848137F0007ECFF80485A5B121FA24848EB7F0015
1C007F91C7FCA290C9FC5AAB6C7EA3003FEC01C07F001F140316806C6C13076C6C140000
03140E6C6C131E6C6C137890383F01F090380FFFC0D901FEC7FC222A7DA828>I<ED01FC
15FFA3150715031501B114FF010713E190381F80F990387E003D49131FD803F81307485A
49130348481301121F123F5B127FA290C7FCA25AAA7E7FA2123FA26C7E000F14037F0007
14076C6C497E6C6C497ED8007C017913F890383F01F190380FFFC1903A01FE01FC002D40
7DBE33>I<EB01FE90380FFFC090383F03F09038FC01F848486C7E4848137E48487F000F
158049131F001F15C04848130FA2127F16E090C7FCA25AA290B6FCA290C9FCA67EA27F12
3F16E06C7E1501000F15C06C6C13036DEB07806C6C1400C66C131E017E5B90381F80F890
3807FFE0010090C7FC232A7EA828>I<EC1FC0EC7FF8903801F83C903807E07E90380FC0
FFEB1FC1EB3F811401137FEC00FE01FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FF
A320407EBF1C>I<167C903903F801FF903A1FFF078F8090397E0FDE1F9038F803F83803
F001A23B07E000FC0600000F6EC7FC49137E001F147FA8000F147E6D13FE00075C6C6C48
5AA23901F803E03903FE0FC026071FFFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512
E015FE6C6E7E6C15E06C810003813A0FC0001FFC48C7EA01FE003E140048157E825A82A4
6C5D007C153E007E157E6C5D6C6C495A6C6C495AD803F0EB0FC0D800FE017FC7FC90383F
FFFC010313C0293D7EA82D>I<EA01FC12FFA3120712031201B1EC01FE913807FFC09138
1E07E091387803F09138E001F8D9FDC07F148001FF6D7E91C7FCA25BA25BB3A6486C497E
B5D8F87F13FCA32E3F7DBE33>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC
127FA3120712031201B3AC487EB512F0A3143E7DBD1A>I<1478EB01FEA2EB03FFA4EB01
FEA2EB00781400AC147FEB7FFFA313017F147FB3B3A5123E127F38FF807E14FEA214FCEB
81F8EA7F01387C03F0381E07C0380FFF803801FC00185185BD1C>I<EA01FC12FFA31207
12031201B292B51280A392383FFC0016E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8FC
143E147F4A7E13FD9038FFDFC0EC9FE0140F496C7E01FC7F496C7E1401816E7E81826F7E
151F826F7EA282486C14FEB539F07FFFE0A32B3F7EBE30>I<EA01FC12FFA31207120312
01B3B3B1487EB512F8A3153F7DBE1A>I<2701F801FE14FF00FF902707FFC00313E0913B
1E07E00F03F0913B7803F03C01F80007903BE001F87000FC2603F9C06D487F000101805C
01FBD900FF147F91C75B13FF4992C7FCA2495CB3A6486C496CECFF80B5D8F87FD9FC3F13
FEA347287DA74C>I<3901F801FE00FF903807FFC091381E07E091387803F000079038E0
01F82603F9C07F0001138001FB6D7E91C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA3
2E287DA733>I<14FF010713E090381F81F890387E007E01F8131F4848EB0F804848EB07
C04848EB03E0000F15F04848EB01F8A2003F15FCA248C812FEA44815FFA96C15FEA36C6C
EB01FCA3001F15F86C6CEB03F0A26C6CEB07E06C6CEB0FC06C6CEB1F80D8007EEB7E0090
383F81FC90380FFFF0010090C7FC282A7EA82D>I<3901FC03FC00FF90381FFF8091387C
0FE09039FDE003F03A07FFC001FC6C496C7E6C90C7127F49EC3F805BEE1FC017E0A2EE0F
F0A3EE07F8AAEE0FF0A4EE1FE0A2EE3FC06D1580EE7F007F6E13FE9138C001F89039FDE0
07F09039FC780FC0DA3FFFC7FCEC07F891C9FCAD487EB512F8A32D3A7EA733>I<02FF13
1C0107EBC03C90381F80F090397F00387C01FC131CD803F8130E4848EB0FFC1507484813
03121F485A1501485AA448C7FCAA6C7EA36C7EA2001F14036C7E15076C6C130F6C7E6C6C
133DD8007E137990383F81F190380FFFC1903801FE0190C7FCAD4B7E92B512F8A32D3A7D
A730>I<3901F807E000FFEB1FF8EC787CECE1FE3807F9C100031381EA01FB1401EC00FC
01FF1330491300A35BB3A5487EB512FEA31F287EA724>I<90383FC0603901FFF8E03807
C03F381F000F003E1307003C1303127C0078130112F81400A27E7E7E6D1300EA7FF8EBFF
C06C13F86C13FE6C7F6C1480000114C0D8003F13E0010313F0EB001FEC0FF800E01303A2
14017E1400A27E15F07E14016C14E06CEB03C0903880078039F3E01F0038E0FFFC38C01F
E01D2A7DA824>I<131CA6133CA4137CA213FCA2120112031207001FB512C0B6FCA2D801
FCC7FCB3A215E0A912009038FE01C0A2EB7F03013F138090381F8700EB07FEEB01F81B39
7EB723>I<D801FC14FE00FF147FA3000714030003140100011400B3A51501A315031200
15076DEB06FF017E010E13806D4913FC90381FC078903807FFE00100903880FE002E297D
A733>I<B539E00FFFE0A32707FE000313006C48EB00FC5E00015D7F00005DA26D13016D
5CA26D6C485AA2ECC007011F91C7FCA290380FE00EA2ECF01E0107131CA26D6C5AA2ECFC
7801011370A2ECFEF001005BA2EC7FC0A36E5AA26EC8FCA3140E2B287EA630>I<B53BC3
FFFE03FFF8A3290FFE003FE00013C06C486D48EB3F806C4817006D010F141E00016F131C
15076D163C00004A6C1338A2017F5E4B7E151DD93F805DED3DFC1538D91FC04A5AED78FE
9238707E03D90FE0017F5BEDE03F02F0140701070387C7FC9138F1C01F02F9148F010315
CE9138FB800F02FF14DE6D15FCED00076D5DA24A1303027E5CA2027C1301023C5C023813
003D287EA642>I<B539F01FFFE0A30003D9C00F1300C690388007F8D97F0013E002805B
D93FC05B011F49C7FC90380FE00EECF01E6D6C5A01035B6D6C5A6E5AEB00FF6E5A6E5A81
141F814A7E81147BECF1FC903801E1FEECC0FF01037F49486C7ED90F007F011E6D7E013E
130F496D7E01FC80486C80000F4A7EB539803FFFF8A32D277FA630>I<B539E00FFFE0A3
2707FE000313006C48EB01FC6F5A00015D7F00005DA2017F495AA2EC8003013F5CA26D6C
48C7FCA26E5A010F130EA26D6C5AA2ECF83C01031338A26D6C5AA2ECFEF001005BA2EC7F
C0A36E5AA36EC8FCA2140EA2141E141C143C1438A2147800181370127EB45BA2495AA248
485AD87E07C9FCEA780EEA3C3CEA1FF8EA07E02B3A7EA630>I<001FB61280A2EBE00001
80140049485A001E495A121C4A5A003C495A141F00385C4A5A147F5D4AC7FCC6485AA249
5A495A130F5C495A90393FC00380A2EB7F80EBFF005A5B484813071207491400485A4848
5BA248485B4848137F00FF495A90B6FCA221277EA628>I<B812F0A22C0280982D>I<001C
130E007FEB3F8039FF807FC0A5397F003F80001CEB0E001A0977BD2D>127
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmbx10 10.95 7
/Ft 7 117 df<16FCA24B7EA24B7EA34B7FA24B7FA34B7FA24B7FA34B7F157C03FC7FED
F87FA2020180EDF03F0203804B7E02078115C082020F814B7E021F811500824A81023E7F
027E81027C7FA202FC814A147F49B77EA34982A2D907E0C7001F7F4A80010F835C83011F
8391C87E4983133E83017E83017C81B500FC91B612FCA5463F7CBE4F>65
D<903807FFC0013F13F848B6FC48812607FE037F260FF8007F6DEB3FF0486C806F7EA36F
7EA26C5A6C5AEA01E0C8FC153F91B5FC130F137F3901FFFE0F4813E0000F1380381FFE00
485A5B485A12FF5BA4151F7F007F143F6D90387BFF806C6C01FB13FE391FFF07F36CEBFF
E100031480C6EC003FD91FF890C7FC2F2B7DA933>97 D<13FFB5FCA512077EAFEDFFE002
0713FC021FEBFF80027F80DAFF8113F09139FC003FF802F06D7E4A6D7E4A13074A807013
80A218C082A318E0AA18C0A25E1880A218005E6E5C6E495A6E495A02FCEB7FF0903AFCFF
01FFE0496CB55AD9F01F91C7FCD9E00713FCC7000113C033407DBE3A>I<EC7FF00107B5
FC011F14C0017F14E09039FFF01FF0489038800FF848EB001F4848EB3FFC120F485AA248
5AA2007FEC1FF849EB0FF0ED03C000FF91C7FCAB127F7FA3003F153E7F001F157E6C6C14
7C6C6C14FC91388001F86C9038C003F0C69038F81FE06DB512C0011F14800107EBFE0090
38007FF0272B7DA92E>I<3901FE01FE00FF903807FF804A13E04A13F0EC3F1F91387C3F
F8000713F8000313F0EBFFE0A29138C01FF0ED0FE091388007C092C7FCA391C8FCB3A2B6
FCA525297DA82B>114 D<90383FFC1E48B512BE000714FE5A381FF00F383F800148C7FC
007E147EA200FE143EA27E7F6D90C7FC13F8EBFFE06C13FF15C06C14F06C806C806C806C
80C61580131F1300020713C014000078147F00F8143F151F7EA27E16806C143F6D140001
E013FF9038F803FE90B55A15F0D8F87F13C026E00FFEC7FC222B7DA929>I<EB07C0A513
0FA4131FA3133F137FA213FF5A1207001FEBFFFEB6FCA40001EBC000B3151FA96CEBE03E
A2017F137EECF8FC90383FFFF86D13F0010713E001001380203B7EB929>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmsy10 10.95 4
/Fu 4 104 df<007FB812F8B912FCA26C17F83604789847>0 D<0060166000F816F06C15
01007E15036CED07E06C6CEC0FC06C6CEC1F806C6CEC3F006C6C147E6C6C5C6C6C495A01
7E495A6D495A6D6C485A6D6C485A6D6C48C7FC903803F07E6D6C5A903800FDF8EC7FF06E
5A6E5AA24A7E4A7EECFDF8903801F8FC903803F07E49487E49486C7E49486C7E49486C7E
017E6D7E496D7E48486D7E4848147E4848804848EC1F804848EC0FC048C8EA07E0007EED
03F0481501481500006016602C2C73AC47>2 D<153FEC03FFEC0FE0EC3F80EC7E00495A
5C495AA2495AB3AA130F5C131F495A91C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA
00FE133F806D7E130F801307B3AA6D7EA26D7E80EB007EEC3F80EC0FE0EC03FFEC003F20
5B7AC32D>102 D<12FCEAFFC0EA07F0EA01FCEA007E6D7E131F6D7EA26D7EB3AA801303
806D7E1300147FEC1FC0EC07FEEC00FFEC07FEEC1FC0EC7F0014FC1301495A5C13075CB3
AA495AA2495A133F017EC7FC485AEA07F0EAFFC000FCC8FC205B7AC32D>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fv cmti10 10.95 56
/Fv 56 123 df<933807FF80043F13E09338FE00F8DB01F0133EDB07E0130E4B48131F4C
137F031F14FF4BC7FCA218FE157E1878180015FE5DA31401A25DA414030103B712F0A218
E0903A0003F000070207140F4B14C0A3171F020F15805DA2173F1800141F5D5F177EA214
3F92C712FE5FA34A1301027EECF81CA3160302FEECF03C4A1538A21878187013014A0101
13F018E0933800F1C0EF7F804948EC1F0094C7FCA35C1307A2001E5B127F130F00FF5BA2
49CAFC12FEEAF81EEA703CEA7878EA1FF0EA07C0385383BF33>12
D<ED01801507ED0F00151C5D5D5D14014A5A4A5A4AC7FC141E143E5C14785C1301495AA2
495A5C130F49C8FCA2133EA25BA213FC5B12015BA212035B1207A25B120FA25BA2121FA2
90C9FCA25AA2123EA2127EA2127CA65AAB1278A67EA47EA2120E120F7EA26C7EA26C7E6C
7E1360215A73C325>40 D<14031580A2EC01C0EC00E0A21570A215781538153CA3151EA4
151FA2150FA7151FA9153FA2153EA3157EA2157CA215FCA215F8A21401A215F0A2140315
E0A2140715C0A2EC0F80A2141F15005C143EA25CA25CA2495A5C1303495A5C130F49C7FC
131E5B137C5B5B485A485A485A48C8FC121E5A12705A5A205A7FC325>I<EA01E0EA07F8
120FA2EA1FFCA4EA0FF8EA0798EA001813381330A21370136013E013C01201EA0380EA07
001206120E5A5A5A5A5A0E1C7A891C>44 D<387FFFFCA3B5FCA21605799521>I<120FEA
3FC0127FA212FFA31380EA7F00123C0A0A77891C>I<15FE913807FF8091381F07C09138
7C01F0ECF000494813F8494813780107147C495A49C7FC167E133E137EA25BA2485AA200
0315FEA25B000715FCA2491301120FA34848EB03F8A44848EB07F0A448C7EA0FE0A316C0
007E141F12FE1680153FA2481500A2157EA25DA25D4813015D6C495A127C4A5A4A5A6C49
C7FC143E6C5B380FC1F03803FFC0C648C8FC273F76BC2E>48 D<15031507150F151F151E
153E157EEC01FEEC03FC1407141FEB01FF90380FFBF8EB1FC3EB0E07130015F0A2140FA2
15E0A2141FA215C0A2143FA21580A2147FA21500A25CA25CA21301A25CA21303A25CA213
07A25CA2130FA25CA2131FA25CEB7FE0B612F0A215E0203D77BC2E>I<15FE913803FFC0
91380F01F091383C00F84A137C4A7F4948133F49487F4A148049C7FC5BEB0E0C011E15C0
EB1C0EEB3C06133813781370020E133FD9F00C148013E0141C0218137F00011600EBC038
4A13FEEC600102E05B3A00E3C003F89039FF0007F0013C495A90C7485A5E037FC7FC15FC
4A5A4A5AEC0FC04AC8FC147E14F8EB03E0495A011FC9FC133E49141801F0143C48481438
485A1678485A48C85A120E001E4A5AD83FE0130301FF495A397C3FF01FD8780FB55AD870
0391C7FCD8F0015B486C6C5A6E5AEC07C02A3F79BC2E>I<D9703FEB01C09138FF800301
F3158001EFEBC00790B5EB0F0048151E14832603FE015B01F8147C2607F0005B49EBE3F0
4848137F496D5A48C71201001E4A5A1507485D0038140F007892C7FC00705C00F0143E5A
5DC8FC5DA24A5AA214035D14074A5AA2141F5DA24AC8FCA25C147E14FEA2495AA3495AA3
13075C130FA25C131FA35C133FA35C91C9FC131E2A3F73BC2E>55
D<131EEB3F80137FEBFFC05AA214806C13005B133C90C7FCB3120FEA3FC0127FA212FFA3
5B6CC7FC123C122777A61C>58 D<4BB4FC031F13E092387E00F8DA01F0131EDA07801307
021FC7EA03C0023CEC01E04A1400D901E01570494815784948153849C9121C131E49D907
E0131E0138D93FFC130E49EBFC1E9039F001F0073C01E007E00380079038C00FC0000390
391F8001C09026803F0013FC2607007EEB00FE484914FC120E381E01F8D81C0314014A14
F8EA3C0700385B0403130FD8780FEDF00E00705BA20407131ED8F01FEDE01C00E05BA204
0F133CEFC038A3041F1370010F1580043F13F06E017F13E00107ECFF814B14C0903B03E0
03DF0380903A01F00F1F073C7000F83E0F8F0091393FF807FC91390FC001F06C90CAFCA2
123C121C7E000FEE1F806C6C157F6C6C913801FC006C6CEC0FF0D80078ECFF80013FD91F
FCC7FC010FB512C0010001F0C8FC384172BF46>64 D<171C173C177CA217FCA216011603
A21607A24C7EA2161DA216391679167116E1A2ED01C1A2ED038115071601150EA2031C7F
A24B7EA25D15F05D4A5AA24A5AA24AC7FC5C140E5C021FB6FC4A81A20270C7127FA25C13
015C495AA249C8FCA2130E131E131C133C5B01F882487ED807FEEC01FFB500E0017FEBFF
80A25C39417BC044>I<49B712C018F818FE903B0003FC0001FF9438007F804BEC3FC0A2
F01FE014074B15F0180FA2140F5D181FA2021F16E05D183F19C0023FED7F804B14FF1900
4D5A027F4A5A92C7EA07F0EF1FE0EF7F804AD903FEC7FC92B512F017FE4AC7EA3F800101
ED1FE04A6E7E17078401036F7E5CA30107825CA3010F5E4A1407A260011F150F5C4D5A60
013F153F4A4A5A4D5A017F4A90C7FC4C5A91C7EA0FF849EC3FF0B812C094C8FC16F83C3E
7BBD40>I<9339FF8001C0030F13E0033F9038F803809239FF807E07913A03FC001F0FDA
0FF0EB071FDA1FC0ECBF00DA7F806DB4FC4AC77E495AD903F86E5A495A130F4948157E49
48157C495A13FF91C9FC4848167812035B1207491670120FA2485A95C7FC485AA3127F5B
A312FF5BA490CCFCA2170FA2170EA2171E171C173C173817786C16706D15F04C5A003F5E
6D1403001F4B5A6D4AC8FC000F151E6C6C5C6C6C14F86C6C495A6C6CEB07C090397FC03F
8090261FFFFEC9FC010713F0010013803A4272BF41>I<49B712C018F818FE903B0003FE
0003FF9438007F804BEC1FC0F00FE0F007F014074BEC03F8F001FCA2140F4BEC00FEA314
1F4B15FFA3143F5DA3027F5D5DA219FE14FF92C81203A34917FC4A1507A219F813034A15
0F19F0A20107EE1FE05CF03FC0A2010FEE7F804A16006060011F4B5A4A4A5A4D5AA2013F
4B5A4AEC3FC04DC7FC017F15FEEE03FC4AEB0FF001FFEC7FE0B8128004FCC8FC16E0403E
7BBD45>I<49B812F8A390260003FEC7121F18074B14031801F000F014075DA3140F5D19
E0A2141F4B1338A2EF7801023F027013C04B91C7FCA217F0027F5CED80011603160F91B6
5AA3ED001F49EC07805CA3010392C8FC5CF003804C13070107020E14005C93C75A180E01
0F161E4A151C183CA2011F5E5C60A2013F15014A4A5A1707017F150F4D5A4A147F01FF91
3807FF80B9FCA295C7FC3D3E7BBD3E>I<49B812F0A390260003FEC7123F180F4B1403A2
F001E014075DA3140F5D19C0A2141F5D1770EFF003023F02E013804B91C7FCA21601027F
5CED8003A2160702FFEB1F8092B5FCA349D9003FC8FC4A7F82A20103140E5CA2161E0107
141C5CA293C9FC130F5CA3131F5CA3133F5CA2137FA25C497EB612E0A33C3E7BBD3B>I<
9339FF8001C0030F13E0033F9038F803809239FF807E07913A03FC001F0FDA0FF0EB071F
DA1FC0ECBF00DA7F806DB4FC4AC77E495AD903F86E5A495A130F4948157E4948157C495A
13FF91C9FC4848167812035B1207491670120FA2485A95C7FC485AA3127F5BA312FF5BA3
0303B512FC90C7FCA2DB000190C7FCA25FA216035FA316076C5E7FA2003F150F6D5D121F
6D141F000F153F6C6C4A5A6C6C14F76C6CEB01E36CB4EB07C1903A7FC03F81C090391FFF
FE00010701F890C8FC010013803A4272BF46>I<49B648B6FC495DA2D9000390C7000313
004B5D4B5DA2180714074B5DA2180F140F4B5DA2181F141F4B5DA2183F143F4B5DA2187F
147F4B5DA218FF91B8FC96C7FCA292C712015B4A5DA2170313034A5DA2170713074A5DA2
170F130F4A5DA2171F131F4A5DA2173F133F4A5DA2017F157FA24A5D496C4A7EB66CB67E
A3483E7BBD44>I<49B6FC5BA2D9000313005D5DA314075DA3140F5DA3141F5DA3143F5D
A3147F5DA314FF92C7FCA35B5CA313035CA313075CA3130F5CA3131F5CA3133F5CA2137F
A25C497EB67EA3283E7BBD23>I<49B6903807FFFE605ED9000390C7000113E04B6E1300
4B15FC4E5A19E002074B5A4BEC0F804EC7FC183C020F5D4B5C4D5AEF07C0021F4AC8FC4B
131E5F5F023F5C9238C003E0EE07804CC9FC027F5B4B5AEEFF801581ECFF834B7FED0F7F
ED1E3F49017C7FECFEF89138FFE01F03C07F491380ED000F4A805C010714074A80A21603
010F815C160183131F4A6D7FA2177F013F825C173F017F82A24A81496C4A7EB6D8800FB5
12C0A261473E7BBD46>75 D<49B612C0A25FD9000390C8FC5D5DA314075DA3140F5DA314
1F5DA3143F5DA3147F5DA314FF92C9FCA35B5CA313035C18C0EF01E0010716C05C170318
80130F4A140718005F131F4A141EA2173E013F5D4A14FC1601017F4A5A16074A131F01FF
ECFFF0B8FCA25F333E7BBD39>I<49B5933807FFFC496062D90003F0FC00505ADBBF805E
1A771AEF1407033F923801CFE0A2F1039F020FEE071F020E606F6C140E1A3F021E161C02
1C04385BA2F1707F143C023804E090C7FCF001C0629126780FE0495A02705FF00700F00E
0114F002E0031C5BA2F03803010116704A6C6C5D18E019070103ED01C00280DA03805BA2
943807000F13070200020E5C5FDB03F8141F495D010E4B5CA24D133F131E011CDAF9C05C
EEFB80197F013C6DB4C7FC013895C8FC5E01784A5C13F8486C4A5CD807FE4C7EB500F049
48B512FE16E01500563E7BBD52>I<902601FFFE020FB5FC496D5CA2D900016D010013C0
4AEE3F00193E70141C193CEC07BFDB3FE01438151F1978020F7FDA0E0F15708219F0EC1E
07021C6D5CA203031401023C7FDA38015DA2701303EC7800027002805BA2047F130702F0
14C04A013F91C7FCA2715A0101141F4AECF00EA2040F131E010315F84A151C1607EFFC3C
0107140391C7143817FE040113784915FF010E16708218F0131E011C6F5AA2173F133C01
385E171F137813F8486C6F5AEA07FEB500F01407A295C8FC483E7BBD44>I<49B77E18F0
18FC903B0003FE0003FEEF00FF4BEC7F80F03FC00207151F19E05DA2020F16F0A25DA214
1FF03FE05DA2023F16C0187F4B1580A2027FEDFF00604B495A4D5A02FF4A5A4D5A92C7EA
3FC04CB4C7FC4990B512FC17E04ACAFCA21303A25CA21307A25CA2130FA25CA2131FA25C
A2133FA25CA2137FA25C497EB67EA33C3E7BBD3E>80 D<49B612FCEFFF8018F0903B0003
FE000FF8EF03FE4BEB00FF8419800207ED3FC05DA219E0140F5DA3021FED7FC05DA2F0FF
80143F4B15004D5A60027F4A5A4B495A4D5AEF3F8002FF02FEC7FC92380007F892B512E0
1780499038000FE04A6D7E707E707E0103814A130083A213075CA25E130F5C5F1603131F
5CA3013F020714404A16E05F017F160119C04A01031303496C1680B6D8800113079438FE
0F009338007E1ECAEA3FFCEF07F03B407BBD42>82 D<92391FE00380ED7FFC913A01FFFE
0700913907F01F8F91390FC007DF4AC66CB4FC023E6D5A4A130014FC495A4948147CA249
5AA2010F15785CA3011F1570A46E91C7FCA2808014FE90380FFFE015FC6DEBFF8016E06D
806D806D6C7F141F02037FEC003FED07FF1501A281A282A212075A167E120EA2001E15FE
5EA25E003E14015E003F14034B5A486C5C150F6D495A6D49C8FCD8F9F0137C39F8FE01F8
39F03FFFF0D8E00F13C026C001FEC9FC314279BF33>I<48B9FCA25A903AFE001FF00101
F89138E0007FD807E0163E49013F141E5B48C75BA2001E147FA2001C4B131C123C003814
FFA2007892C7FC12704A153C00F01738485CC716001403A25DA21407A25DA2140FA25DA2
141FA25DA2143FA25DA2147FA25DA214FFA292C9FCA25BA25CA21303A25CEB0FFE003FB6
7E5AA2383D71BC41>I<001FB500F090B512F0485DA226003FF0C7380FFC004AEC03F04A
5D715A017F1503A24A5DA201FF150795C7FC91C8FCA2485E170E5BA20003161E171C5BA2
0007163C17385BA2000F167817705BA2001F16F05F5BA2003F1501A2495DA2007F1503A2
495DA2160794C8FC48C8FC5E160E161E6C151C163C5E5E5E6C6C13014B5A001F4A5A6C6C
011FC9FC6D133E6C6C13F83903FC07F0C6B512C0013F90CAFCEB07F83C406FBD44>I<B6
91383FFFF0A25C000301C0913807FE006C49EC03F86C17E0604D5A017F93C7FC6E140E5F
013F153C6E5C17705F6D6C495A16034C5A010F92C8FC6E130E5E0107143C6E5B16705E6D
6C485A15034B5A010191C9FCECFF0E5D6D133C15F85D5D6E5AA25DA292CAFC5CA35C1301
A35C1303A35C1307A3495AA3131F001FB512F0A33C3E6EBD44>89
D<147E49B47E903907C1C38090391F80EFC090383F00FF017E137F4914804848133F485A
A248481400120F5B001F5C157E485AA215FE007F5C90C7FCA21401485C5AA21403EDF038
5AA21407EDE078020F1370127C021F13F0007E013F13E0003E137FECF3E1261F01E313C0
3A0F8781E3803A03FF00FF00D800FC133E252977A72E>97 D<EB1FC0EA0FFF5CA2EA003F
A291C7FCA25BA2137EA213FEA25BA21201A25BA21203A25B147E3907F1FF809038F783E0
9038EF01F013FE390FF800F8A24913FC49137C485A157E5B15FE123FA290C7FCA2481301
15FC127EA2140300FE14F85AA2EC07F0A215E048130F15C0141F15800078EB3F00127C14
7E003C5B383E01F8381E03E06C485A6CB4C7FCEA01F81F4076BE2A>I<EC1FC0ECFFF090
3803F03C903807C01E90381F800E90383F000F017E133F4913FF485A485A000714FE5B00
0F14FC48481300A2485AA3127F90C8FCA35A5AA6481403007E1407150F151E003E143C15
786C14F0EC03E0390F800F803903E07E003801FFF838003FC0202977A72A>I<EE3F80ED
1FFF1700A2ED007FA2167EA216FEA25EA21501A25EA21503A25EA21507A25E147E903801
FF8F903807C1CF90391F80EFC090383F00FF017E137F5B48486D5A485AA2485A000F92C7
FC5B001F5CA24848137EA215FE127F90C75AA214015A485CA2140316384814F0A2140716
7891380FE070127C021F13F0007E013F5B003E137FECF3E1261F01E35B3A0F8781E38027
03FF00FFC7FCD800FC133E294077BE2E>I<EC3F80903801FFE0903807E0F890381F803C
EB3E0001FC131E485A485A12074848133E49133C121F4848137C15F8EC03F0397F000FE0
ECFF809038FFFC00B512C048C8FCA45AA61506150E151E007C143C15786C14F0EC01E06C
EB07C0390F801F003807C0FC3801FFF038007F801F2976A72A>I<167C4BB4FC923807C7
8092380F83C0ED1F87161FED3F3FA2157EA21780EE0E004BC7FCA414015DA414035DA301
03B512F8A390260007E0C7FCA3140F5DA5141F5DA4143F92C8FCA45C147EA414FE5CA413
015CA4495AA4495AA4495A121E127F5C12FF49C9FCA2EAFE1EEAF83C1270EA7878EA3FE0
EA0F802A5383BF1C>I<EC03F0EC0FFC91383E0E1C9138FC077E903901F003FE13039038
07E001D90FC013FCEB1F80A2EB3F004914F8137E01FE1303A2484814F0A2150712034914
E0A2150F12074914C0A2151FA216805B153F1203ED7F006D5BA200015B0000495A9038F8
0F7E90387C1EFEEB1FF8903807E0FC90C7FC1401A25DA21403A25D001C1307007F5C4813
0F5D4A5A4AC7FC48137E00F85B387C03F0381FFFC0D803FEC8FC273B7CA72A>I<EB01FC
13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCEC03F890387F
0FFE91383E0F80D97E7813C0ECE007D9FFC013E014801400A2485A5BA25B0003140F16C0
5BA20007141F16805BA2000F143F16005B5D001F147EEDFE074913FCA2003F0101130FED
F80E1300161E48ECF01CA2007E1538A200FE1570020013E048EC7FC00038EC1F0028407A
BE2E>I<1478EB01FCA21303A314F8EB00E01400AD137C48B4FC38038F80EA0707000E13
C0121E121CEA3C0F1238A2EA781F00701380A2EAF03F140012005B137E13FE5BA212015B
A212035B1438120713E0000F1378EBC070A214F0EB80E0A2EB81C01383148038078700EA
03FEEA00F8163E79BC1C>I<1507ED1FC0A2153FA31680ED0E0092C7FCADEC07C0EC3FF0
EC78F8ECE07CEB01C01303EC807EEB0700A2010E13FE5D131E131CEB3C01A201005BA214
03A25DA21407A25DA2140FA25DA2141FA25DA2143FA292C7FCA25CA2147EA214FEA25CA2
13015CA2121C387F03F012FF495A5C495A4848C8FCEAF83EEA707CEA3FF0EA0FC0225083
BC1C>I<EB01FC13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8
FCED03E049EB0FF8ED3C3C017EEB707CEDE1FC9038FE01C1EC03839038FC0703140E0001
011C13F891383800E0494813001460000313E0EBF9C0EBF78001FEC8FC1207EBFFE0EBE7
F8EBE0FE000F137F6E7EEBC01F81001F130F16701380A2003F15F0021F13E001001380A2
48148116C0007EEB0F83168000FE14879138078F0048EB03FE0038EB00F826407ABE2A>
I<EB07F0EA03FF14E0A2EA000FA214C0A2131FA21480A2133FA21400A25BA2137EA213FE
A25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25A
1307127EA2EAFE0F130E12FCA2131E131CA2EA7C381378EA3C70EA1FE0EA0780144079BE
17>I<D801F0D93F80137F3D07FC01FFE003FFC03D0F3E07C1F80F83F03D0E1F0F00FC1E
01F8001E011C90387C3800001C49D97E707F003C01F05C0038157F4A5C26783FC05C1270
4A91C7FC91C7127E00F003FE1301494A5CEA007EA20301140301FE5F495CA20303140700
0160495C180F03075D0003051F13E0494A1480A2030FEC3F810007F001C0495CA2031F91
383E0380120F494AEC0700A2033F150E001FEF1E1C4991C7EA0FF80007C7000EEC03E043
2979A74A>I<D801F0EB3F803A07FC01FFE03A0F3E07C1F83A0E1F0F00FC001E011C137C
001C49137E003C13F012385C38783FC012705C91C7FC00F015FE495CEA007EA2150101FE
5C5BA2150300015D5B15075E0003020F13704914C0A2031F13F00007ED80E05B1681EE01
C0120F49EC0380A2EE0700001FEC0F0E49EB07FC0007C7EA01F02C2979A733>I<EC1FC0
ECFFF8903803F07C90380FC01FEB1F8090393F000F80017E14C0491307484814E0485A12
075B000F15F0485AA2485AA2ED0FE0127F90C7FCA2151F4815C05AA2ED3F80A2ED7F00A2
48147E007C5C007E13015D4A5A003E495A6C495A4A5A260F803EC7FC3807C0FC3801FFF0
38003F80242977A72E>I<903903E001F890390FF807FE903A1E7C1E0F80903A1C3E3C07
C0013C137801389038E003E0EB783F017001C013F0ED80019038F07F0001E015F8147E16
03000113FEA2C75AA20101140717F05CA20103140F17E05CA20107EC1FC0A24A1480163F
010F15005E167E5E131F4B5A6E485A4B5A90393FB80F80DA9C1FC7FCEC0FFCEC03E049C9
FCA2137EA213FEA25BA21201A25BA21203A2387FFFE0B5FCA22D3A80A72E>I<D801F013
FC3A07FC07FF803A0F3E0F03C0260E1F1C13E0001EEB380F001C1370003CEBE01F123814
C0D8783F14C00070903880070092C7FC91C8FC12F05BEA007EA313FE5BA312015BA31203
5BA312075BA3120F5BA3121F5B0007C9FC232979A726>114 D<EC7F80903801FFE09038
07C0F890381F003C013E131C013C131E017C133E49137E15FEA2000114FCA215706D1300
7FEBFFC014FC6C13FF15806D13C06D13E0010F13F01300140F14071403120C123F387F80
011403D8FF0013E0A300FCEB07C000F0EB0F8012700078EB1F006C133C381F01F83807FF
E0C690C7FC1F297AA725>I<EB01C0EB03F01307A25CA2130FA25CA2131FA25CA2133FA2
91C7FCA2007FB51280B6FC1500D8007EC7FC13FEA25BA21201A25BA21203A25BA21207A2
5BA2120FA25BA2121F141C1380A2003F133C1438EB0078147014F05C495AEA1F03495A6C
48C7FCEA07FCEA01F0193A78B81E>I<137C48B4141C26038F80137EEA0707000E7F001E
15FE121CD83C0F5C12381501EA781F007001805BA2D8F03F1303140000005D5B017E1307
A201FE5C5B150F1201495CA2151F0003EDC1C0491481A2153F1683EE0380A2ED7F070001
02FF13005C01F8EBDF0F00009038079F0E90397C0F0F1C90391FFC07F8903907F001F02A
2979A731>I<017CEB01C048B4EB07F038038F80EA0707000E01C013F8121E001C1403EA
3C0F0038EC01F0A2D8781F130000705BA2EAF03F91C712E012005B017E130116C013FE5B
1503000115805BA2ED07001203495B150EA25DA25D1578000114706D5B0000495A6D485A
D97E0FC7FCEB1FFEEB03F0252979A72A>I<017C167048B491387001FC3A038F8001F8EA
0707000E01C015FE001E1403001CEDF000EA3C0F0038177C1507D8781F4A133C00701380
A2D8F03F130F020049133812005B017E011F14784C137013FE5B033F14F0000192C712E0
5BA2170100034A14C049137E17031880A2EF070015FE170E00010101141E01F86D131C00
00D9039F5BD9FC076D5A903A3E0F07C1E0903A1FFC03FFC0902703F0007FC7FC372979A7
3C>I<903903F001F890390FFC07FE90393C1E0E0F9026780F1C138001F0EBB83FD801E0
13F89039C007F07FEA0380000714E0D9000F140048151C000E4AC7FCA2001E131FA2C75B
A2143F92C8FCA35C147EA314FE4A131CA30101143C001E1538003F491378D87F81147001
8314F000FF5D9039077801C039FE0F7C033A7C0E3C078027783C1E1EC7FC391FF80FFC39
07E003F029297CA72A>I<137C48B4143826038F8013FCEA0707000E7F001E1401001C15
F8EA3C0F12381503D8781F14F000701380A2D8F03F1307020013E012005B017E130F16C0
13FE5B151F1201491480A2153F000315005BA25D157EA315FE5D00011301EBF803000013
0790387C1FF8EB3FF9EB07E1EB00035DA21407000E5CEA3F80007F495AA24A5AD8FF0090
C7FC143E007C137E00705B387801F0383803E0381E0FC06CB4C8FCEA03F8263B79A72C>
I<D901F01370D907FC13F0010F14E090381FFE0190393FFF03C049EB838090387C0FCF90
39F803FF009038F0007E49133C000114386C48137890C75A4A5A4A5A4A5A4AC7FC141E5C
5C5C495A495A495A49C8FC131E4913075B5B48485B4848131E485A01F05BD80FFE137C39
1F1F81F8383E0FFFD83C075B486C5B00705CD8F00190C7FC38E0007C24297BA725>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fw cmr8 8 37
/Fw 37 120 df<EC0380B3A4B812FCA3C7D80380C7FCB3A42E2F7CA737>43
D<123C127EB4FCA21380A2127F123D1201A312031300A25A1206120E5A5A5A126009157A
8714>I<B512C0A412047F9018>I<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387F
FFFEA2172C7AAB23>49 D<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A00
60EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E
147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001F
B5FC5A4814C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E487FEC1F80
003F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0EB
00FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F8006014C00070
131F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>I<140EA2141E143E
A2147E14FEA2EB01BE1303143E1306130E130C131813381330136013E013C0EA01801203
13001206120E120C5A123812305A12E0B612FCA2C7EA3E00A9147F90381FFFFCA21E2D7E
AC23>I<000CEB0180380FC01F90B512005C5C14F014C0D80C7EC7FC90C8FCA8EB1FC0EB
7FF8380DE07C380F801F01001380000E130F000CEB07C0C713E0A2140315F0A4127812FC
A448EB07E012E0006014C00070130F6C14806CEB1F006C133E380780F83801FFE038007F
801C2D7DAB23>I<EB03F8EB0FFE90383E0780EBF8013901F007C03803E00FEA07C0EA0F
80A2391F00078091C7FC123EA2127EA2127CEB0FC038FC3FF0EBF07C38FDC01EB4487E01
001380EC07C04814E0A214034814F0A4127CA3127EA2003E14E01407121E001F14C06CEB
0F803907801F003803C03E6C6C5A38007FF0EB1FC01C2D7DAB23>I<1230123C003FB512
F8A215F05A15E039700001C000601480140348EB0700140E140CC7121C5C143014705C49
5AA2495AA249C7FCA25B130E131EA2133EA3133C137CA413FCA913781D2E7CAC23>I<B8
12FCA3CBFCADB812FCA32E137C9937>61 D<4A7E4A7EA34A7EA24A7EA3EC1BF81419A2EC
30FCA2EC70FEEC607EA24A7EA349486C7EA2010380EC000FA201066D7EA3496D7EA2011F
B57EA29038180001496D7EA349147EA201E0147F4980A20001ED1F801203000716C0D80F
F0EC3FE0D8FFFC0103B5FCA2302F7EAE35>65 D<B612FCEDFF803A03F8000FC00001EC03
F06F7E6F7E82167E167FA6167E16FE5E4B5A4B5AED0FE0ED7F8090B6C7FC16E09039F800
03F0ED01FC6F7E167F821780161F17C0A61780163F17005E16FEED03FC0003EC0FF0B712
C04BC7FC2A2D7DAC32>I<DA1FF013C09138FFFE01903903F00F8390390F8001E3013FC7
1277017C143F4848141F4848140F48481407A248481403121F491401123F90C8FC481500
A300FE1600AB127F17C0A27E7F001F15016D1580120F6C6C1403EE07006C6C14066C6C14
0ED8007C5C013F147890390F8001E0903903F00FC0902600FFFEC7FCEC1FF02A2F7CAD33
>I<B612F815FF3A03F8001FE00001EC03F0ED00F8167E82EE1F80160F17C0EE07E0A2EE
03F0A217F81601A317FCAA17F8A3EE03F0A217E0160717C0160FEE1F80EE3F00167E5EED
03F00003EC1FE0B7128003F8C7FC2E2D7DAC36>I<B712FEA23903F800010001EC003E82
8282A282A3178016011518A293C7FCA31538157815F890B5FCA2EBF800157815381518A2
1760A392C712C0A4160117801603A21607160F163F0003913801FF00B8FCA22B2D7EAC30
>I<B712FCA23903F800030001EC007C163E161E160EA21606A3160716031518A21600A3
1538157815F890B5FCA2EBF800157815381518A592C7FCAB487EB512F8A2282D7EAC2E>
I<DA1FF013C09138FFFE01903903F00F8390390F8001E3013FC71277017C143F4848141F
4848140F48481407A248481403121F491401123F90C8FC481500A300FE1600A992381FFF
FEA2007F9138001FE0EE0FC0A27E7F121F7F120F6C7EA26C7E6C6C141FEA007C013F143F
D90F8013F3903903F007C10100B51200DA1FF813002F2F7CAD37>I<B53C801FFFF001FF
F8A22707FC000190C7EA3FC0D803F06D48EC1F00047E140EA26C6C027F140CA26D171C00
00DBDF801318A26D1738017E9026018FC01330A2017F17706D90260307E01360A2028016
E0011F90260603F05BA202C01501010F90260C01F85BA202E01503010790261800FC90C7
FCA202F05D010349EB7E06A202F8150E010149EB3F0CA202FC151C010049EB1F98A202FE
15B8DA7F80EB0FF0A2023F5D92C71207A26E5D021E1403A2020E5D020C1401452E7FAC48
>87 D<13FF000713C0380F01F0381C00F8003F137C80A2143F001E7FC7FCA4EB07FF137F
3801FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14065AA3143F7E007E137F007FEBEF8C
391F83C7FC390FFF03F83901FC01E01F207D9E23>97 D<EA07C012FFA2120F1207AC14FE
9038C7FF809038CF03E09038DC01F09038F8007C49137E49133E497F1680A2150F16C0A9
ED1F80A216005D6D133E6D5B01B05B9038BC01F090380E07E0390607FF80260001FCC7FC
222F7EAD27>I<EB1FE0EB7FFC3801F01E3803E0073907C01F80EA0F80EA1F005A003EEB
0F00007E90C7FCA2127C12FCA9127EA215C07E6C130101801380380FC0033907E0070038
01F03E38007FF8EB1FC01A207E9E1F>I<15F8141FA214011400ACEB0FE0EB7FF83801F8
1E3803E0073807C003380F8001EA1F00481300123E127EA25AA9127C127EA2003E13017E
EB8003000F13073903E00EFC3A01F03CFFC038007FF090391FC0F800222F7EAD27>I<EB
1F80EBFFF03803E0783807C03E380F801E381F001FEC0F80123E007E130715C0127C12FC
A3B6FCA200FCC8FCA5127EA2003E14C0123F6C1301390F80038001C013003803E00F3801
F03C38007FF8EB1FC01A207E9E1F>I<EB03F0EB0FFCEB3E1EEB7C3F13F8EA01F0A23803
E00C1400AAB512E0A23803E000B3A6487E387FFF80A2182F7FAE16>I<013F13F89038FF
C3FE3903E1FF1E3807807C000F140C391F003E00A2003E7FA76C133EA26C6C5A00071378
380FE1F0380CFFC0D81C3FC7FC90C8FCA3121E121F380FFFF814FF6C14C04814F0391E00
07F848130048147C12F848143CA46C147C007C14F86CEB01F06CEB03E03907E01F803901
FFFE0038003FF01F2D7E9D23>I<EA07C012FFA2120F1207AC14FE9038C3FF809038C703
E09038DE01F013F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2222E7EAD27>I<EA07
80EA0FC0EA1FE0A4EA0FC0EA0780C7FCA8EA07C012FFA2120F1207B3A5EA0FE0EAFFFCA2
0E2E7EAD14>I<EA07C012FFA2120F1207ADEC1FFEA2EC0FF0EC07C05D020EC7FC5C5C5C
5CEBC3C013C7EBCFE0EBDFF013F9EBF0F8497EEBC07E143E80816E7E14076E7E816E7E48
6C487E3AFFFE07FF80A2212E7EAD25>107 D<EA07C012FFA2120F1207B3B3A3EA0FE0EA
FFFEA20F2E7EAD14>I<2607C07FEB07F03BFFC3FFC03FFC903AC783F0783F3C0FCE01F8
E01F803B07DC00F9C00F01F8D9FF8013C04990387F000749137EA249137CB2486C01FEEB
0FE03CFFFE0FFFE0FFFEA2371E7E9D3C>I<3807C0FE39FFC3FF809038C703E0390FDE01
F0EA07F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2221E7E9D27>I<EB1FE0EB7FF8
3801F03E3803C00F3907800780390F0003C04814E0003EEB01F0A248EB00F8A300FC14FC
A9007C14F8A26CEB01F0A26CEB03E0A2390F8007C03907C00F803901F03E0038007FF8EB
1FE01E207E9E23>I<3801FE183807FFB8381E01F8EA3C00481378481338A21418A27E7E
B41300EA7FF06CB4FC6C13C06C13F0000113F838001FFC130138C0007E143EA26C131EA2
7EA26C133CA26C137838FF01F038E3FFC000C0130017207E9E1C>115
D<1360A413E0A312011203A21207121FB512F0A23803E000AF1418A714383801F0301470
3800F860EB3FE0EB0F80152A7FA81B>I<3AFFFC01FFC0A23A0FE0007E000007147C1538
0003143015706C6C1360A26C6C5BA390387C0180A26D48C7FCA2EB3F07EB1F06A2EB0F8C
A214DCEB07D8A2EB03F0A36D5AA26D5A221E7F9C25>118 D<3BFFFC3FFE07FFA23B0FE0
03F001F801C09038E000F00007010114E0812603E00314C0A2913807F8012701F0067813
80A29039F80E7C030000D90C3C1300A290397C181E06A2151F6D486C5AA2168C90391F60
0798A216D890390FC003F0A36D486C5AA36DC75A301E7F9C33>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fx cmr10 10 2
/Fx 2 99 df<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E
7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC16
0C12FEA31401A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE0
3A007F8007C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E
9039F3801F809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E16
7FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F009038
81E07E903800FFF8C7EA1FC0283B7EB92E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fy cmr12 14.4 28
/Fy 28 128 df<B812FEEFFFC018F818FE26007FF8C73807FF806D4802017F011F6F6C7E
727E727E727E727EA2727EA2721380A21AC0A384A360A21A80A2601A00A24E5A180F614E
5A4E5AF0FFE04D1380050790C7FCEF7FFC91B712E08418FE02F0C73801FF809438007FE0
F01FF8727EF003FE857213807213C0F17FE0A2F13FF0A21AF8191FA21AFCA81AF8193FA2
1AF0197FF1FFE0A24E13C04E1380604E1300F03FFC013FEEFFF8496C02075BBA12C096C7
FC18FC18C046527AD153>66 D<B70107B612F8A4C66C48C80003EBF0006D486F5B6D486F
5BB3AD91B9FCA402F8C9FCB3B1496C4B7F496C4B7FB70107B612F8A44D527BD158>72
D<49B612FEA490C7003F138092380FFE001507B3B3B3A21206EA3FC0487E487EA44B5AA2
5B007F5D0180131F0078C75B6C143F003E4A5A6C5D6C6C495A2707E003FEC7FC3901FC07
FC6CB512F0013F13C0D907FCC8FC2F547BD13C>74 D<B74AB512FEA4C66C48C9003F13C0
6D487048C7FC6D4817F0735A1A804FC8FC193E61614E5A4E5A4E5A4E5A4EC9FC183E6060
4D5A4D5A4D5A4D5A4DCAFC173E5F5F4C5A4C5A4C5A160F4C7E4C7E167F4C7E4B7F5D9238
07CFFE92380F8FFFED1F07DB3E037F037C804B7E9126F9E0007FDAFBC080DAFF80137F92
C76C7E4A814A141F4A6E7E8483717F8583717F85187F727EA2727E727EA2727E727FA272
7F727FA2737E86193F8686496C83496C93B512E0B7020FECFF80A451527BD15B>I<B500
FC95B512FCA36E5FD8007FF2F800D93DFF943803BFF0011D62A2011C6DEE073FA36E6C16
0EA36E6C161CA26E6C1638A36E6C1670A36E6C16E0A36E6CED01C0A26E6CED0380A36E6D
EC0700A36F6C140EA36F6C5CA26F6C5CA36F6C5CA36F6C5CA26F6C495AA36F6C495AA36F
6D48C7FCA393387FC00EA2706C5AA3706C5AA3706C5AA3706C5AA270B45AA3705BA3013E
6E90C8FC137F496C4E7E000701F0027E4B7EB66C4BB612FC173CA35E527AD16B>77
D<B500FC030FB512F8A28080D8003FDC007F13006D6DED0FF8735A011D6D6F5A011C6D6F
5AA26E7E81143F6E7E81140F6E7E82806E7F82806F7E82153F6F7EA26F7E6F7EA26F7F83
816F7F83167F707E83161F707E838270138018C0827013E0A2EF7FF0EF3FF8A2EF1FFC18
FE170FEF07FF1981837113C119E183F07FF119F9183FF01FFD19FF8484A28484A284A219
7F193F133E017F171F496C160F000713F0B66C15071903A219014D527BD158>I<B812FC
EFFFC018F818FE26007FFCC7381FFF806D4802017F011F9238007FF0F01FF8727E727E72
7E841A807213C0A21AE0197FA21AF0A91AE0A219FF1AC0A24E13801A00604E5A4E5A4E5A
F07FE04D485A051F90C7FC91B712FC18F0188002F8CBFCB3AE497E497EB7FCA444527BD1
50>80 D<B812C017FEEFFFC018F026007FFCC713FC6D48EC0FFF011F03017F9438007FE0
727E727E727E180785727EA28684A286A762A26097C7FCA24E5A614E5A4E5A4E5AF0FFC0
4D90C8FCEF0FFEEFFFF891B712C04DC9FC839126F8000113C09338003FF0EF0FFC717EEF
01FF85717F727EA2727EA2727EA985A81B0785180FA21B0F0607140E496C82496C6F141E
B76EEB801C72EBC03C96387FE0F896381FFFF0CC000713E09638007F8050547BD156>82
D<B600FE0303B512F8A4C60280DB007F1300013F90CAEA1FF86DF00FE06D616D616D6D94
C7FC6F161E6D181C6F163C6D18386E6C16786F5E023F5F6F1501021F5F6E6C15036F4B5A
6E94C8FC6E6D5C70140E6E161E705C6E16386F6C1478701470033F15F070495A6F6C5C03
0F1403705C6F14076F6D48C9FCEFC00E6F141EEFE01C6F143C706C5AEFF870043F13F071
5AEE1FFF705B60827090CAFCB3AA5E4C13C0031FB612E0A455527FD158>89
D<ECFFC0010F13F8013F13FE9039FF00FF80D801F0EB3FE0D803C0EB0FF0486C6D7E01F8
6D7E000F816D13016F7EA3707E6C5AEA01E0C9FCA6ED3FFF020FB5FC9138FFFC7F010713
00EB1FF0EB7FC04848C7FCEA03FC485A485A485A123F5B485A187012FF90C8FCA216FFA3
5D6D14BF007F14036DEB073F6C6C90390F1FC0E06C6C131E6C6C90393C0FE1C02707FE01
F013FF0001B5486C13806C6C90398003FE00D907FCC712F834367BB43B>97
D<EC0FFE91387FFFE049B512F8903907F801FE90391FE0001FD93F80EB078049C7EA0FC0
01FE143F484815E00003157F485A485AA2485AEE3FC0003FED0F004991C7FCA2127FA35B
12FFAB127F7FA3123F6D1570121F6D15F0000F16E06D140112076C6CEC03C06D15806C6C
14076C6DEB0F00D93FC0131E6D6C137C903907FC03F06DB55AD9007F1380DA0FF8C7FC2C
367CB434>99 D<17FF4BB5FCA4ED0007160182B3A6EC0FF8EC7FFF49B512E0903907FC03
F090391FE0007C49487F49C7120F01FE80484880485A000781484880A2485AA2485AA212
7FA35B12FFAB127FA27FA2123FA27F121FA26C6C5C00075D7F6C6C5C6C6C5C6C6C021E7F
6D6C017C13E0D91FC049EBFF8090390FF807E00103B512800100495ADA1FF091C7FC3954
7CD241>I<EC0FF891B5FC010314C090390FF80FF090391FC003FC90397F8001FE49C77E
4848EC7F804848143F49EC1FC0485A000FED0FE05B001F16F01607485AA2007F16F8A25B
160312FF90B7FCA30180C9FCA8127F7FA2123FA26D1538121F17786C6C1570000716F06D
15E06C6C14016C6CEC03C06C6C15806D6C130F6D6CEB1F00D90FF0133C903907FE01F801
01B512E06D6C1380DA07FCC7FC2D367DB434>I<EF1FC0DA3FE0EBFFE0902701FFFC0313
F001079039FF07E1F8903A1FE03FCF01903A3F800FFC03903A7F0007F80101FE010314F0
4848903901FC004000036F1300491300000781A24980000F82A8000793C7FC6D5CA20003
5D6D130100015D6C6C495A017F495A6E485A9039FFE03FC0D801C7B5C8FC01C113FC3903
803FE091CAFCA57FA27F7F7F6CB612E016FF6C16C017F0013F15FC8390B8FCD803F8C700
1F1380D80FE0020113C04848EC007F4848ED1FE090C9120F127EEF07F012FE481603A56C
1607007E17E0007F160F6C6CED1FC06C6CED3F806C6CED7F006C6C15FED803FCEC03FCC6
B4EC0FF0D93FF0EBFFC0010FB6C7FC010114F8D9001F1380354E7DB43B>103
D<EB7F80B5FCA41203C6FC137FB3A6ED07FC92383FFF8092B512E0913981F00FF8913983
C007FC9139870003FE028E1301029C6D7E14B814B002F06E7E5CA25CA35CB3AD2601FFE0
903801FFE0B600C0B612C0A43A537CD241>I<1378EA01FE487E487FA66C90C7FC6C5AEA
007890C8FCB0EB7F80B5FCA41203C6FC137FB3B3A43801FFE0B61280A419507CCF21>I<
EC0780EC1FE0EC3FF0EC7FF8A6EC3FF0EC1FE0EC078091C7FCB0EC0FF8EB1FFFA4EB003F
140FA21407B3B3B2120C003F14F0387F800FEAFFC015E0141F15C0EC3F80EA7F80903800
7F006C13FC6CB45A000713E0C690C7FC1D6885CF24>I<EBFF80B5FCA41203C6FC137FB3
A793B512F8A4043F138093381FFC0017F017C094C7FC163E5E5E4B5A4B5AED07804BC8FC
151E5D15FC1481EC83FEEC87FF148F029E7F9138BC7FC0ECF83F02F07F4A6C7EECC00F02
807F4A6C7E6F7EA26F7E6F7F167F83707E161F83707E160783707E8318802601FFC04913
E0B6D8803F13FFA438537DD23E>I<EB7F80B5FCA41203C6FC137FB3B3B3B13801FFE0B6
12C0A41A537CD221>I<01FFEB07FCB590383FFF8092B512E0913901F00FF8913903C007
FC000349C66C7EC6010E13016D486D7E5C143002706E7E146014E05CA35CB3AD2601FFE0
903801FFE0B600C0B612C0A43A347CB341>110 D<EC0FFC91387FFF8049B512E0903907
F807F890391FE001FE90393F80007F017EC7EA1F80496E7E48486E7E00038248486E7EA2
48486E7EA248486E7EA2003F82A24848ED7F80A400FF17C0AB007F1780A26D15FFA2003F
1700A2001F5E6D1401000F5E6D140300075E6C6C4A5A6C6C4A5AA2D8007FEC3F806D6C49
C7FC90391FE001FE903907F807F86DB55AD9007F1380DA0FFCC8FC32367CB43B>I<01FF
EB1F80B5EB7FF0913801FFF8913803E1FC91380783FE0003EB0F07C6131EEB7F1C143814
3091387003FC91386000F0160014E05CA45CB3AA8048487EB612F0A427347DB32E>114
D<D907FE13C090387FFF8148B512E33907F803FF390FC0007F4848133F48C7121F003E14
0F007E1407127C00FC1403A315017EA27E7F6C6C90C7FC13F013FF6C13F86CEBFF806C14
E06C14F86C14FEC680013F1480010714C0D9003F13E014039138007FF0151F00E0140FED
07F8A26C1403A215017EA36C15F0A26C14036C15E015076DEB0FC06DEB1F80D8FDF0EB3F
0039F8FC01FE39F07FFFF8D8E01F13E0D8C00390C7FC25367CB42E>I<EB01C0A71303A4
1307A3130FA2131FA2133F137F13FF5A5A001F90B512E0B7FCA326003FC0C7FCB3A71638
AC6E1378011F1470A26D6C13F016E0903807F801903903FC03C0903901FE07806DB51200
EC3FFCEC07F0254B7EC92E>I<B60103B51280A4000301F09039007FF800C601C0EC3FE0
017FED1F8095C7FC133F171E6D7E171C6E143C010F1538A26E1478010715708001035DA2
6E130101015D806D4A5AA2ED8007027F91C8FC15C0023F130EA2EDE01E021F131CA26E6C
5AA2EDF87802071370A26E6C5AA215FF6E5BA26E5BA36FC9FCA2153EA3151C39347EB23E
>118 D<B60007B5D8F007B5FCA400039027E0001FFEC713F06C0180D90FF8EC7FC06C03
07ED3F80F21F00017F0203151EA26D6C801A1CA26D6C496C5CA26E6E1478010FDA0E7F14
70A26E6F13F00107DA1C3F5CA26EEDC0010103DA381F5CA26E0178EBE0030101DA700F5C
A26E01F0EBF0076DDAE00791C7FCA2DA7F81ECF80EEEC003A2DA3FC36E5AEE8001A2DA1F
E76E5A93C7FCA2DA0FFEEC7F70A219F06E486E5AA36E486E5AA36E486E5AA36E486EC8FC
50347EB255>I<B60103B51280A4000301F09039007FF800C601C0EC3FE0017FED1F8095
C7FC133F6E141E131F171C6E143C010F15388001075DA26E14F001035D8001014A5AA26E
13036D5D1580027F49C8FCA26F5A023F130E15E0021F5BA2EDF03C020F133815F802075B
A2EDFCF002035B15FE6E6C5AA36E5BA26FC9FCA3153EA2151CA2153C153815781570A215
F05D14015DA2003E495A127F486C48CAFCA2140E141E495A6C5B007C5B383F03E06CB45A
00075BD801FCCBFC394B7EB23E>121 D<000F143CD83FC013FF007F1580486C4813C0A5
6C486C1380003F1500000FC7123C220B74CF3B>127 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fz cmsy10 17.28 1
/Fz 1 3 df<00381970007C19F800FC18016C1803007F18076DEF0FF06C6CEF1FE06C6C
EF3FC06C6CEF7F806C6CEFFF006C6C4C5A6C6C4C5A6C6C4C5A6D6C4B5A6D6C4B5A6D6C4B
5A6D6C4B5A6D6C4BC7FC6D6C4A5A6D6C4A5A6D6C4A5A6E6C495A6E6C495A6E6C495A6E6C
495A6E6C49C8FC6E6C485A6E6C485A6E6C485A92387F8FF092383FDFE06FB45A6F5B6F90
C9FC6F5AA24B7E4B7F4B7F92383FDFE092387F8FF09238FF07F84A486C7E4A486C7E4A48
6C7E4A486D7E4A486D7E4A486D7E4A486D7E4AC76C7E49486E7E49486E7E49486E7E4948
6F7E49486F7E49486F7E49486F7E49C96C7E4848707E4848707E4848707E4848EF7F8048
48EF3FC04848EF1FE04848EF0FF090CBEA07F800FE1803481801007C1800003819704546
6BC670>2 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: FA cmbx12 17.28 24
/FA 24 121 df<94387FFF80041FB512F04BB612FC030F81037F6F7E4AB5D8E0077F4A49
C76C7E020F01F0EC1FF04A01C0147F4A90C8487E4A485C4A484A7F49495C495BA2495B4E
7F49705B5DA3725B725B725B735A96C9FCAB0503B512FEBBFCA6D8000F01E0C7120184B3
B3AF003FB6D8F803B71280A651657DE45A>12 D<EA01FCEA07FF4813804813C04813E048
13F014F8B5FCA214FCA314FEA27EA27E7E6C13BE6C133EEA01FCC7FCA2147E147CA314FC
14F8A2130114F01303A2EB07E0A2EB0FC0A2EB1F80EB3F005B13FE485A485A485A485A5B
6C5A6CC7FC173174942D>44 D<B812C0AD2A0D7EA636>I<EA07E0120F7F13FCEBFFFC91
B912F8A45AA21AF01AE01AC01A801A00A248606161616101E0C9123F01804C5A48CA485A
4D90C7FC60007E4C5A17074D5A4D5A4D5A485F4D5A17FF4C90C8FCC9485A5F4C5A160F4C
5A5F163F4C5A16FF5F5D94C9FC5D5D5E150FA24B5AA2153FA24B5AA215FFA34A5BA25CA3
5CA44A5BA45CA65CAD6E5BA26E5BDA03FECAFC6E5A456377E051>55
D<B96C90B91280A6D8000102C0C9000102C0C7FCB3B3A293BBFCA604C0C91201B3B3A6B9
6C90B91280A671627AE17E>72 D<DBFFFCEC01E0020FD9FFE01303027F02FC130749B713
0F0107EEC01F011F16F049D9C007EBF83F4948C7383FFE7FD9FFF8020FB5FC4801E01401
4849804849153F91C97E484882001F834982003F83845B007F187FA2193FA200FF181FA2
7F190FA27FA26D17078080806C01F893C7FC80ECFF8015F86CECFFC016FC6CEDFFE017FE
6CEEFFE018F86C17FE6C717E6C846C846D17F86D836D836D8313036D18806D6C17C0020F
17E01401DA000F16F01500040715F8EE007F1703050014FC183F84060713FE84A2007C83
00FC83A2197FA3193F7EA31AFC7EA27F1AF86D177F7F1AF06D17FF6D18E06D5E01FF18C0
6E4B138002E04B130002F84B5A02FFED3FFC01CF01E0ECFFF8018301FF010F5B010191B6
5A6D6C5E48011F93C7FC48010315FC48D9003F14E048020149C8FC476677E35A>83
D<913803FFFE027FEBFFF00103B612FE010F6F7E4916E090273FFE001F7FD97FE001077F
D9FFF801017F486D6D7F717E486D6E7F85717FA2717FA36C496E7FA26C5B6D5AEB1FC090
C9FCA74BB6FC157F0207B7FC147F49B61207010F14C0013FEBFE004913F048B512C04891
C7FC485B4813F85A5C485B5A5CA2B55AA45FA25F806C5E806C047D7F6EEB01F96C6DD903
F1EBFF806C01FED90FE114FF6C9027FFC07FC01580000191B5487E6C6C4B7E011F02FC13
0F010302F001011400D9001F90CBFC49437CC14E>97 D<92380FFFF04AB67E020F15F002
3F15FC91B77E01039039FE001FFF4901F8010113804901E0010713C04901804913E0017F
90C7FC49484A13F0A2485B485B5A5C5A7113E0485B7113C048701380943800FE0095C7FC
485BA4B5FCAE7EA280A27EA2806C18FCA26C6D150119F87E6C6D15036EED07F06C18E06C
6D150F6D6DEC1FC06D01E0EC7F806D6DECFF00010701FCEB03FE6D9039FFC03FFC010091
B512F0023F5D020F1580020102FCC7FCDA000F13C03E437BC148>99
D<F17FF8050FB5FCA6EF000F8484B3A892380FFF804AB512F8020F14FE023FECFF8391B7
12E301039138807FF3499039F8000FFB011F01E00103B5FC494913004990C87E49488148
498148834A815A485BA2485BA25AA3485BA4B5FCAE7EA46C7FA37EA26C7FA26C5F806C5F
6C6D5D6C6D5D017F93B5FC6D6C6C0103806D6D49806D01F0D91FF7EBFFFE6D9039FE01FF
E7010190B612876D6CECFE07021F14F8020314E09127003FFE00ECC0004F657BE35A>I<
92380FFFC04AB512FC020FECFF80023F15E091B712F80103D9FE037F499039F0007FFF01
1F01C0011F7F49496D7F4990C76C7F49486E7F48498048844A804884485B727E5A5C4871
7EA35A5C721380A2B5FCA391B9FCA41A0002C0CBFCA67EA380A27EA27E6E160FF11F806C
183F6C7FF17F006C7F6C6D16FE6C17016D6C4B5A6D6D4A5A6D01E04A5A6D6DEC3FE00103
01FC49B45A6D9026FFC01F90C7FC6D6C90B55A021F15F8020715E0020092C8FC030713F0
41437CC14A>I<F107F8DB7FFEEC3FFE020FB5D8F001B5FC027FDAFE03148049B7128F49
DCDFFD13C0010FD9F00FEBFFC149D9800114014990C7EBFC0349486E6C7E4948EC3FFF48
496E018113800780130048F0C03E97C7FC48496E7FA34884A96C60A36C6D4A5BA26C60A2
6C6D4A90C8FC6D6C4A5A6D6C4A5A6D6D485BDBF00F5B4990B612C060D97C7F4AC9FCD9FC
0F14F09126007FFECAFC92CCFC1201A47FA27F8014F091B77E18FE6CEFFFC019F06D17FC
19FF6D846D846D846D84013F8490BAFC0003854801E0C712014890C9000F7F4848160148
48EE007F4848717E8512FF5B85A56D5F007F616D173F003F616D177F6C6C4D5A6C01C003
035B6C6D4B5B6C01F8031F5BC601FF92B5C7FC6D01F8011F5B011F90B712F8010717E001
0094C8FC020F15F0DA003F01FCC9FC4A607CC151>103 D<903807FF80B6FCA6C6FC7F7F
B3A8EF1FFF94B512F0040714FC041F14FF4C8193267FE07F7F922781FE001F7FDB83F86D
7FDB87F07FDB8FC0814C7F039FC78015BE03BC8003FC825DA25DA25DA45DB3B2B7D8F007
B71280A651647BE35A>I<EB0FE0EB3FF8497E48B5FCA24880A24880A76C5CA26C91C7FC
A238007FFC6D5AEB0FE090C9FCAF903807FF80007FB5FCA6C6FC7F7FB3B3AEB712C0A622
657BE42C>I<903807FF80B6FCA6C6FC7F7FB3B3B3B3ADB712E0A623647BE32C>108
D<902607FF80D91FFFEEFFF8B691B500F00207EBFF80040702FC023F14E0041F02FF91B6
12F84C6F488193267FE07F6D4801037F922781FE001F9027E00FF0007FC6DA83F86D9026
F01FC06D7F6DD987F06D4A487F6DD98FC0DBF87EC7804C6D027C80039FC76E488203BEEE
FDF003BC6E4A8003FC04FF834B5FA24B5FA24B94C8FCA44B5EB3B2B7D8F007B7D8803FB6
12FCA67E417BC087>I<902607FF80EB1FFFB691B512F0040714FC041F14FF4C8193267F
E07F7F922781FE001F7FC6DA83F86D7F6DD987F07F6DD98FC0814C7F039FC78015BE03BC
8003FC825DA25DA25DA45DB3B2B7D8F007B71280A651417BC05A>I<923807FFE092B6FC
020715E0021F15F8027F15FE494848C66C6C7E010701F0010F13E04901C001037F49496D
7F4990C87F49486F7E49486F7E48496F13804819C04A814819E048496F13F0A24819F8A3
48496F13FCA34819FEA4B518FFAD6C19FEA46C6D4B13FCA36C19F8A26C6D4B13F0A26C19
E06C6D4B13C0A26C6D4B13806C6D4B13006D6C4B5A6D6D495B6D6D495B010701F0010F13
E06D01FE017F5B010090B7C7FC023F15FC020715E0020092C8FC030713E048437CC151>
I<D90FFFEB0FFCB690383FFF8093B512E04B14F04B14F8923907FC7FFC92390FE0FFFEC6
EC1F806DD93F0113FF6D133E157E157C15F8A215F07013FEA24BEB7FFCEF3FF8EF0FE04B
90C7FCA55DB3B0B712F8A638417BC042>114 D<913A3FFF8007800107B5EAF81F011FEC
FE7F017F91B5FC48B8FC48EBE0014890C7121FD80FFC1407D81FF0801600485A007F167F
49153FA212FF171FA27F7F7F6D92C7FC13FF14E014FF6C14F8EDFFC06C15FC16FF6C16C0
6C16F06C826C826C826C82013F1680010F16C01303D9007F15E0020315F0EC001F150004
1F13F81607007C150100FC81177F6C163FA2171F7EA26D16F0A27F173F6D16E06D157F6D
16C001FEEDFF806D0203130002C0EB0FFE02FCEB7FFC01DFB65A010F5DD8FE0315C026F8
007F49C7FC48010F13E035437BC140>I<EC07E0A6140FA5141FA3143FA2147FA214FF5B
A25B5B5B5B137F48B5FC000F91B512FEB8FCA5D8001F01E0C8FCB3AFEF0FC0AC171F6D6D
1480A2173F6D16006F5B6D6D137E6D6D5B6DEBFF836EEBFFF86E5C020F14C002035C9126
003FFCC7FC325C7DDA3F>I<902607FFC0ED3FFEB60207B5FCA6C6EE00076D826D82B3B3
A260A360A2607F60183E6D6D147E4E7F6D6D4948806D6DD907F0ECFF806D01FFEB3FE06D
91B55A6E1500021F5C020314F8DA003F018002F0C7FC51427BC05A>I<B700C00103B512
FCA6C66C01C0C8381FFE006D6DED07F0A26D6D5E190F6D6D5E191F6D606F153F6D95C7FC
6F5DA26D6D157E19FE6D6E5C18016E5E7013036E5E701307A26E6D5C180F6E6D5C181F6E
6D5C183F6E93C8FC705BA26E6D13FEA26E6E5A17816FEBC1F817C36F5C17E76F5C17FFA2
6F5CA26F5CA26F91C9FCA26F5BA36F5BA2705AA2705AA2705AA2705A4E417DBF55>I<B7
0081B600FC0103B512FCA6C66C0180C701FCC8381FFE006F6FED03F86D047F5F856F6E16
076D646F70140F6D705F866F6E161F6D646F4A6D143F6D99C7FC4E7F6F616D1B7E6F4A6D
14FE6D6395B57E7001FC15016E62DCC0016E13036EDBF87F5D05038004E0496C14076E62
DCF007ED800F6E4B6C5D050F15C004F8496C141F6E62DCFC1FEDE03F6E4B6C92C8FC053F
15F004FE496C5C6E197E7048EDF8FE6E027E6D5C05FE15FC4D6D13FD6F601BFF6F496E5B
A24D806F60A26F496E5BA24D806F60A26F496E90C9FCA294C87E6F5FA26F486F5A047C6F
5A6E417DBF75>I<007FB600C0017FB512F8A6D8001F01F8C70007EBF0006D040190C7FC
6D6D5D6D6D4A5A6D6D4A5A70495A6D4C5A6E7F6E6D495A6E6D495A7049C8FC6E4A5A6E6D
485A6E6D485A6E13FFEF8FF06EEC9FE06FEBFFC06F5C6F91C9FC5F6F5B816F7F6F7F8481
707F8493B57E4B805D4B80DB0FF37FDB1FE17F04C080153F4B486C7F4B486C7F4A486D7F
4A486D7F4A5A4B6D7F020F6E7F4A486D7F4A486D804A5A4AC86C7F49486F7F4A6F7F0107
707FEB3FFFB600F049B7FCA650407EBF55>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 33 555 a FA(Solving)55 b(7)p Fz(\002)p FA(7)d(Hex)i(with)g
(domination,)f(\014ll-in,)j(and)956 738 y(virtual)g(connections)243
1196 y Fy(Ry)m(an)38 b(Ha)m(yw)m(ard)1028 1153 y Fx(a)1110
1196 y Fy(Yngvi)f(Bj\177)-59 b(ornsson)1979 1153 y Fx(b)2067
1196 y Fy(Mic)m(hael)37 b(Johanson)3000 1153 y Fx(a)431
1346 y Fy(Morgan)h(Kan)1099 1302 y Fx(a)1183 1346 y Fy(Nathan)f(P)m(o)
1758 1302 y Fx(a)1841 1346 y Fy(Jac)m(k)h(v)-7 b(an)39
b(Rijswijc)m(k)2813 1302 y Fx(a)79 1516 y Fw(a)118 1549
y Fv(Dep)-5 b(artment)34 b(of)f(Computing)h(Scienc)-5
b(e,)32 b(University)h(of)f(A)n(lb)-5 b(erta,)33 b(Edmonton,)i(A)n(lb)
-5 b(erta,)346 1662 y(Canada,)35 b Fu(f)p Fv(haywar)-5
b(d,johanson,mkan,nath)q(an)q(,javhar)q Fu(g)p Fv(@cs.ualb)g(er)q(ta.c)
g(a)191 1775 y Fw(b)235 1808 y Fv(Scho)g(ol)34 b(of)f(Computer)h
(Scienc)-5 b(e,)32 b(R)-5 b(eykjavik)33 b(University,)f(Ic)-5
b(eland,)34 b(yngvi@ru.is)p 0 2098 3900 4 v 0 2228 a
Ft(Abstract)0 2434 y Fs(W)-8 b(e)36 b(presen)m(t)f(an)g(algorithm)f
(that)i(determines)e(the)h(outcome)h(of)f(an)g(arbitrary)f(Hex)h(game-)
0 2547 y(state)28 b(b)m(y)f(\014nding)e(a)i(winning)e(virtual)g
(connection)i(for)g(the)g(winning)d(pla)m(y)m(er.)k(Our)e(algorithm)0
2660 y(recursiv)m(ely)e(searc)m(hes)j(the)e(game-tree,)j(com)m(bining)c
(\014xed)h(and)g(dynamic)f(game-state)k(virtual)0 2773
y(connection)40 b(comp)s(osition)e(rules)g(to)i(\014nd)e(a)i(winning)c
(virtual)i(connection)i(for)f(one)h(of)f(the)0 2886 y(t)m(w)m(o)j(pla)m
(y)m(ers.)g(The)e(searc)m(h)i(is)e(enhanced)h(b)m(y)g(pruning)d(the)j
(game-tree)i(according)e(to)h(t)m(w)m(o)0 2999 y(new)g(Hex)h
(game-state)i(reduction)c(results:)g(under)g(certain)h(conditions,)f
(\(i\))i(some)f(mo)m(v)m(es)0 3112 y(dominate)32 b(others,)g(and)g
(\(ii\))f(some)i(b)s(oard-cells)e(can)h(b)s(e)g(\\\014lled-in")e
(without)h(c)m(hanging)h(the)0 3224 y(game's)f(outcome.)91
3371 y(The)g(algorithm)f(is)h(p)s(o)m(w)m(erful)f(enough)h(to)h(solv)m
(e)g(arbitrary)e(7)p Fu(\002)p Fs(7)i(game-states.)i(In)d(partic-)0
3483 y(ular,)j(w)m(e)h(use)f(it)g(to)h(determine)f(the)h(outcome)h(of)f
(a)g(7)p Fu(\002)p Fs(7)g(Hex)g(game)g(after)g(eac)m(h)h(of)f(the)g(49)
0 3596 y(p)s(ossible)30 b(op)s(ening)h(mo)m(v)m(es,)k(in)c(eac)m(h)j
(case)f(\014nding)e(an)h(explicit)f(pro)s(of-tree)i(for)g(the)g
(winning)0 3709 y(pla)m(y)m(er.)0 3978 y Fv(Key)f(wor)-5
b(ds:)68 b Fs(Hex,)31 b(virtual)d(connection,)j(pattern)g(set,)g(mo)m
(v)m(e)h(ordering,)0 4091 y(mo)m(v)m(e)g(domination,)d(game-state)k
(reduction,)d(\014ll-in)p 0 4195 V 0 -31 a Fr(app)s(eared)j(as)g
Fq(The)-5 b(or)g(etic)g(al)34 b(Computer)g(Scienc)-5
b(e)32 b Fp(349)g Fr(\(2005\))g(123-139.)0 4834 y Fp(1)112
b(In)m(tro)s(duction)0 5124 y Fr(Hex)36 b(is)e(the)i(classic)e(t)m(w)m
(o-pla)m(y)m(er)i(b)s(oard)e(game)g(in)m(v)m(en)m(ted)j(b)m(y)f(Piet)e
(Hein)h(in)f(1942)g(and)h(indep)s(enden)m(tly)0 5245
y(b)m(y)i(John)g(Nash)g(around)g(1948)e([11,12,20].)h(The)h(b)s(oard)g
(consists)g(of)f(a)g(rhom)m(bus-shap)s(ed)h Fo(n)p Fn(\002)p
Fo(n)h Fr(arra)m(y)0 5365 y(of)29 b(hexagons,)h(also)e(called)g(cells.)
h(Eac)m(h)h(pla)m(y)m(er)f(is)g(assigned)g(a)g(set)h(of)f(stones)h(and)
f(t)m(w)m(o)h(opp)s(osing)e(b)s(oard)p 0 5482 299 4 v
0 5546 a Fm(?)91 5579 y Fs(This)22 b(is)g(a)i(revised)f(and)g(expanded)
g(v)m(ersion)g(of)h([17].)h(The)e(supp)s(ort)f(of)h(NSER)m(C)h(is)e
(gratefully)h(ac)m(kno)m(wledged.)30 5912 y Fl(Preprin)m(t)29
b(submitted)g(to)i(Elsevier)e(Science)1790 b(25)31 b(April)d(2006)p
eop
%%Page: 2 2
2 1 bop 859 823 a @beginspecial -6 @llx -35 @lly 253
@urx 35 @ury 2590 @rwi @setspecial
%%BeginDocument: ppr.ps1
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: (atend)
%%Title: TeXdraw drawing: ppr.ps1
%%Pages: 1
%%Creator: 1995/12/19 TeXdraw V2R0
%%CreationDate: 2006/4/25
50 dict begin
/mv {stroke moveto} def
/lv {lineto} def
/st {currentpoint stroke moveto} def
/sl {st setlinewidth} def
/sd {st 0 setdash} def
/sg {st setgray} def
/bs {gsave} def /es {stroke grestore} def
/fl {gsave setgray fill grestore
 currentpoint newpath moveto} def
/fp {gsave setgray fill grestore st} def
/cv {curveto} def
/cr {gsave currentpoint newpath 3 -1 roll 0 360 arc
 stroke grestore} def
/fc {gsave setgray currentpoint newpath
 3 -1 roll 0 360 arc fill grestore} def
/ar {gsave currentpoint newpath 5 2 roll arc stroke grestore} def
/el {gsave /svm matrix currentmatrix def
 currentpoint translate scale newpath 0 0 1 0 360 arc
 svm setmatrix stroke grestore} def
/fe {gsave setgray currentpoint translate scale newpath
 0 0 1 0 360 arc fill grestore} def
/av {/hhwid exch 2 div def /hlen exch def
 /ah exch def /tipy exch def /tipx exch def
 currentpoint /taily exch def /tailx exch def
 /dx tipx tailx sub def /dy tipy taily sub def
 /alen dx dx mul dy dy mul add sqrt def
 /blen alen hlen sub def
 gsave tailx taily translate dy dx atan rotate
 (V) ah ne {blen 0 gt {blen 0 lineto} if} {alen 0 lineto} ifelse
 stroke blen hhwid neg moveto alen 0 lineto blen hhwid lineto
 (T) ah eq {closepath} if
 (W) ah eq {gsave 1 setgray fill grestore closepath} if
 (F) ah eq {fill} {stroke} ifelse
 grestore tipx tipy moveto} def
0.24 0.24 scale
1 setlinecap 1 setlinejoin
3 setlinewidth [] 0 setdash
0 0 moveto
0 sl
bs
-24 0 mv
-12 21 lv
12 21 lv
24 0 lv
12 -21 lv
-12 -21 lv
-24 0 lv
0.8 fp
12 21 mv
24 42 lv
48 42 lv
60 21 lv
48 0 lv
24 0 lv
12 21 lv
0.8 fp
48 42 mv
60 63 lv
84 63 lv
96 42 lv
84 21 lv
60 21 lv
48 42 lv
0.8 fp
84 63 mv
96 84 lv
120 84 lv
132 63 lv
120 42 lv
96 42 lv
84 63 lv
0.8 fp
120 84 mv
132 105 lv
156 105 lv
168 84 lv
156 63 lv
132 63 lv
120 84 lv
0.8 fp
156 105 mv
168 126 lv
192 126 lv
204 105 lv
192 84 lv
168 84 lv
156 105 lv
0.8 fp
192 126 mv
204 147 lv
228 147 lv
240 126 lv
228 105 lv
204 105 lv
192 126 lv
0.8 fp
12 -21 mv
24 0 lv
48 0 lv
60 -21 lv
48 -42 lv
24 -42 lv
12 -21 lv
0.8 fp
48 0 mv
60 21 lv
84 21 lv
96 0 lv
84 -21 lv
60 -21 lv
48 0 lv
0.8 fp
84 21 mv
96 42 lv
120 42 lv
132 21 lv
120 0 lv
96 0 lv
84 21 lv
0.8 fp
120 42 mv
132 63 lv
156 63 lv
168 42 lv
156 21 lv
132 21 lv
120 42 lv
0.8 fp
156 63 mv
168 84 lv
192 84 lv
204 63 lv
192 42 lv
168 42 lv
156 63 lv
0.8 fp
192 84 mv
204 105 lv
228 105 lv
240 84 lv
228 63 lv
204 63 lv
192 84 lv
0.8 fp
228 105 mv
240 126 lv
264 126 lv
276 105 lv
264 84 lv
240 84 lv
228 105 lv
0.8 fp
48 -42 mv
60 -21 lv
84 -21 lv
96 -42 lv
84 -63 lv
60 -63 lv
48 -42 lv
0.8 fp
84 -21 mv
96 0 lv
120 0 lv
132 -21 lv
120 -42 lv
96 -42 lv
84 -21 lv
0.8 fp
120 0 mv
132 21 lv
156 21 lv
168 0 lv
156 -21 lv
132 -21 lv
120 0 lv
0.8 fp
156 21 mv
168 42 lv
192 42 lv
204 21 lv
192 0 lv
168 0 lv
156 21 lv
0.8 fp
192 42 mv
204 63 lv
228 63 lv
240 42 lv
228 21 lv
204 21 lv
192 42 lv
0.8 fp
228 63 mv
240 84 lv
264 84 lv
276 63 lv
264 42 lv
240 42 lv
228 63 lv
0.8 fp
264 84 mv
276 105 lv
300 105 lv
312 84 lv
300 63 lv
276 63 lv
264 84 lv
0.8 fp
84 -63 mv
96 -42 lv
120 -42 lv
132 -63 lv
120 -84 lv
96 -84 lv
84 -63 lv
0.8 fp
120 -42 mv
132 -21 lv
156 -21 lv
168 -42 lv
156 -63 lv
132 -63 lv
120 -42 lv
0.8 fp
156 -21 mv
168 0 lv
192 0 lv
204 -21 lv
192 -42 lv
168 -42 lv
156 -21 lv
0.8 fp
192 0 mv
204 21 lv
228 21 lv
240 0 lv
228 -21 lv
204 -21 lv
192 0 lv
0.8 fp
228 21 mv
240 42 lv
264 42 lv
276 21 lv
264 0 lv
240 0 lv
228 21 lv
0.8 fp
264 42 mv
276 63 lv
300 63 lv
312 42 lv
300 21 lv
276 21 lv
264 42 lv
0.8 fp
300 63 mv
312 84 lv
336 84 lv
348 63 lv
336 42 lv
312 42 lv
300 63 lv
0.8 fp
120 -84 mv
132 -63 lv
156 -63 lv
168 -84 lv
156 -105 lv
132 -105 lv
120 -84 lv
0.8 fp
156 -63 mv
168 -42 lv
192 -42 lv
204 -63 lv
192 -84 lv
168 -84 lv
156 -63 lv
0.8 fp
192 -42 mv
204 -21 lv
228 -21 lv
240 -42 lv
228 -63 lv
204 -63 lv
192 -42 lv
0.8 fp
228 -21 mv
240 0 lv
264 0 lv
276 -21 lv
264 -42 lv
240 -42 lv
228 -21 lv
0.8 fp
264 0 mv
276 21 lv
300 21 lv
312 0 lv
300 -21 lv
276 -21 lv
264 0 lv
0.8 fp
300 21 mv
312 42 lv
336 42 lv
348 21 lv
336 0 lv
312 0 lv
300 21 lv
0.8 fp
336 42 mv
348 63 lv
372 63 lv
384 42 lv
372 21 lv
348 21 lv
336 42 lv
0.8 fp
156 -105 mv
168 -84 lv
192 -84 lv
204 -105 lv
192 -126 lv
168 -126 lv
156 -105 lv
0.8 fp
192 -84 mv
204 -63 lv
228 -63 lv
240 -84 lv
228 -105 lv
204 -105 lv
192 -84 lv
0.8 fp
228 -63 mv
240 -42 lv
264 -42 lv
276 -63 lv
264 -84 lv
240 -84 lv
228 -63 lv
0.8 fp
264 -42 mv
276 -21 lv
300 -21 lv
312 -42 lv
300 -63 lv
276 -63 lv
264 -42 lv
0.8 fp
300 -21 mv
312 0 lv
336 0 lv
348 -21 lv
336 -42 lv
312 -42 lv
300 -21 lv
0.8 fp
336 0 mv
348 21 lv
372 21 lv
384 0 lv
372 -21 lv
348 -21 lv
336 0 lv
0.8 fp
372 21 mv
384 42 lv
408 42 lv
420 21 lv
408 0 lv
384 0 lv
372 21 lv
0.8 fp
192 -126 mv
204 -105 lv
228 -105 lv
240 -126 lv
228 -147 lv
204 -147 lv
192 -126 lv
0.8 fp
228 -105 mv
240 -84 lv
264 -84 lv
276 -105 lv
264 -126 lv
240 -126 lv
228 -105 lv
0.8 fp
264 -84 mv
276 -63 lv
300 -63 lv
312 -84 lv
300 -105 lv
276 -105 lv
264 -84 lv
0.8 fp
300 -63 mv
312 -42 lv
336 -42 lv
348 -63 lv
336 -84 lv
312 -84 lv
300 -63 lv
0.8 fp
336 -42 mv
348 -21 lv
372 -21 lv
384 -42 lv
372 -63 lv
348 -63 lv
336 -42 lv
0.8 fp
372 -21 mv
384 0 lv
408 0 lv
420 -21 lv
408 -42 lv
384 -42 lv
372 -21 lv
0.8 fp
408 0 mv
420 21 lv
444 21 lv
456 0 lv
444 -21 lv
420 -21 lv
408 0 lv
0.8 fp
0 126 mv
15 0 fc
0 -126 mv
15 1 fc
15 cr
432 -126 mv
15 0 fc
432 126 mv
15 1 fc
15 cr
es
bs
576 0 mv
588 21 lv
612 21 lv
624 0 lv
612 -21 lv
588 -21 lv
576 0 lv
0.8 fp
612 21 mv
624 42 lv
648 42 lv
660 21 lv
648 0 lv
624 0 lv
612 21 lv
0.8 fp
648 42 mv
660 63 lv
684 63 lv
696 42 lv
684 21 lv
660 21 lv
648 42 lv
0.8 fp
684 63 mv
696 84 lv
720 84 lv
732 63 lv
720 42 lv
696 42 lv
684 63 lv
0.8 fp
720 84 mv
732 105 lv
756 105 lv
768 84 lv
756 63 lv
732 63 lv
720 84 lv
0.8 fp
756 105 mv
768 126 lv
792 126 lv
804 105 lv
792 84 lv
768 84 lv
756 105 lv
0.8 fp
792 126 mv
804 147 lv
828 147 lv
840 126 lv
828 105 lv
804 105 lv
792 126 lv
0.8 fp
612 -21 mv
624 0 lv
648 0 lv
660 -21 lv
648 -42 lv
624 -42 lv
612 -21 lv
0.8 fp
648 0 mv
660 21 lv
684 21 lv
696 0 lv
684 -21 lv
660 -21 lv
648 0 lv
0.8 fp
684 21 mv
696 42 lv
720 42 lv
732 21 lv
720 0 lv
696 0 lv
684 21 lv
0.8 fp
720 42 mv
732 63 lv
756 63 lv
768 42 lv
756 21 lv
732 21 lv
720 42 lv
0.8 fp
756 63 mv
768 84 lv
792 84 lv
804 63 lv
792 42 lv
768 42 lv
756 63 lv
0.8 fp
792 84 mv
804 105 lv
828 105 lv
840 84 lv
828 63 lv
804 63 lv
792 84 lv
0.8 fp
828 105 mv
840 126 lv
864 126 lv
876 105 lv
864 84 lv
840 84 lv
828 105 lv
0.8 fp
648 -42 mv
660 -21 lv
684 -21 lv
696 -42 lv
684 -63 lv
660 -63 lv
648 -42 lv
0.8 fp
684 -21 mv
696 0 lv
720 0 lv
732 -21 lv
720 -42 lv
696 -42 lv
684 -21 lv
0.8 fp
720 0 mv
732 21 lv
756 21 lv
768 0 lv
756 -21 lv
732 -21 lv
720 0 lv
0.8 fp
756 21 mv
768 42 lv
792 42 lv
804 21 lv
792 0 lv
768 0 lv
756 21 lv
0.8 fp
792 42 mv
804 63 lv
828 63 lv
840 42 lv
828 21 lv
804 21 lv
792 42 lv
0.8 fp
828 63 mv
840 84 lv
864 84 lv
876 63 lv
864 42 lv
840 42 lv
828 63 lv
0.8 fp
864 84 mv
876 105 lv
900 105 lv
912 84 lv
900 63 lv
876 63 lv
864 84 lv
0.8 fp
684 -63 mv
696 -42 lv
720 -42 lv
732 -63 lv
720 -84 lv
696 -84 lv
684 -63 lv
0.8 fp
720 -42 mv
732 -21 lv
756 -21 lv
768 -42 lv
756 -63 lv
732 -63 lv
720 -42 lv
0.8 fp
756 -21 mv
768 0 lv
792 0 lv
804 -21 lv
792 -42 lv
768 -42 lv
756 -21 lv
0.8 fp
792 0 mv
804 21 lv
828 21 lv
840 0 lv
828 -21 lv
804 -21 lv
792 0 lv
0.8 fp
828 21 mv
840 42 lv
864 42 lv
876 21 lv
864 0 lv
840 0 lv
828 21 lv
0.8 fp
864 42 mv
876 63 lv
900 63 lv
912 42 lv
900 21 lv
876 21 lv
864 42 lv
0.8 fp
900 63 mv
912 84 lv
936 84 lv
948 63 lv
936 42 lv
912 42 lv
900 63 lv
0.8 fp
720 -84 mv
732 -63 lv
756 -63 lv
768 -84 lv
756 -105 lv
732 -105 lv
720 -84 lv
0.8 fp
756 -63 mv
768 -42 lv
792 -42 lv
804 -63 lv
792 -84 lv
768 -84 lv
756 -63 lv
0.8 fp
792 -42 mv
804 -21 lv
828 -21 lv
840 -42 lv
828 -63 lv
804 -63 lv
792 -42 lv
0.8 fp
828 -21 mv
840 0 lv
864 0 lv
876 -21 lv
864 -42 lv
840 -42 lv
828 -21 lv
0.8 fp
864 0 mv
876 21 lv
900 21 lv
912 0 lv
900 -21 lv
876 -21 lv
864 0 lv
0.8 fp
900 21 mv
912 42 lv
936 42 lv
948 21 lv
936 0 lv
912 0 lv
900 21 lv
0.8 fp
936 42 mv
948 63 lv
972 63 lv
984 42 lv
972 21 lv
948 21 lv
936 42 lv
0.8 fp
756 -105 mv
768 -84 lv
792 -84 lv
804 -105 lv
792 -126 lv
768 -126 lv
756 -105 lv
0.8 fp
792 -84 mv
804 -63 lv
828 -63 lv
840 -84 lv
828 -105 lv
804 -105 lv
792 -84 lv
0.8 fp
828 -63 mv
840 -42 lv
864 -42 lv
876 -63 lv
864 -84 lv
840 -84 lv
828 -63 lv
0.8 fp
864 -42 mv
876 -21 lv
900 -21 lv
912 -42 lv
900 -63 lv
876 -63 lv
864 -42 lv
0.8 fp
900 -21 mv
912 0 lv
936 0 lv
948 -21 lv
936 -42 lv
912 -42 lv
900 -21 lv
0.8 fp
936 0 mv
948 21 lv
972 21 lv
984 0 lv
972 -21 lv
948 -21 lv
936 0 lv
0.8 fp
972 21 mv
984 42 lv
1008 42 lv
1020 21 lv
1008 0 lv
984 0 lv
972 21 lv
0.8 fp
792 -126 mv
804 -105 lv
828 -105 lv
840 -126 lv
828 -147 lv
804 -147 lv
792 -126 lv
0.8 fp
828 -105 mv
840 -84 lv
864 -84 lv
876 -105 lv
864 -126 lv
840 -126 lv
828 -105 lv
0.8 fp
864 -84 mv
876 -63 lv
900 -63 lv
912 -84 lv
900 -105 lv
876 -105 lv
864 -84 lv
0.8 fp
900 -63 mv
912 -42 lv
936 -42 lv
948 -63 lv
936 -84 lv
912 -84 lv
900 -63 lv
0.8 fp
936 -42 mv
948 -21 lv
972 -21 lv
984 -42 lv
972 -63 lv
948 -63 lv
936 -42 lv
0.8 fp
972 -21 mv
984 0 lv
1008 0 lv
1020 -21 lv
1008 -42 lv
984 -42 lv
972 -21 lv
0.8 fp
1008 0 mv
1020 21 lv
1044 21 lv
1056 0 lv
1044 -21 lv
1020 -21 lv
1008 0 lv
0.8 fp
600 126 mv
15 0 fc
600 -126 mv
15 1 fc
15 cr
1032 -126 mv
15 0 fc
1032 126 mv
15 1 fc
15 cr
780 105 mv
15 0 fc
780 63 mv
15 0 fc
816 84 mv
15 0 fc
780 21 mv
15 0 fc
816 0 mv
15 0 fc
816 -42 mv
15 0 fc
888 0 mv
15 0 fc
924 21 mv
15 0 fc
852 -63 mv
15 0 fc
888 -42 mv
15 0 fc
960 0 mv
15 0 fc
996 -21 mv
15 0 fc
744 84 mv
15 1 fc
15 cr
816 126 mv
15 1 fc
15 cr
816 42 mv
15 1 fc
15 cr
888 84 mv
15 1 fc
15 cr
852 21 mv
15 1 fc
15 cr
852 -21 mv
15 1 fc
15 cr
780 -105 mv
15 1 fc
15 cr
924 -21 mv
15 1 fc
15 cr
852 -105 mv
15 1 fc
15 cr
888 -84 mv
15 1 fc
15 cr
924 -63 mv
15 1 fc
15 cr
960 -42 mv
15 1 fc
15 cr
es
stroke end showpage
%%Trailer:
%%BoundingBox: -6 -35 253 35
%%EOF

%%EndDocument
 @endspecial 550 1003 a Fs(Fig.)31 b(1.)g(An)f(empt)m(y)g(7)p
Fu(\002)p Fs(7)h(b)s(oard)240 b(.)15 b(.)h(.)f(and)30
b(a)h(\014nished)d(game;)j(Blac)m(k)g(wins.)0 1288 y
Fr(sides,)e(all)c(with)j(the)g(same)g(colour;)f(sa)m(y)i(Blac)m(k)f
(gets)h(blac)m(k)f(stones)h(and)f(sides,)h(while)e(White)h(gets)g
(white)0 1408 y(stones)k(and)f(sides.)h(Pla)m(y)m(ers)g(alternately)e
(place)h(a)f(stone)i(on)f(an)g(uno)s(ccupied)g(cell.)f(The)i(\014rst)g
(pla)m(y)m(er)f(to)0 1529 y(form)j(a)g(path)h(connecting)h(his/her)f(t)
m(w)m(o)g(sides)h(with)e(his/her)h(stones)i(wins)e(the)g(game.)f(See)i
(Figure)e(1.)0 1649 y(F)-8 b(or)35 b(more)f(on)h(Hex,)i(see)f(the)g
(text)g(b)m(y)g(Bro)m(wne)g([8])g(or)f(the)g(surv)m(ey)j(b)m(y)e(Ha)m
(yw)m(ard)h(and)e(V)-8 b(an)35 b(Rijswijc)m(k)0 1769
y([14].)0 1939 y(In)f(Hex,)h(an)e(unrestricted)i(op)s(ening)e(allo)m
(ws)f(the)i(\014rst)g(pla)m(y)m(er)g(to)g(gain)e(a)h(considerable)h
(adv)-5 b(an)m(tage.)34 b(In)0 2060 y(particular,)28
b(it)h(is)g(kno)m(wn)i(that)f(there)g(exists)h(a)e(winning)g(strategy)h
(for)f(the)i(\014rst)f(pla)m(y)m(er)g([12].)f(While)g(no)0
2180 y(explicit)36 b(strategy)i(that)f(holds)g(for)g(arbitrary)f(sized)
i(b)s(oards)g(is)e(kno)m(wn,)j(man)m(y)f(pla)m(y)m(ers)g(b)s(eliev)m(e)
f(that)0 2301 y(op)s(ening)26 b(in)h(the)h(cen)m(termost)g(cell)e(in)g
(particular)g(is)g(a)h(winning)g(mo)m(v)m(e.)g(In)h(order)f(to)g
(o\013set)h(this)f(op)s(ening)0 2421 y(mo)m(v)m(e)38
b(adv)-5 b(an)m(tage,)38 b(the)f(game)g(is)g(often)g(started)i
(according)d(to)h(the)h(follo)m(wing)d(\\sw)m(ap)k(rule":)d(colours)0
2541 y(are)e(assigned)g(to)f(the)h(four)f(sides)h(of)g(the)g(b)s(oard,)
f(but)h(not)f(to)h(the)g(pla)m(y)m(ers;)g(one)g(pla)m(y)m(er)g(then)g
(places)g(a)0 2662 y(stone)28 b(on)f(an)m(y)h(cell;)e(the)h(other)h
(pla)m(y)m(er)f(then)h(c)m(ho)s(oses)h(whic)m(h)e(colour)g(stones)h(to)
f(pla)m(y)g(with.)g(The)h(second)0 2782 y(mo)m(v)m(e)37
b(is)g(pla)m(y)m(ed)h(b)m(y)g(the)f(pla)m(y)m(er)h(whose)g(stones)g
(are)f(the)g(opp)s(osite)g(colour)f(of)h(the)g(\014rst)h(stone.)f(F)-8
b(rom)0 2903 y(then)33 b(on,)g(the)g(game)e(con)m(tin)m(ues)j(in)e
(normal)f(fashion,)h(namely)f(with)h(pla)m(y)m(ers)i(alternating)c(mo)m
(v)m(es.)0 3073 y(The)h(sw)m(ap)g(rule)e(has)h(a)f(balancing)f
(e\013ect)j(on)f(the)g(\014rst)g(mo)m(v)m(e:)g(if)f(the)h(\014rst)g
(pla)m(y)m(er)g(mak)m(es)h(an)e(ob)m(viously)0 3193 y(winning)g(mo)m(v)
m(e,)h(the)h(second)g(pla)m(y)m(er)f(can)g(sw)m(ap)h(and)f(easily)f
(win)h(the)g(game;)g(if)e(the)j(\014rst)f(pla)m(y)m(er)g(mak)m(es)0
3313 y(an)k(ob)m(viously)g(losing)e(mo)m(v)m(e,)i(the)h(second)g(pla)m
(y)m(er)f(can)g(con)m(tin)m(ue)h(without)e(sw)m(apping,)i(and)f(again)e
(win)0 3434 y(the)44 b(game.)g(The)g(\014rst)h(pla)m(y)m(er)f(is)g(th)m
(us)h(led)e(to)h(searc)m(h)h(for)e(an)h(op)s(ening)f(mo)m(v)m(e)i(that)
e(is)h(neither)g(to)s(o)0 3554 y(strong)35 b(nor)h(to)s(o)e(w)m(eak,)j
(namely)d(a)h(mo)m(v)m(e)h(whose)h(outcome)e(is)f(di\016cult)h(to)g
(discern.)h(While)e(the)i(sw)m(ap)0 3675 y(rule)44 b(transforms)h(Hex)h
(from)e(a)g(game)g(with)h(a)f(\014rst-pla)m(y)m(er)i(winning)e
(strategy)h(to)g(a)g(game)f(with)g(a)0 3795 y(second-pla)m(y)m(er)31
b(winning)e(strategy)-8 b(,)30 b(the)g(second)h(pla)m(y)m(er)f(can)g
(exploit)f(this)g(prop)s(ert)m(y)i(only)e(b)m(y)i(kno)m(wing)0
3915 y(the)39 b(theoretical)e(outcomes)i(of)f(all)f(op)s(ening)h(mo)m
(v)m(es,)h(and)g(furthermore)f(kno)m(wing)h(ho)m(w)g(to)f(pla)m(y)h(w)m
(ell)0 4036 y(enough)33 b(to)f(win)g(for)h(eac)m(h)g(op)s(ening.)0
4206 y(Th)m(us)40 b(the)f(Hex)g(sw)m(ap)h(rule)e(raises)h(t)m(w)m(o)g
(questions:)g(\(i\))f(what)h(is)f(the)h(theoretical)e(outcome)h(for)g
(eac)m(h)0 4326 y(op)s(ening)h(mo)m(v)m(e,)i(and)f(\(ii\))e(among)h
(all)f(op)s(ening)h(mo)m(v)m(es,)i(what)g(are)f(the)g(comparativ)m(e)f
(di\016culties)g(of)0 4447 y(pla)m(ying)27 b(p)s(erfectly)i(after)f
(the)h(mo)m(v)m(e?)g(In)g(this)f(pap)s(er)h(w)m(e)h(presen)m(t)g(a)e
(computer)h(algorithm)c(that)j(w)m(e)i(use)0 4567 y(to)j(answ)m(er)j
(these)f(questions)f(for)g(the)g(game)f(of)g(Hex)i(pla)m(y)m(ed)f(on)g
(a)g(7)p Fn(\002)p Fr(7)f(b)s(oard.)h(In)g(order)g(to)f(describ)s(e)0
4688 y(our)f(algorithm)e(and)i(the)h(ideas)g(b)s(ehind)f(it,)g(w)m(e)i
(\014rst)f(need)g(to)g(in)m(tro)s(duce)f(some)h(terminology)-8
b(.)0 4858 y(W)g(e)27 b(b)s(egin)f(with)h(game-state)f(notation.)f(The)
j(terms)e(w)m(e)i(use)g(in)e(this)g(pap)s(er)h(are)g(consisten)m(t)h
(with)e(those)0 4978 y(used)34 b(in)e([14].)h(With)g(resp)s(ect)h(to)e
(Hex,)i(a)f Fq(b)-5 b(o)g(ar)g(d-state)33 b Fo(B)38 b
Fr(describ)s(es)c(a)f(particular)e(placemen)m(t)i(of)f(some)0
5098 y(n)m(um)m(b)s(er)38 b(of)e(blac)m(k)i(stones)g(and)g(some)f(n)m
(um)m(b)s(er)g(of)g(white)g(stones,)i(suc)m(h)g(that)e(eac)m(h)h(cell)e
(has)i(at)f(most)0 5219 y(one)d(stone.)h(W)-8 b(e)35
b(assume)f(no)g(constrain)m(t)g(on)g(the)h(relativ)m(e)e(n)m(um)m(b)s
(er)i(of)e(stones)i(of)f(eac)m(h)h(colour,)e(as)i(the)0
5339 y(game)29 b(ma)m(y)i(ha)m(v)m(e)g(started)g(with)f(a)g(handicap)g
(adv)-5 b(an)m(tage)31 b(for)f(one)g(of)g(the)h(pla)m(y)m(ers;)g(also,)
f(w)m(e)h(in)m(tro)s(duce)0 5460 y(a)d(form)f(of)g(game-state)h
(analysis)f(that)h(o)s(ccasionally)e(requires)j(the)f(placemen)m(t)g
(of)g(extra)g(stones)i(on)e(the)0 5580 y(b)s(oard.)j(The)g
Fq(empty)j(b)-5 b(o)g(ar)g(d-state)30 b Fr(has)i(no)e(stones)j(on)d
(the)i(b)s(oard.)e(A)h Fq(k-op)-5 b(ening)30 b Fr(is)g(a)h(b)s
(oard-state)f(with)1909 5912 y(2)p eop
%%Page: 3 3
3 2 bop 592 1365 a @beginspecial -6 @llx -100 @lly 317
@urx 35 @ury 3230 @rwi @setspecial
%%BeginDocument: ppr.ps2
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: (atend)
%%Title: TeXdraw drawing: ppr.ps2
%%Pages: 1
%%Creator: 1995/12/19 TeXdraw V2R0
%%CreationDate: 2006/4/25
50 dict begin
/mv {stroke moveto} def
/lv {lineto} def
/st {currentpoint stroke moveto} def
/sl {st setlinewidth} def
/sd {st 0 setdash} def
/sg {st setgray} def
/bs {gsave} def /es {stroke grestore} def
/fl {gsave setgray fill grestore
 currentpoint newpath moveto} def
/fp {gsave setgray fill grestore st} def
/cv {curveto} def
/cr {gsave currentpoint newpath 3 -1 roll 0 360 arc
 stroke grestore} def
/fc {gsave setgray currentpoint newpath
 3 -1 roll 0 360 arc fill grestore} def
/ar {gsave currentpoint newpath 5 2 roll arc stroke grestore} def
/el {gsave /svm matrix currentmatrix def
 currentpoint translate scale newpath 0 0 1 0 360 arc
 svm setmatrix stroke grestore} def
/fe {gsave setgray currentpoint translate scale newpath
 0 0 1 0 360 arc fill grestore} def
/av {/hhwid exch 2 div def /hlen exch def
 /ah exch def /tipy exch def /tipx exch def
 currentpoint /taily exch def /tailx exch def
 /dx tipx tailx sub def /dy tipy taily sub def
 /alen dx dx mul dy dy mul add sqrt def
 /blen alen hlen sub def
 gsave tailx taily translate dy dx atan rotate
 (V) ah ne {blen 0 gt {blen 0 lineto} if} {alen 0 lineto} ifelse
 stroke blen hhwid neg moveto alen 0 lineto blen hhwid lineto
 (T) ah eq {closepath} if
 (W) ah eq {gsave 1 setgray fill grestore closepath} if
 (F) ah eq {fill} {stroke} ifelse
 grestore tipx tipy moveto} def
0.24 0.24 scale
1 setlinecap 1 setlinejoin
3 setlinewidth [] 0 setdash
0 0 moveto
0 sl
bs
-24 0 mv
-12 21 lv
12 21 lv
24 0 lv
12 -21 lv
-12 -21 lv
-24 0 lv
0.8 fp
12 21 mv
24 42 lv
48 42 lv
60 21 lv
48 0 lv
24 0 lv
12 21 lv
0.8 fp
48 42 mv
60 63 lv
84 63 lv
96 42 lv
84 21 lv
60 21 lv
48 42 lv
0.8 fp
84 63 mv
96 84 lv
120 84 lv
132 63 lv
120 42 lv
96 42 lv
84 63 lv
0.8 fp
120 84 mv
132 105 lv
156 105 lv
168 84 lv
156 63 lv
132 63 lv
120 84 lv
0.8 fp
156 105 mv
168 126 lv
192 126 lv
204 105 lv
192 84 lv
168 84 lv
156 105 lv
0.8 fp
192 126 mv
204 147 lv
228 147 lv
240 126 lv
228 105 lv
204 105 lv
192 126 lv
0.8 fp
12 -21 mv
24 0 lv
48 0 lv
60 -21 lv
48 -42 lv
24 -42 lv
12 -21 lv
0.8 fp
48 0 mv
60 21 lv
84 21 lv
96 0 lv
84 -21 lv
60 -21 lv
48 0 lv
0.8 fp
84 21 mv
96 42 lv
120 42 lv
132 21 lv
120 0 lv
96 0 lv
84 21 lv
0.8 fp
120 42 mv
132 63 lv
156 63 lv
168 42 lv
156 21 lv
132 21 lv
120 42 lv
0.8 fp
156 63 mv
168 84 lv
192 84 lv
204 63 lv
192 42 lv
168 42 lv
156 63 lv
0.8 fp
192 84 mv
204 105 lv
228 105 lv
240 84 lv
228 63 lv
204 63 lv
192 84 lv
0.8 fp
228 105 mv
240 126 lv
264 126 lv
276 105 lv
264 84 lv
240 84 lv
228 105 lv
0.8 fp
48 -42 mv
60 -21 lv
84 -21 lv
96 -42 lv
84 -63 lv
60 -63 lv
48 -42 lv
0.8 fp
84 -21 mv
96 0 lv
120 0 lv
132 -21 lv
120 -42 lv
96 -42 lv
84 -21 lv
0.8 fp
120 0 mv
132 21 lv
156 21 lv
168 0 lv
156 -21 lv
132 -21 lv
120 0 lv
0.8 fp
156 21 mv
168 42 lv
192 42 lv
204 21 lv
192 0 lv
168 0 lv
156 21 lv
0.8 fp
192 42 mv
204 63 lv
228 63 lv
240 42 lv
228 21 lv
204 21 lv
192 42 lv
0.8 fp
228 63 mv
240 84 lv
264 84 lv
276 63 lv
264 42 lv
240 42 lv
228 63 lv
0.8 fp
264 84 mv
276 105 lv
300 105 lv
312 84 lv
300 63 lv
276 63 lv
264 84 lv
0.8 fp
84 -63 mv
96 -42 lv
120 -42 lv
132 -63 lv
120 -84 lv
96 -84 lv
84 -63 lv
0.8 fp
120 -42 mv
132 -21 lv
156 -21 lv
168 -42 lv
156 -63 lv
132 -63 lv
120 -42 lv
0.8 fp
156 -21 mv
168 0 lv
192 0 lv
204 -21 lv
192 -42 lv
168 -42 lv
156 -21 lv
0.8 fp
192 0 mv
204 21 lv
228 21 lv
240 0 lv
228 -21 lv
204 -21 lv
192 0 lv
0.8 fp
228 21 mv
240 42 lv
264 42 lv
276 21 lv
264 0 lv
240 0 lv
228 21 lv
0.8 fp
264 42 mv
276 63 lv
300 63 lv
312 42 lv
300 21 lv
276 21 lv
264 42 lv
0.8 fp
300 63 mv
312 84 lv
336 84 lv
348 63 lv
336 42 lv
312 42 lv
300 63 lv
0.8 fp
120 -84 mv
132 -63 lv
156 -63 lv
168 -84 lv
156 -105 lv
132 -105 lv
120 -84 lv
0.8 fp
156 -63 mv
168 -42 lv
192 -42 lv
204 -63 lv
192 -84 lv
168 -84 lv
156 -63 lv
0.8 fp
192 -42 mv
204 -21 lv
228 -21 lv
240 -42 lv
228 -63 lv
204 -63 lv
192 -42 lv
0.8 fp
228 -21 mv
240 0 lv
264 0 lv
276 -21 lv
264 -42 lv
240 -42 lv
228 -21 lv
0.8 fp
264 0 mv
276 21 lv
300 21 lv
312 0 lv
300 -21 lv
276 -21 lv
264 0 lv
0.8 fp
300 21 mv
312 42 lv
336 42 lv
348 21 lv
336 0 lv
312 0 lv
300 21 lv
0.8 fp
336 42 mv
348 63 lv
372 63 lv
384 42 lv
372 21 lv
348 21 lv
336 42 lv
0.8 fp
156 -105 mv
168 -84 lv
192 -84 lv
204 -105 lv
192 -126 lv
168 -126 lv
156 -105 lv
0.8 fp
192 -84 mv
204 -63 lv
228 -63 lv
240 -84 lv
228 -105 lv
204 -105 lv
192 -84 lv
0.8 fp
228 -63 mv
240 -42 lv
264 -42 lv
276 -63 lv
264 -84 lv
240 -84 lv
228 -63 lv
0.8 fp
264 -42 mv
276 -21 lv
300 -21 lv
312 -42 lv
300 -63 lv
276 -63 lv
264 -42 lv
0.8 fp
300 -21 mv
312 0 lv
336 0 lv
348 -21 lv
336 -42 lv
312 -42 lv
300 -21 lv
0.8 fp
336 0 mv
348 21 lv
372 21 lv
384 0 lv
372 -21 lv
348 -21 lv
336 0 lv
0.8 fp
372 21 mv
384 42 lv
408 42 lv
420 21 lv
408 0 lv
384 0 lv
372 21 lv
0.8 fp
192 -126 mv
204 -105 lv
228 -105 lv
240 -126 lv
228 -147 lv
204 -147 lv
192 -126 lv
0.8 fp
228 -105 mv
240 -84 lv
264 -84 lv
276 -105 lv
264 -126 lv
240 -126 lv
228 -105 lv
0.8 fp
264 -84 mv
276 -63 lv
300 -63 lv
312 -84 lv
300 -105 lv
276 -105 lv
264 -84 lv
0.8 fp
300 -63 mv
312 -42 lv
336 -42 lv
348 -63 lv
336 -84 lv
312 -84 lv
300 -63 lv
0.8 fp
336 -42 mv
348 -21 lv
372 -21 lv
384 -42 lv
372 -63 lv
348 -63 lv
336 -42 lv
0.8 fp
372 -21 mv
384 0 lv
408 0 lv
420 -21 lv
408 -42 lv
384 -42 lv
372 -21 lv
0.8 fp
408 0 mv
420 21 lv
444 21 lv
456 0 lv
444 -21 lv
420 -21 lv
408 0 lv
0.8 fp
0 126 mv
15 0 fc
0 -126 mv
15 1 fc
15 cr
432 -126 mv
15 0 fc
432 126 mv
15 1 fc
15 cr
0 0 mv
15 0 fc
36 -21 mv
15 0 fc
72 -42 mv
15 0 fc
108 -63 mv
15 0 fc
144 -84 mv
15 0 fc
180 -105 mv
15 0 fc
144 -42 mv
15 0 fc
288 42 mv
15 0 fc
216 0 mv
15 1 fc
15 cr
216 42 mv
15 1 fc
15 cr
216 -42 mv
15 1 fc
15 cr
252 105 mv
15 0 fc
288 84 mv
15 0 fc
324 63 mv
15 0 fc
360 42 mv
15 0 fc
396 21 mv
15 0 fc
432 0 mv
15 0 fc
es
bs
912 0 mv
924 21 lv
948 21 lv
960 0 lv
948 -21 lv
924 -21 lv
912 0 lv
0.8 fp
948 21 mv
960 42 lv
984 42 lv
996 21 lv
984 0 lv
960 0 lv
948 21 lv
0.8 fp
984 42 mv
996 63 lv
1020 63 lv
1032 42 lv
1020 21 lv
996 21 lv
984 42 lv
0.8 fp
1020 63 mv
1032 84 lv
1056 84 lv
1068 63 lv
1056 42 lv
1032 42 lv
1020 63 lv
0.8 fp
1056 84 mv
1068 105 lv
1092 105 lv
1104 84 lv
1092 63 lv
1068 63 lv
1056 84 lv
0.8 fp
1092 105 mv
1104 126 lv
1128 126 lv
1140 105 lv
1128 84 lv
1104 84 lv
1092 105 lv
0.8 fp
948 -21 mv
960 0 lv
984 0 lv
996 -21 lv
984 -42 lv
960 -42 lv
948 -21 lv
0.8 fp
984 0 mv
996 21 lv
1020 21 lv
1032 0 lv
1020 -21 lv
996 -21 lv
984 0 lv
0.8 fp
1020 21 mv
1032 42 lv
1056 42 lv
1068 21 lv
1056 0 lv
1032 0 lv
1020 21 lv
0.8 fp
1056 42 mv
1068 63 lv
1092 63 lv
1104 42 lv
1092 21 lv
1068 21 lv
1056 42 lv
0.8 fp
1092 63 mv
1104 84 lv
1128 84 lv
1140 63 lv
1128 42 lv
1104 42 lv
1092 63 lv
0.8 fp
1128 84 mv
1140 105 lv
1164 105 lv
1176 84 lv
1164 63 lv
1140 63 lv
1128 84 lv
0.8 fp
984 -42 mv
996 -21 lv
1020 -21 lv
1032 -42 lv
1020 -63 lv
996 -63 lv
984 -42 lv
0.8 fp
1020 -21 mv
1032 0 lv
1056 0 lv
1068 -21 lv
1056 -42 lv
1032 -42 lv
1020 -21 lv
0.8 fp
1056 0 mv
1068 21 lv
1092 21 lv
1104 0 lv
1092 -21 lv
1068 -21 lv
1056 0 lv
0.8 fp
1092 21 mv
1104 42 lv
1128 42 lv
1140 21 lv
1128 0 lv
1104 0 lv
1092 21 lv
0.8 fp
1128 42 mv
1140 63 lv
1164 63 lv
1176 42 lv
1164 21 lv
1140 21 lv
1128 42 lv
0.8 fp
1164 63 mv
1176 84 lv
1200 84 lv
1212 63 lv
1200 42 lv
1176 42 lv
1164 63 lv
0.8 fp
1020 -63 mv
1032 -42 lv
1056 -42 lv
1068 -63 lv
1056 -84 lv
1032 -84 lv
1020 -63 lv
0.8 fp
1056 -42 mv
1068 -21 lv
1092 -21 lv
1104 -42 lv
1092 -63 lv
1068 -63 lv
1056 -42 lv
0.8 fp
1092 -21 mv
1104 0 lv
1128 0 lv
1140 -21 lv
1128 -42 lv
1104 -42 lv
1092 -21 lv
0.8 fp
1128 0 mv
1140 21 lv
1164 21 lv
1176 0 lv
1164 -21 lv
1140 -21 lv
1128 0 lv
0.8 fp
1164 21 mv
1176 42 lv
1200 42 lv
1212 21 lv
1200 0 lv
1176 0 lv
1164 21 lv
0.8 fp
1200 42 mv
1212 63 lv
1236 63 lv
1248 42 lv
1236 21 lv
1212 21 lv
1200 42 lv
0.8 fp
1056 -84 mv
1068 -63 lv
1092 -63 lv
1104 -84 lv
1092 -105 lv
1068 -105 lv
1056 -84 lv
0.8 fp
1092 -63 mv
1104 -42 lv
1128 -42 lv
1140 -63 lv
1128 -84 lv
1104 -84 lv
1092 -63 lv
0.8 fp
1128 -42 mv
1140 -21 lv
1164 -21 lv
1176 -42 lv
1164 -63 lv
1140 -63 lv
1128 -42 lv
0.8 fp
1164 -21 mv
1176 0 lv
1200 0 lv
1212 -21 lv
1200 -42 lv
1176 -42 lv
1164 -21 lv
0.8 fp
1200 0 mv
1212 21 lv
1236 21 lv
1248 0 lv
1236 -21 lv
1212 -21 lv
1200 0 lv
0.8 fp
1236 21 mv
1248 42 lv
1272 42 lv
1284 21 lv
1272 0 lv
1248 0 lv
1236 21 lv
0.8 fp
1092 -105 mv
1104 -84 lv
1128 -84 lv
1140 -105 lv
1128 -126 lv
1104 -126 lv
1092 -105 lv
0.8 fp
1128 -84 mv
1140 -63 lv
1164 -63 lv
1176 -84 lv
1164 -105 lv
1140 -105 lv
1128 -84 lv
0.8 fp
1164 -63 mv
1176 -42 lv
1200 -42 lv
1212 -63 lv
1200 -84 lv
1176 -84 lv
1164 -63 lv
0.8 fp
1200 -42 mv
1212 -21 lv
1236 -21 lv
1248 -42 lv
1236 -63 lv
1212 -63 lv
1200 -42 lv
0.8 fp
1236 -21 mv
1248 0 lv
1272 0 lv
1284 -21 lv
1272 -42 lv
1248 -42 lv
1236 -21 lv
0.8 fp
1272 0 mv
1284 21 lv
1308 21 lv
1320 0 lv
1308 -21 lv
1284 -21 lv
1272 0 lv
0.8 fp
936 105 mv
15 0 fc
936 -105 mv
15 1 fc
15 cr
1296 -105 mv
15 0 fc
1296 105 mv
15 1 fc
15 cr
936 0 mv
15 0 fc
972 -21 mv
15 0 fc
1008 -42 mv
15 0 fc
1044 -63 mv
15 0 fc
1080 -84 mv
15 0 fc
1116 -105 mv
15 1 fc
15 cr
972 21 mv
15 0 fc
1008 0 mv
15 1 fc
15 cr
1044 -21 mv
15 1 fc
15 cr
1080 -42 mv
15 1 fc
15 cr
1116 -63 mv
15 1 fc
15 cr
1152 -84 mv
15 1 fc
15 cr
1008 42 mv
15 1 fc
15 cr
1044 21 mv
15 1 fc
15 cr
1080 0 mv
15 1 fc
15 cr
1116 -21 mv
15 1 fc
15 cr
1152 -42 mv
15 1 fc
15 cr
1188 -63 mv
15 1 fc
15 cr
1044 63 mv
15 1 fc
15 cr
1080 42 mv
15 1 fc
15 cr
1116 21 mv
15 1 fc
15 cr
1152 0 mv
15 1 fc
15 cr
1188 -21 mv
15 1 fc
15 cr
1224 -42 mv
15 1 fc
15 cr
1080 84 mv
15 1 fc
15 cr
1116 63 mv
15 1 fc
15 cr
1152 42 mv
15 1 fc
15 cr
1188 21 mv
15 1 fc
15 cr
1224 0 mv
15 1 fc
15 cr
1260 -21 mv
15 0 fc
1116 105 mv
15 1 fc
15 cr
1152 84 mv
15 0 fc
1188 63 mv
15 0 fc
1224 42 mv
15 0 fc
1260 21 mv
15 0 fc
1296 0 mv
15 0 fc
es
bs
984 -312 mv
996 -291 lv
1020 -291 lv
1032 -312 lv
1020 -333 lv
996 -333 lv
984 -312 lv
0.8 fp
1020 -291 mv
1032 -270 lv
1056 -270 lv
1068 -291 lv
1056 -312 lv
1032 -312 lv
1020 -291 lv
0.8 fp
1056 -270 mv
1068 -249 lv
1092 -249 lv
1104 -270 lv
1092 -291 lv
1068 -291 lv
1056 -270 lv
0.8 fp
1092 -249 mv
1104 -228 lv
1128 -228 lv
1140 -249 lv
1128 -270 lv
1104 -270 lv
1092 -249 lv
0.8 fp
1128 -228 mv
1140 -207 lv
1164 -207 lv
1176 -228 lv
1164 -249 lv
1140 -249 lv
1128 -228 lv
0.8 fp
1020 -333 mv
1032 -312 lv
1056 -312 lv
1068 -333 lv
1056 -354 lv
1032 -354 lv
1020 -333 lv
0.8 fp
1056 -312 mv
1068 -291 lv
1092 -291 lv
1104 -312 lv
1092 -333 lv
1068 -333 lv
1056 -312 lv
0.8 fp
1092 -291 mv
1104 -270 lv
1128 -270 lv
1140 -291 lv
1128 -312 lv
1104 -312 lv
1092 -291 lv
0.8 fp
1128 -270 mv
1140 -249 lv
1164 -249 lv
1176 -270 lv
1164 -291 lv
1140 -291 lv
1128 -270 lv
0.8 fp
1164 -249 mv
1176 -228 lv
1200 -228 lv
1212 -249 lv
1200 -270 lv
1176 -270 lv
1164 -249 lv
0.8 fp
1056 -354 mv
1068 -333 lv
1092 -333 lv
1104 -354 lv
1092 -375 lv
1068 -375 lv
1056 -354 lv
0.8 fp
1092 -333 mv
1104 -312 lv
1128 -312 lv
1140 -333 lv
1128 -354 lv
1104 -354 lv
1092 -333 lv
0.8 fp
1128 -312 mv
1140 -291 lv
1164 -291 lv
1176 -312 lv
1164 -333 lv
1140 -333 lv
1128 -312 lv
0.8 fp
1164 -291 mv
1176 -270 lv
1200 -270 lv
1212 -291 lv
1200 -312 lv
1176 -312 lv
1164 -291 lv
0.8 fp
1200 -270 mv
1212 -249 lv
1236 -249 lv
1248 -270 lv
1236 -291 lv
1212 -291 lv
1200 -270 lv
0.8 fp
1092 -375 mv
1104 -354 lv
1128 -354 lv
1140 -375 lv
1128 -396 lv
1104 -396 lv
1092 -375 lv
0.8 fp
1128 -354 mv
1140 -333 lv
1164 -333 lv
1176 -354 lv
1164 -375 lv
1140 -375 lv
1128 -354 lv
0.8 fp
1164 -333 mv
1176 -312 lv
1200 -312 lv
1212 -333 lv
1200 -354 lv
1176 -354 lv
1164 -333 lv
0.8 fp
1200 -312 mv
1212 -291 lv
1236 -291 lv
1248 -312 lv
1236 -333 lv
1212 -333 lv
1200 -312 lv
0.8 fp
1236 -291 mv
1248 -270 lv
1272 -270 lv
1284 -291 lv
1272 -312 lv
1248 -312 lv
1236 -291 lv
0.8 fp
1128 -396 mv
1140 -375 lv
1164 -375 lv
1176 -396 lv
1164 -417 lv
1140 -417 lv
1128 -396 lv
0.8 fp
1164 -375 mv
1176 -354 lv
1200 -354 lv
1212 -375 lv
1200 -396 lv
1176 -396 lv
1164 -375 lv
0.8 fp
1200 -354 mv
1212 -333 lv
1236 -333 lv
1248 -354 lv
1236 -375 lv
1212 -375 lv
1200 -354 lv
0.8 fp
1236 -333 mv
1248 -312 lv
1272 -312 lv
1284 -333 lv
1272 -354 lv
1248 -354 lv
1236 -333 lv
0.8 fp
1272 -312 mv
1284 -291 lv
1308 -291 lv
1320 -312 lv
1308 -333 lv
1284 -333 lv
1272 -312 lv
0.8 fp
1008 -312 mv
15 0 fc
1044 -333 mv
15 0 fc
1080 -354 mv
15 0 fc
1116 -375 mv
15 0 fc
1152 -396 mv
15 1 fc
15 cr
1044 -291 mv
15 0 fc
1080 -312 mv
15 1 fc
15 cr
1116 -333 mv
15 1 fc
15 cr
1152 -354 mv
15 1 fc
15 cr
1188 -375 mv
15 1 fc
15 cr
1080 -270 mv
15 0 fc
1116 -291 mv
15 1 fc
15 cr
1152 -312 mv
15 1 fc
15 cr
1188 -333 mv
15 1 fc
15 cr
1224 -354 mv
15 0 fc
1116 -249 mv
15 1 fc
15 cr
1152 -270 mv
15 1 fc
15 cr
1188 -291 mv
15 1 fc
15 cr
1224 -312 mv
15 1 fc
15 cr
1260 -333 mv
15 0 fc
1152 -228 mv
15 1 fc
15 cr
1188 -249 mv
15 0 fc
1224 -270 mv
15 0 fc
1260 -291 mv
15 0 fc
1296 -312 mv
15 0 fc
es
bs
624 -312 mv
636 -291 lv
660 -291 lv
672 -312 lv
660 -333 lv
636 -333 lv
624 -312 lv
0.8 fp
660 -291 mv
672 -270 lv
696 -270 lv
708 -291 lv
696 -312 lv
672 -312 lv
660 -291 lv
0.8 fp
696 -270 mv
708 -249 lv
732 -249 lv
744 -270 lv
732 -291 lv
708 -291 lv
696 -270 lv
0.8 fp
732 -249 mv
744 -228 lv
768 -228 lv
780 -249 lv
768 -270 lv
744 -270 lv
732 -249 lv
0.8 fp
660 -333 mv
672 -312 lv
696 -312 lv
708 -333 lv
696 -354 lv
672 -354 lv
660 -333 lv
0.8 fp
696 -312 mv
708 -291 lv
732 -291 lv
744 -312 lv
732 -333 lv
708 -333 lv
696 -312 lv
0.8 fp
732 -291 mv
744 -270 lv
768 -270 lv
780 -291 lv
768 -312 lv
744 -312 lv
732 -291 lv
0.8 fp
768 -270 mv
780 -249 lv
804 -249 lv
816 -270 lv
804 -291 lv
780 -291 lv
768 -270 lv
0.8 fp
696 -354 mv
708 -333 lv
732 -333 lv
744 -354 lv
732 -375 lv
708 -375 lv
696 -354 lv
0.8 fp
732 -333 mv
744 -312 lv
768 -312 lv
780 -333 lv
768 -354 lv
744 -354 lv
732 -333 lv
0.8 fp
768 -312 mv
780 -291 lv
804 -291 lv
816 -312 lv
804 -333 lv
780 -333 lv
768 -312 lv
0.8 fp
804 -291 mv
816 -270 lv
840 -270 lv
852 -291 lv
840 -312 lv
816 -312 lv
804 -291 lv
0.8 fp
732 -375 mv
744 -354 lv
768 -354 lv
780 -375 lv
768 -396 lv
744 -396 lv
732 -375 lv
0.8 fp
768 -354 mv
780 -333 lv
804 -333 lv
816 -354 lv
804 -375 lv
780 -375 lv
768 -354 lv
0.8 fp
804 -333 mv
816 -312 lv
840 -312 lv
852 -333 lv
840 -354 lv
816 -354 lv
804 -333 lv
0.8 fp
840 -312 mv
852 -291 lv
876 -291 lv
888 -312 lv
876 -333 lv
852 -333 lv
840 -312 lv
0.8 fp
648 -312 mv
15 0 fc
684 -333 mv
15 0 fc
720 -354 mv
15 0 fc
756 -375 mv
15 1 fc
15 cr
684 -291 mv
15 0 fc
720 -312 mv
15 0 fc
756 -333 mv
15 1 fc
15 cr
792 -354 mv
15 0 fc
720 -270 mv
15 0 fc
756 -291 mv
15 1 fc
15 cr
792 -312 mv
15 0 fc
828 -333 mv
15 0 fc
756 -249 mv
15 1 fc
15 cr
792 -270 mv
15 0 fc
828 -291 mv
15 0 fc
864 -312 mv
15 0 fc
es
bs
336 -312 mv
348 -291 lv
372 -291 lv
384 -312 lv
372 -333 lv
348 -333 lv
336 -312 lv
0.8 fp
372 -291 mv
384 -270 lv
408 -270 lv
420 -291 lv
408 -312 lv
384 -312 lv
372 -291 lv
0.8 fp
408 -270 mv
420 -249 lv
444 -249 lv
456 -270 lv
444 -291 lv
420 -291 lv
408 -270 lv
0.8 fp
372 -333 mv
384 -312 lv
408 -312 lv
420 -333 lv
408 -354 lv
384 -354 lv
372 -333 lv
0.8 fp
408 -312 mv
420 -291 lv
444 -291 lv
456 -312 lv
444 -333 lv
420 -333 lv
408 -312 lv
0.8 fp
444 -291 mv
456 -270 lv
480 -270 lv
492 -291 lv
480 -312 lv
456 -312 lv
444 -291 lv
0.8 fp
408 -354 mv
420 -333 lv
444 -333 lv
456 -354 lv
444 -375 lv
420 -375 lv
408 -354 lv
0.8 fp
444 -333 mv
456 -312 lv
480 -312 lv
492 -333 lv
480 -354 lv
456 -354 lv
444 -333 lv
0.8 fp
480 -312 mv
492 -291 lv
516 -291 lv
528 -312 lv
516 -333 lv
492 -333 lv
480 -312 lv
0.8 fp
360 -312 mv
15 0 fc
396 -333 mv
15 0 fc
432 -354 mv
15 1 fc
15 cr
396 -291 mv
15 1 fc
15 cr
432 -312 mv
15 1 fc
15 cr
468 -333 mv
15 1 fc
15 cr
432 -270 mv
15 1 fc
15 cr
468 -291 mv
15 0 fc
504 -312 mv
15 0 fc
es
bs
120 -312 mv
132 -291 lv
156 -291 lv
168 -312 lv
156 -333 lv
132 -333 lv
120 -312 lv
0.8 fp
156 -291 mv
168 -270 lv
192 -270 lv
204 -291 lv
192 -312 lv
168 -312 lv
156 -291 lv
0.8 fp
156 -333 mv
168 -312 lv
192 -312 lv
204 -333 lv
192 -354 lv
168 -354 lv
156 -333 lv
0.8 fp
192 -312 mv
204 -291 lv
228 -291 lv
240 -312 lv
228 -333 lv
204 -333 lv
192 -312 lv
0.8 fp
144 -312 mv
15 0 fc
180 -333 mv
15 1 fc
15 cr
180 -291 mv
15 1 fc
15 cr
216 -312 mv
15 0 fc
es
bs
-24 -312 mv
-12 -291 lv
12 -291 lv
24 -312 lv
12 -333 lv
-12 -333 lv
-24 -312 lv
0.8 fp
0 -312 mv
15 1 fc
15 cr
es
stroke end showpage
%%Trailer:
%%BoundingBox: -6 -100 317 35
%%EOF

%%EndDocument
 @endspecial 0 1544 a Fs(Fig.)25 b(2.)h(Previously)c(kno)m(wn)j(1-op)s
(ening)f(results.)g(The)g(stone)h(on)g(eac)m(h)h(cell)e(indicates)g
(the)h(winner)e(with)g(p)s(erfect)0 1657 y(pla)m(y)37
b(if)f(White's)h(\014rst)f(mo)m(v)m(e)j(is)d(to)i(that)g(cell.)e(F)-8
b(or)38 b(cells)e(with)g(no)h(stone,)h(the)f(winner)e(w)m(as)j(not)f
(previously)0 1770 y(kno)m(wn.)29 b(The)h(6)p Fu(\002)p
Fs(6)g(results)e(w)m(ere)j(rep)s(orted)e(b)m(y)g(Enderton)g([9])i(and)e
(v)m(eri\014ed)g(b)m(y)g(V)-8 b(an)30 b(Rijswijc)m(k)e(b)m(y)i
(computer)0 1883 y([24].)i(The)e(7)p Fu(\002)p Fs(7)h(results)e(w)m
(ere)i(obtained)e(b)m(y)i(Y)-8 b(ang)31 b(et)g(al.)f(b)m(y)h(hand)e
([27{29].)0 2081 y Fr(exactly)34 b Fo(k)j Fr(stones)e(on)e(the)h(b)s
(oard.)g(A)g Fq(game-state)p Fr(,)f(or)g(simply)f(a)i
Fq(state)p Fr(,)g Fo(G)29 b Fr(=)h(\()p Fo(B)5 b(;)17
b(P)s(;)g(Q)p Fr(\))33 b(is)g(de\014ned)i(b)m(y)0 2201
y(sp)s(ecifying)c(a)h(b)s(oard-state)f Fo(B)5 b Fr(,)32
b(the)h(pla)m(y)m(er)f Fo(P)45 b Fr(with)32 b(the)g(next)h(mo)m(v)m(e,)
f(and)g(the)h(opp)s(onen)m(t)f Fo(Q)g Fr(of)g(pla)m(y)m(er)0
2321 y Fo(P)14 b Fr(.)36 b(In)h(the)g(de\014nition)e(of)h(game-state,)g
(notice)g(that)h(it)e(w)m(ould)i(b)s(e)g(su\016cien)m(t)g(to)f(list)g
(only)g(the)h(pla)m(y)m(er)0 2442 y(whose)e(turn)f(it)e(is)i(to)f(pla)m
(y)g(next;)i(w)m(e)g(list)d(b)s(oth)h(pla)m(y)m(ers)i(in)e(the)h
(de\014nition,)f(since)h(the)g(opp)s(onen)m(t)g(of)f(a)0
2562 y(pla)m(y)m(er)g(is)f(often)h(explicitly)d(men)m(tioned)j(in)e
(our)i(pro)s(ofs)f(and)h(discussions.)0 2732 y(W)-8 b(e)34
b(sa)m(y)h(that)e(a)g(pla)m(y)m(er)h Fq(wins)f Fr(a)g(game-state)g(if)g
(there)h(exists)g(a)g(winning)e(strategy)i(for)f(that)h(pla)m(y)m(er)g
(in)0 2853 y(that)c(game-state.)g(Hex)h(cannot)f(end)h(in)f(a)g(dra)m
(w,)h(so)f(for)g(an)m(y)h(game-state)e(exactly)i(one)g(of)e(the)i(pla)m
(y)m(ers)0 2973 y(wins)39 b(the)g(game-state.)g(The)g
Fq(value)g Fr(of)f(a)h(game-state)f(is)h(the)g(pla)m(y)m(er)g(who)g
(has)h(a)e(winning)g(strategy;)0 3093 y(th)m(us)c(for)e(an)m(y)h
(\014xed)h(b)s(oard-state)e Fo(B)37 b Fr(the)c(v)-5 b(alue)32
b(of)h Fo(G)27 b Fr(=)h(\()p Fo(B)5 b(;)17 b(P)s(;)g(Q)p
Fr(\))31 b(is)i(either)f Fo(P)46 b Fr(or)32 b Fo(Q)p
Fr(.)0 3264 y(A)c(state)h(is)f Fq(solve)-5 b(d)27 b Fr(if)g(its)h(v)-5
b(alue)27 b(is)h(kno)m(wn,)i(and)e Fq(explicitly)j(solve)-5
b(d)27 b Fr(if)g(a)h(winning)f(strategy)i(is)f(kno)m(wn.)h(As)0
3384 y(w)m(e)39 b(ha)m(v)m(e)g(already)f(remark)m(ed,)g(for)g(the)g
(empt)m(y)g(b)s(oard-state)g(on)g(arbitrarily)d(large)i(b)s(oards,)h
(Hex)h(has)0 3504 y(b)s(een)33 b(solv)m(ed)h(but)e(not)h(explicitly)d
(solv)m(ed.)0 3675 y(In)g(this)f(pap)s(er)g(w)m(e)i(presen)m(t)g(an)e
(algorithm)e(that)i(explicitly)f(solv)m(es)i(arbitrary)e(Hex)j(states.)
f(The)h(w)m(orst-)0 3795 y(case)g(running)f(time)f(of)h(our)g
(algorithm)d(is)j(exp)s(onen)m(tial)g(in)f(the)i(n)m(um)m(b)s(er)g(of)f
(cells)f(in)h(the)g(b)s(oard,)g(whic)m(h)0 3915 y(is)47
b(not)h(surprising)f(giv)m(en)h(that)g(solving)e(arbitrary)h(Hex)i
(states)f(is)g(PSP)-8 b(A)m(CE-complete)48 b([21].)g(Our)0
4036 y(algorithm)33 b(is)i(fast)h(enough)h(to)f(solv)m(e)g(7)p
Fn(\002)p Fr(7)g(states)h(in)e(a)h(reasonable)g(amoun)m(t)g(of)f(time,)
g(while)g(solving)0 4156 y(8)p Fn(\002)p Fr(8)29 b(states)h(is)e
(curren)m(tly)i(b)s(ey)m(ond)g(reac)m(h.)g(As)f(a)g(b)s(enc)m(hmark)h
(for)e(the)h(e\016ciency)i(of)d(our)h(algorithm,)d(w)m(e)0
4277 y(solv)m(e)33 b(all)d(7)p Fn(\002)p Fr(7)j(1-op)s(enings.)f
(Previously)h(kno)m(wn)g(1-op)s(ening)f(results)h(are)f(summarized)g
(in)f(Figure)h(2.)0 4447 y(In)j(solving)f(these)i(1-op)s(enings)e(our)h
(algorithm)d(constructs)k(pro)s(of-trees)f(whose)h(terminal)d(no)s(des)
i(cor-)0 4567 y(resp)s(ond)c(to)g(game-states)f(in)g(whic)m(h)h(a)g
(winning)e(virtual)h(connection)h(is)f(detected;)i(since)f(suc)m(h)h
(virtual)0 4688 y(connections)26 b(are)f(t)m(ypically)e(detected)k(man)
m(y)e(mo)m(v)m(es)h(b)s(efore)f(the)g(actual)g(end)g(of)g(the)g(game,)f
(eac)m(h)i(pro)s(of-)0 4808 y(tree)31 b(found)f(b)m(y)g(our)g
(algorithm)d(is)j(a)f(prop)s(er)h(subset)i(of)d(the)i(complete)e
(game-tree,)g(in)h(whic)m(h)g(eac)m(h)h(leaf)0 4928 y(no)s(de)k
(corresp)s(onds)h(to)f(a)f(game-state)g(in)g(whic)m(h)h(one)g(pla)m(y)m
(er)h(has)f(a)f(complete)g(winning)g(c)m(hain.)h(Since)0
5049 y(the)h(size)g(of)f(the)h(pro)s(of-trees)f(w)m(e)h(\014nd)g(can)g
(b)s(e)g(used)g(as)g(a)f(measure)h(of)f(the)h(di\016cult)m(y)f(of)g
(pla)m(ying)g(the)0 5169 y(op)s(ening)26 b(p)s(erfectly)-8
b(,)26 b(the)h(data)f(w)m(e)i(presen)m(t)g(can)f(b)s(e)f(used)i(to)e
(answ)m(er)i(the)f(t)m(w)m(o)g(questions)g(raised)f(earlier.)0
5339 y(Our)42 b(results)h(yield)e(the)i(\014rst)f(computer)g(solution)f
(of)h(an)m(y)h(Hex)g(state)f(on)g(a)g(7)p Fn(\002)p Fr(7)h(or)e(larger)
g(b)s(oard.)0 5460 y(Solving)22 b(Hex)i(states)h(on)e(5)p
Fn(\002)p Fr(5)g(or)g(smaller)f(b)s(oards)h(is)g(computationally)d
(routine;)j(for)g(larger)f(b)s(oards,)i(the)0 5580 y(problem)33
b(is)h(more)g(c)m(hallenging.)f(Enderton)i(rep)s(orted)g(the)g(v)-5
b(alues)34 b(of)h(all)d(6)p Fn(\002)p Fr(6)i(1-op)s(enings,)g(although)
1909 5912 y(3)p eop
%%Page: 4 4
4 3 bop 0 323 a Fr(with)31 b(no)g(explanation)f(of)h(ho)m(w)h(he)g
(obtained)f(his)g(results)h([9].)f(V)-8 b(an)31 b(Rijswijc)m(k)g(indep)
s(enden)m(tly)h(v)m(eri\014ed)0 443 y(these)39 b(results)g(b)m(y)g
(computer,)f(using)f(an)h(alpha-b)s(eta)f(searc)m(h)i(guided)f(b)m(y)h
(a)f(Hex-sp)s(eci\014c)h(ev)-5 b(aluation)0 564 y(function.)45
b(By)g(pro)m(viding)f(useful)h(mo)m(v)m(e)h(ordering,)e(his)h
(heuristic)f(function)h(ev)-5 b(aluation)43 b(led)i(to)g(the)0
684 y(disco)m(v)m(ery)31 b(of)d(winning)g(mo)m(v)m(es)i(so)s(oner)g
(than)f(b)m(y)h(using)e(unguided)i(searc)m(h;)g(in)e(this)h(w)m(a)m(y)
-8 b(,)30 b(his)f(algorithm)0 805 y(solv)m(ed)47 b(all)e(1-op)s(enings)
g(and)i(man)m(y)f(longer)g(op)s(enings)g([24,23].)g(As)h(this)f(metho)s
(d)g(w)m(as)i(not)e(strong)0 925 y(enough)j(to)g(solv)m(e)g(7)p
Fn(\002)p Fr(7)g(states,)h(V)-8 b(an)49 b(Rijswijc)m(k)f(further)h
(describ)s(ed)h(but)f(did)f(not)h(implemen)m(t)e(an)0
1045 y(alternativ)m(e)e(recursiv)m(e)h(algorithm)d([25].)i(Recen)m(tly)
h(Y)-8 b(ang)45 b(et)h(al.)e(solv)m(ed)i(b)m(y)g(hand)g(sev)m(eral)g(7)
p Fn(\002)p Fr(7)g(1-)0 1166 y(op)s(enings)32 b([27{29],)g(one)h(8)p
Fn(\002)p Fr(8)f(1-op)s(ening)f([26])i(and)f(one)h(9)p
Fn(\002)p Fr(9)g(1-op)s(ening)e([26].)0 1336 y(Our)45
b(algorithm)d(solv)m(es)j(an)g(arbitrary)f(Hex)i(state)f(b)m(y)h
(computing)e(a)h(winning)e(virtual)h(connection)0 1456
y(according)29 b(to)h(dynamic-state)f(comp)s(osition)e(rules.)j(F)-8
b(ollo)m(wing)27 b(the)j(recursiv)m(e)h(game-tree)e(searc)m(h)j(pro-)0
1577 y(p)s(osed)e(b)m(y)g(V)-8 b(an)29 b(Rijswijc)m(k,)g(our)g
(algorithm)d(is)j(enhanced)i(b)m(y)f(the)g(computation)d(of)i
(\014xed-state)h(virtual)0 1697 y(connections;)e(additionally)-8
b(,)23 b(some)k(new)h(Hex)g(mo)m(v)m(e)f(domination)e(and)i(\014ll-in)d
(results)j(allo)m(w)f(signi\014can)m(t)0 1817 y(pruning)32
b(of)g(the)h(game-tree.)0 1988 y(Before)e(presen)m(ting)g(our)g
(algorithm)c(in)j Fn(x)p Fr(4)h(and)g(our)f(7)p Fn(\002)p
Fr(7)h(results)g(in)f Fn(x)p Fr(5,)h(w)m(e)g(pro)m(vide)g(necessary)i
(bac)m(k-)0 2108 y(ground)g(information)c(on)j(virtual)g(connections)h
(in)f Fn(x)p Fr(2)g(and)h(domination)d(and)i(\014ll-in)e(in)i
Fn(x)p Fr(3.)0 2492 y Fp(2)112 b(Virtual)35 b(Connections)0
2782 y Fr(Roughly)-8 b(,)32 b(a)h Fq(c)-5 b(onne)g(ction)34
b(sub)-5 b(game)33 b Fr(in)f(Hex)i(is)f(a)f(subgame)i(in)e(whic)m(h)h
(one)h(of)e(the)i(pla)m(y)m(ers)g(can)f(form)f(a)0 2903
y(connection)h(b)s(et)m(w)m(een)i(t)m(w)m(o)e(sp)s(eci\014ed)h(sets)g
(of)e(cells.)g(If)h(the)g(pla)m(y)m(er)g(can)g(connect)h(the)f(t)m(w)m
(o)h(sets)g(ev)m(en)g(if)0 3023 y(the)28 b(opp)s(onen)m(t)h(mo)m(v)m
(es)g(\014rst,)g(the)f(connection)g(subgame)g(is)g(called)f(a)g
Fq(virtual)k(c)-5 b(onne)g(ction)p Fr(;)27 b(if)g(the)i(pla)m(y)m(er)0
3143 y(m)m(ust)38 b(ha)m(v)m(e)h(the)f(\014rst)g(mo)m(v)m(e)g(in)f
(order)h(to)f(guaran)m(tee)i(the)f(connection,)g(the)g(connection)g
(subgame)f(is)0 3264 y(called)31 b(a)i Fq(we)-5 b(ak)34
b(c)-5 b(onne)g(ction)31 b Fr(or)h(a)h(virtual)e(semiconnection.)0
3434 y(W)-8 b(e)45 b(no)m(w)h(de\014ne)g(these)g(terms)f(more)f
(formally)-8 b(.)42 b(Our)j(de\014nitions)f(are)h(essen)m(tially)g
(those)g(from)f([3],)0 3554 y(although)31 b(our)i(notation)e(is)h
(sligh)m(tly)f(di\013eren)m(t.)0 3724 y(W)-8 b(e)40 b(consider)f(eac)m
(h)i(of)e(the)g(four)g(b)s(oundary)h(sides)g(of)f(the)h(b)s(oard)f(as)g
(an)g(o)s(ccupied)h(set)g(of)f(cells.)g(Let)0 3845 y
Fo(S;)17 b(X)r(;)g(Y)47 b Fr(b)s(e)25 b(pairwise)g(non-in)m(tersecting)
g(sets)h(of)f(cells)g(suc)m(h)h(that)f(the)h(cell)e(set)i(forming)d
Fo(X)33 b Fr(is)25 b(connected)0 3965 y(\(namely)-8 b(,)41
b(for)h(an)m(y)h(t)m(w)m(o)g(cells)e(in)g Fo(X)8 b Fr(,)42
b(there)h(is)f(a)g(cell-to-cell)d(path)j(that)g(sta)m(ys)h(in)f
Fo(X)8 b Fr(\),)42 b(the)g(cell)f(set)0 4086 y(forming)28
b Fo(Y)52 b Fr(is)30 b(connected,)i(and)f(all)d(cells)i(in)g
Fo(S)36 b Fr(are)31 b(uno)s(ccupied.)g(A)f Fo(P)14 b
Fr(-stone)30 b(is)g(a)h(stone)g(b)s(elonging)d(to)0 4206
y Fo(P)14 b Fr(.)33 b(F)-8 b(or)33 b(a)g(\014xed)i(b)s(oard-state)e
Fo(B)38 b Fr(and)c(a)f(pla)m(y)m(er)h Fo(P)14 b Fr(,)33
b(the)h Fq(sub)-5 b(game)32 b Fo(P)14 b Fr(\()p Fo(B)5
b Fr(:)p Fo(X)j Fr(,)p Fo(S)e Fr(,)p Fo(Y)21 b Fr(\))33
b(is)g(the)h(game)f(of)g(Hex)0 4326 y(restricted)i(to)g(pla)m(ying)f
(in)g Fo(S)6 b Fr(,)35 b(where)h Fo(P)48 b Fr(wins)35
b(b)m(y)h(forming)d(a)i(c)m(hain)g(of)f Fo(P)14 b Fr(-stones)35
b(connecting)g Fo(X)43 b Fr(and)0 4447 y Fo(Y)21 b Fr(.)40
b Fo(P)14 b Fr(\()p Fo(B)5 b Fr(:)p Fo(X)j Fr(,)p Fo(S)e
Fr(,)p Fo(Y)21 b Fr(\))39 b(is)h(a)f Fq(we)-5 b(ak)41
b(c)-5 b(onne)g(ction)40 b(for)h Fo(P)53 b Fr(if)39 b
Fo(P)53 b Fr(has)40 b(a)f(winning)g(strategy)h(for)g(this)f(subgame)0
4567 y(assuming)34 b(that)g Fo(P)48 b Fr(pla)m(ys)34
b(\014rst,)h(and)g(a)f Fq(virtual)j(c)-5 b(onne)g(ction)35
b(for)h Fo(P)48 b Fr(if)33 b Fo(P)48 b Fr(has)35 b(a)f(winning)f
(strategy)i(for)0 4688 y(this)g(subgame)g(ev)m(en)i(if)d
Fo(P)14 b Fr('s)35 b(opp)s(onen)m(t)h(pla)m(ys)f(\014rst.)h(F)-8
b(or)34 b(a)h(virtual)f(connection)h(or)g(w)m(eak)i(connection)0
4808 y Fo(P)14 b Fr(\()p Fo(B)5 b Fr(:)p Fo(X)j Fr(,)p
Fo(S)e Fr(,)p Fo(Y)21 b Fr(\),)32 b Fo(S)39 b Fr(and)32
b Fo(X)r(;)17 b(Y)54 b Fr(are)33 b(usually)e(referred)j(to)e(as)h(the)g
Fq(c)-5 b(arrier)32 b Fr(and)h Fq(ends)f Fr(resp)s(ectiv)m(ely)-8
b(.)0 4978 y(These)39 b(notions)e(are)g(illustrated)e(in)i(Figure)f(3.)
h(F)-8 b(or)37 b(example,)f(the)i(leftmost)e(diagram)f(in)i(this)g
(\014gure)0 5098 y(sho)m(ws)g(a)f(Blac)m(k)g(w)m(eak)h(connection)f(b)s
(et)m(w)m(een)i(the)e(blac)m(k)g(stone)h(and)f(the)g(b)s(ottom-righ)m
(t)d(side:)j(if)f(eac)m(h)0 5219 y(of)44 b(the)h(dotted)f(cells)g(is)g
(uno)s(ccupied)g(and)h(it)e(is)h(Blac)m(k's)h(turn)f(to)g(mo)m(v)m(e,)h
(then)g(Blac)m(k)f(can)h(force)f(a)0 5339 y(connection)38
b(b)m(y)g(mo)m(ving)e(to)h(the)h(white-dotted)f(cell.)f(The)j(next)f(t)
m(w)m(o)g(diagrams)d(in)i(this)g(\014gure)h(sho)m(w)0
5460 y(t)m(w)m(o)32 b(more)f(Blac)m(k)g(w)m(eak)i(connections.)f
(Notice)f(that)g(the)h(common)e(in)m(tersection)i(of)e(the)i(cell)f
(sets)h(that)0 5580 y(form)g(these)j(three)g(Blac)m(k)e(w)m(eak)i
(connections)f(is)g(empt)m(y)-8 b(.)34 b(This)f(implies)f(that)h(the)h
(union)f(of)g(the)h(three)1909 5912 y(4)p eop
%%Page: 5 5
5 4 bop 538 640 a @beginspecial -4 @llx -24 @lly 332
@urx 24 @ury 3360 @rwi @setspecial
%%BeginDocument: ppr.ps3
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: (atend)
%%Title: TeXdraw drawing: ppr.ps3
%%Pages: 1
%%Creator: 1995/12/19 TeXdraw V2R0
%%CreationDate: 2006/4/25
50 dict begin
/mv {stroke moveto} def
/lv {lineto} def
/st {currentpoint stroke moveto} def
/sl {st setlinewidth} def
/sd {st 0 setdash} def
/sg {st setgray} def
/bs {gsave} def /es {stroke grestore} def
/fl {gsave setgray fill grestore
 currentpoint newpath moveto} def
/fp {gsave setgray fill grestore st} def
/cv {curveto} def
/cr {gsave currentpoint newpath 3 -1 roll 0 360 arc
 stroke grestore} def
/fc {gsave setgray currentpoint newpath
 3 -1 roll 0 360 arc fill grestore} def
/ar {gsave currentpoint newpath 5 2 roll arc stroke grestore} def
/el {gsave /svm matrix currentmatrix def
 currentpoint translate scale newpath 0 0 1 0 360 arc
 svm setmatrix stroke grestore} def
/fe {gsave setgray currentpoint translate scale newpath
 0 0 1 0 360 arc fill grestore} def
/av {/hhwid exch 2 div def /hlen exch def
 /ah exch def /tipy exch def /tipx exch def
 currentpoint /taily exch def /tailx exch def
 /dx tipx tailx sub def /dy tipy taily sub def
 /alen dx dx mul dy dy mul add sqrt def
 /blen alen hlen sub def
 gsave tailx taily translate dy dx atan rotate
 (V) ah ne {blen 0 gt {blen 0 lineto} if} {alen 0 lineto} ifelse
 stroke blen hhwid neg moveto alen 0 lineto blen hhwid lineto
 (T) ah eq {closepath} if
 (W) ah eq {gsave 1 setgray fill grestore closepath} if
 (F) ah eq {fill} {stroke} ifelse
 grestore tipx tipy moveto} def
0.24 0.24 scale
1 setlinecap 1 setlinejoin
3 setlinewidth [] 0 setdash
0 0 moveto
0 sl
bs
-16 0 mv
-8 14 lv
8 14 lv
16 0 lv
8 -14 lv
-8 -14 lv
-16 0 lv
0.8 fp
8 14 mv
16 28 lv
32 28 lv
40 14 lv
32 0 lv
16 0 lv
8 14 lv
0.8 fp
32 28 mv
40 42 lv
56 42 lv
64 28 lv
56 14 lv
40 14 lv
32 28 lv
0.8 fp
56 42 mv
64 56 lv
80 56 lv
88 42 lv
80 28 lv
64 28 lv
56 42 lv
0.8 fp
80 56 mv
88 70 lv
104 70 lv
112 56 lv
104 42 lv
88 42 lv
80 56 lv
0.8 fp
104 70 mv
112 84 lv
128 84 lv
136 70 lv
128 56 lv
112 56 lv
104 70 lv
0.8 fp
128 84 mv
136 98 lv
152 98 lv
160 84 lv
152 70 lv
136 70 lv
128 84 lv
0.8 fp
8 -14 mv
16 0 lv
32 0 lv
40 -14 lv
32 -28 lv
16 -28 lv
8 -14 lv
0.8 fp
32 0 mv
40 14 lv
56 14 lv
64 0 lv
56 -14 lv
40 -14 lv
32 0 lv
0.8 fp
56 14 mv
64 28 lv
80 28 lv
88 14 lv
80 0 lv
64 0 lv
56 14 lv
0.8 fp
80 28 mv
88 42 lv
104 42 lv
112 28 lv
104 14 lv
88 14 lv
80 28 lv
0.8 fp
104 42 mv
112 56 lv
128 56 lv
136 42 lv
128 28 lv
112 28 lv
104 42 lv
0.8 fp
128 56 mv
136 70 lv
152 70 lv
160 56 lv
152 42 lv
136 42 lv
128 56 lv
0.8 fp
152 70 mv
160 84 lv
176 84 lv
184 70 lv
176 56 lv
160 56 lv
152 70 lv
0.8 fp
32 -28 mv
40 -14 lv
56 -14 lv
64 -28 lv
56 -42 lv
40 -42 lv
32 -28 lv
0.8 fp
56 -14 mv
64 0 lv
80 0 lv
88 -14 lv
80 -28 lv
64 -28 lv
56 -14 lv
0.8 fp
80 0 mv
88 14 lv
104 14 lv
112 0 lv
104 -14 lv
88 -14 lv
80 0 lv
0.8 fp
104 14 mv
112 28 lv
128 28 lv
136 14 lv
128 0 lv
112 0 lv
104 14 lv
0.8 fp
128 28 mv
136 42 lv
152 42 lv
160 28 lv
152 14 lv
136 14 lv
128 28 lv
0.8 fp
152 42 mv
160 56 lv
176 56 lv
184 42 lv
176 28 lv
160 28 lv
152 42 lv
0.8 fp
176 56 mv
184 70 lv
200 70 lv
208 56 lv
200 42 lv
184 42 lv
176 56 lv
0.8 fp
56 -42 mv
64 -28 lv
80 -28 lv
88 -42 lv
80 -56 lv
64 -56 lv
56 -42 lv
0.8 fp
80 -28 mv
88 -14 lv
104 -14 lv
112 -28 lv
104 -42 lv
88 -42 lv
80 -28 lv
0.8 fp
104 -14 mv
112 0 lv
128 0 lv
136 -14 lv
128 -28 lv
112 -28 lv
104 -14 lv
0.8 fp
128 0 mv
136 14 lv
152 14 lv
160 0 lv
152 -14 lv
136 -14 lv
128 0 lv
0.8 fp
152 14 mv
160 28 lv
176 28 lv
184 14 lv
176 0 lv
160 0 lv
152 14 lv
0.8 fp
176 28 mv
184 42 lv
200 42 lv
208 28 lv
200 14 lv
184 14 lv
176 28 lv
0.8 fp
200 42 mv
208 56 lv
224 56 lv
232 42 lv
224 28 lv
208 28 lv
200 42 lv
0.8 fp
80 -56 mv
88 -42 lv
104 -42 lv
112 -56 lv
104 -70 lv
88 -70 lv
80 -56 lv
0.8 fp
104 -42 mv
112 -28 lv
128 -28 lv
136 -42 lv
128 -56 lv
112 -56 lv
104 -42 lv
0.8 fp
128 -28 mv
136 -14 lv
152 -14 lv
160 -28 lv
152 -42 lv
136 -42 lv
128 -28 lv
0.8 fp
152 -14 mv
160 0 lv
176 0 lv
184 -14 lv
176 -28 lv
160 -28 lv
152 -14 lv
0.8 fp
176 0 mv
184 14 lv
200 14 lv
208 0 lv
200 -14 lv
184 -14 lv
176 0 lv
0.8 fp
200 14 mv
208 28 lv
224 28 lv
232 14 lv
224 0 lv
208 0 lv
200 14 lv
0.8 fp
224 28 mv
232 42 lv
248 42 lv
256 28 lv
248 14 lv
232 14 lv
224 28 lv
0.8 fp
104 -70 mv
112 -56 lv
128 -56 lv
136 -70 lv
128 -84 lv
112 -84 lv
104 -70 lv
0.8 fp
128 -56 mv
136 -42 lv
152 -42 lv
160 -56 lv
152 -70 lv
136 -70 lv
128 -56 lv
0.8 fp
152 -42 mv
160 -28 lv
176 -28 lv
184 -42 lv
176 -56 lv
160 -56 lv
152 -42 lv
0.8 fp
176 -28 mv
184 -14 lv
200 -14 lv
208 -28 lv
200 -42 lv
184 -42 lv
176 -28 lv
0.8 fp
200 -14 mv
208 0 lv
224 0 lv
232 -14 lv
224 -28 lv
208 -28 lv
200 -14 lv
0.8 fp
224 0 mv
232 14 lv
248 14 lv
256 0 lv
248 -14 lv
232 -14 lv
224 0 lv
0.8 fp
248 14 mv
256 28 lv
272 28 lv
280 14 lv
272 0 lv
256 0 lv
248 14 lv
0.8 fp
128 -84 mv
136 -70 lv
152 -70 lv
160 -84 lv
152 -98 lv
136 -98 lv
128 -84 lv
0.8 fp
152 -70 mv
160 -56 lv
176 -56 lv
184 -70 lv
176 -84 lv
160 -84 lv
152 -70 lv
0.8 fp
176 -56 mv
184 -42 lv
200 -42 lv
208 -56 lv
200 -70 lv
184 -70 lv
176 -56 lv
0.8 fp
200 -42 mv
208 -28 lv
224 -28 lv
232 -42 lv
224 -56 lv
208 -56 lv
200 -42 lv
0.8 fp
224 -28 mv
232 -14 lv
248 -14 lv
256 -28 lv
248 -42 lv
232 -42 lv
224 -28 lv
0.8 fp
248 -14 mv
256 0 lv
272 0 lv
280 -14 lv
272 -28 lv
256 -28 lv
248 -14 lv
0.8 fp
272 0 mv
280 14 lv
296 14 lv
304 0 lv
296 -14 lv
280 -14 lv
272 0 lv
0.8 fp
0 84 mv
10 0 fc
0 -84 mv
10 1 fc
10 cr
288 -84 mv
10 0 fc
288 84 mv
10 1 fc
10 cr
168 14 mv
10 0 fc
168 -14 mv
4 0 fc
192 0 mv
4 1 fc
4 cr
216 14 mv
4 0 fc
168 -42 mv
4 0 fc
192 -28 mv
4 0 fc
216 -14 mv
4 0 fc
240 0 mv
4 0 fc
168 -70 mv
4 0 fc
192 -56 mv
4 0 fc
240 -28 mv
4 0 fc
264 -14 mv
4 0 fc
es
bs
344 0 mv
352 14 lv
368 14 lv
376 0 lv
368 -14 lv
352 -14 lv
344 0 lv
0.8 fp
368 14 mv
376 28 lv
392 28 lv
400 14 lv
392 0 lv
376 0 lv
368 14 lv
0.8 fp
392 28 mv
400 42 lv
416 42 lv
424 28 lv
416 14 lv
400 14 lv
392 28 lv
0.8 fp
416 42 mv
424 56 lv
440 56 lv
448 42 lv
440 28 lv
424 28 lv
416 42 lv
0.8 fp
440 56 mv
448 70 lv
464 70 lv
472 56 lv
464 42 lv
448 42 lv
440 56 lv
0.8 fp
464 70 mv
472 84 lv
488 84 lv
496 70 lv
488 56 lv
472 56 lv
464 70 lv
0.8 fp
488 84 mv
496 98 lv
512 98 lv
520 84 lv
512 70 lv
496 70 lv
488 84 lv
0.8 fp
368 -14 mv
376 0 lv
392 0 lv
400 -14 lv
392 -28 lv
376 -28 lv
368 -14 lv
0.8 fp
392 0 mv
400 14 lv
416 14 lv
424 0 lv
416 -14 lv
400 -14 lv
392 0 lv
0.8 fp
416 14 mv
424 28 lv
440 28 lv
448 14 lv
440 0 lv
424 0 lv
416 14 lv
0.8 fp
440 28 mv
448 42 lv
464 42 lv
472 28 lv
464 14 lv
448 14 lv
440 28 lv
0.8 fp
464 42 mv
472 56 lv
488 56 lv
496 42 lv
488 28 lv
472 28 lv
464 42 lv
0.8 fp
488 56 mv
496 70 lv
512 70 lv
520 56 lv
512 42 lv
496 42 lv
488 56 lv
0.8 fp
512 70 mv
520 84 lv
536 84 lv
544 70 lv
536 56 lv
520 56 lv
512 70 lv
0.8 fp
392 -28 mv
400 -14 lv
416 -14 lv
424 -28 lv
416 -42 lv
400 -42 lv
392 -28 lv
0.8 fp
416 -14 mv
424 0 lv
440 0 lv
448 -14 lv
440 -28 lv
424 -28 lv
416 -14 lv
0.8 fp
440 0 mv
448 14 lv
464 14 lv
472 0 lv
464 -14 lv
448 -14 lv
440 0 lv
0.8 fp
464 14 mv
472 28 lv
488 28 lv
496 14 lv
488 0 lv
472 0 lv
464 14 lv
0.8 fp
488 28 mv
496 42 lv
512 42 lv
520 28 lv
512 14 lv
496 14 lv
488 28 lv
0.8 fp
512 42 mv
520 56 lv
536 56 lv
544 42 lv
536 28 lv
520 28 lv
512 42 lv
0.8 fp
536 56 mv
544 70 lv
560 70 lv
568 56 lv
560 42 lv
544 42 lv
536 56 lv
0.8 fp
416 -42 mv
424 -28 lv
440 -28 lv
448 -42 lv
440 -56 lv
424 -56 lv
416 -42 lv
0.8 fp
440 -28 mv
448 -14 lv
464 -14 lv
472 -28 lv
464 -42 lv
448 -42 lv
440 -28 lv
0.8 fp
464 -14 mv
472 0 lv
488 0 lv
496 -14 lv
488 -28 lv
472 -28 lv
464 -14 lv
0.8 fp
488 0 mv
496 14 lv
512 14 lv
520 0 lv
512 -14 lv
496 -14 lv
488 0 lv
0.8 fp
512 14 mv
520 28 lv
536 28 lv
544 14 lv
536 0 lv
520 0 lv
512 14 lv
0.8 fp
536 28 mv
544 42 lv
560 42 lv
568 28 lv
560 14 lv
544 14 lv
536 28 lv
0.8 fp
560 42 mv
568 56 lv
584 56 lv
592 42 lv
584 28 lv
568 28 lv
560 42 lv
0.8 fp
440 -56 mv
448 -42 lv
464 -42 lv
472 -56 lv
464 -70 lv
448 -70 lv
440 -56 lv
0.8 fp
464 -42 mv
472 -28 lv
488 -28 lv
496 -42 lv
488 -56 lv
472 -56 lv
464 -42 lv
0.8 fp
488 -28 mv
496 -14 lv
512 -14 lv
520 -28 lv
512 -42 lv
496 -42 lv
488 -28 lv
0.8 fp
512 -14 mv
520 0 lv
536 0 lv
544 -14 lv
536 -28 lv
520 -28 lv
512 -14 lv
0.8 fp
536 0 mv
544 14 lv
560 14 lv
568 0 lv
560 -14 lv
544 -14 lv
536 0 lv
0.8 fp
560 14 mv
568 28 lv
584 28 lv
592 14 lv
584 0 lv
568 0 lv
560 14 lv
0.8 fp
584 28 mv
592 42 lv
608 42 lv
616 28 lv
608 14 lv
592 14 lv
584 28 lv
0.8 fp
464 -70 mv
472 -56 lv
488 -56 lv
496 -70 lv
488 -84 lv
472 -84 lv
464 -70 lv
0.8 fp
488 -56 mv
496 -42 lv
512 -42 lv
520 -56 lv
512 -70 lv
496 -70 lv
488 -56 lv
0.8 fp
512 -42 mv
520 -28 lv
536 -28 lv
544 -42 lv
536 -56 lv
520 -56 lv
512 -42 lv
0.8 fp
536 -28 mv
544 -14 lv
560 -14 lv
568 -28 lv
560 -42 lv
544 -42 lv
536 -28 lv
0.8 fp
560 -14 mv
568 0 lv
584 0 lv
592 -14 lv
584 -28 lv
568 -28 lv
560 -14 lv
0.8 fp
584 0 mv
592 14 lv
608 14 lv
616 0 lv
608 -14 lv
592 -14 lv
584 0 lv
0.8 fp
608 14 mv
616 28 lv
632 28 lv
640 14 lv
632 0 lv
616 0 lv
608 14 lv
0.8 fp
488 -84 mv
496 -70 lv
512 -70 lv
520 -84 lv
512 -98 lv
496 -98 lv
488 -84 lv
0.8 fp
512 -70 mv
520 -56 lv
536 -56 lv
544 -70 lv
536 -84 lv
520 -84 lv
512 -70 lv
0.8 fp
536 -56 mv
544 -42 lv
560 -42 lv
568 -56 lv
560 -70 lv
544 -70 lv
536 -56 lv
0.8 fp
560 -42 mv
568 -28 lv
584 -28 lv
592 -42 lv
584 -56 lv
568 -56 lv
560 -42 lv
0.8 fp
584 -28 mv
592 -14 lv
608 -14 lv
616 -28 lv
608 -42 lv
592 -42 lv
584 -28 lv
0.8 fp
608 -14 mv
616 0 lv
632 0 lv
640 -14 lv
632 -28 lv
616 -28 lv
608 -14 lv
0.8 fp
632 0 mv
640 14 lv
656 14 lv
664 0 lv
656 -14 lv
640 -14 lv
632 0 lv
0.8 fp
528 14 mv
10 0 fc
504 -28 mv
4 0 fc
528 -14 mv
4 1 fc
4 cr
504 -56 mv
4 0 fc
528 -42 mv
4 0 fc
552 -28 mv
4 0 fc
504 -84 mv
4 0 fc
528 -70 mv
4 0 fc
552 -56 mv
4 0 fc
576 -42 mv
4 0 fc
es
bs
704 0 mv
712 14 lv
728 14 lv
736 0 lv
728 -14 lv
712 -14 lv
704 0 lv
0.8 fp
728 14 mv
736 28 lv
752 28 lv
760 14 lv
752 0 lv
736 0 lv
728 14 lv
0.8 fp
752 28 mv
760 42 lv
776 42 lv
784 28 lv
776 14 lv
760 14 lv
752 28 lv
0.8 fp
776 42 mv
784 56 lv
800 56 lv
808 42 lv
800 28 lv
784 28 lv
776 42 lv
0.8 fp
800 56 mv
808 70 lv
824 70 lv
832 56 lv
824 42 lv
808 42 lv
800 56 lv
0.8 fp
824 70 mv
832 84 lv
848 84 lv
856 70 lv
848 56 lv
832 56 lv
824 70 lv
0.8 fp
848 84 mv
856 98 lv
872 98 lv
880 84 lv
872 70 lv
856 70 lv
848 84 lv
0.8 fp
728 -14 mv
736 0 lv
752 0 lv
760 -14 lv
752 -28 lv
736 -28 lv
728 -14 lv
0.8 fp
752 0 mv
760 14 lv
776 14 lv
784 0 lv
776 -14 lv
760 -14 lv
752 0 lv
0.8 fp
776 14 mv
784 28 lv
800 28 lv
808 14 lv
800 0 lv
784 0 lv
776 14 lv
0.8 fp
800 28 mv
808 42 lv
824 42 lv
832 28 lv
824 14 lv
808 14 lv
800 28 lv
0.8 fp
824 42 mv
832 56 lv
848 56 lv
856 42 lv
848 28 lv
832 28 lv
824 42 lv
0.8 fp
848 56 mv
856 70 lv
872 70 lv
880 56 lv
872 42 lv
856 42 lv
848 56 lv
0.8 fp
872 70 mv
880 84 lv
896 84 lv
904 70 lv
896 56 lv
880 56 lv
872 70 lv
0.8 fp
752 -28 mv
760 -14 lv
776 -14 lv
784 -28 lv
776 -42 lv
760 -42 lv
752 -28 lv
0.8 fp
776 -14 mv
784 0 lv
800 0 lv
808 -14 lv
800 -28 lv
784 -28 lv
776 -14 lv
0.8 fp
800 0 mv
808 14 lv
824 14 lv
832 0 lv
824 -14 lv
808 -14 lv
800 0 lv
0.8 fp
824 14 mv
832 28 lv
848 28 lv
856 14 lv
848 0 lv
832 0 lv
824 14 lv
0.8 fp
848 28 mv
856 42 lv
872 42 lv
880 28 lv
872 14 lv
856 14 lv
848 28 lv
0.8 fp
872 42 mv
880 56 lv
896 56 lv
904 42 lv
896 28 lv
880 28 lv
872 42 lv
0.8 fp
896 56 mv
904 70 lv
920 70 lv
928 56 lv
920 42 lv
904 42 lv
896 56 lv
0.8 fp
776 -42 mv
784 -28 lv
800 -28 lv
808 -42 lv
800 -56 lv
784 -56 lv
776 -42 lv
0.8 fp
800 -28 mv
808 -14 lv
824 -14 lv
832 -28 lv
824 -42 lv
808 -42 lv
800 -28 lv
0.8 fp
824 -14 mv
832 0 lv
848 0 lv
856 -14 lv
848 -28 lv
832 -28 lv
824 -14 lv
0.8 fp
848 0 mv
856 14 lv
872 14 lv
880 0 lv
872 -14 lv
856 -14 lv
848 0 lv
0.8 fp
872 14 mv
880 28 lv
896 28 lv
904 14 lv
896 0 lv
880 0 lv
872 14 lv
0.8 fp
896 28 mv
904 42 lv
920 42 lv
928 28 lv
920 14 lv
904 14 lv
896 28 lv
0.8 fp
920 42 mv
928 56 lv
944 56 lv
952 42 lv
944 28 lv
928 28 lv
920 42 lv
0.8 fp
800 -56 mv
808 -42 lv
824 -42 lv
832 -56 lv
824 -70 lv
808 -70 lv
800 -56 lv
0.8 fp
824 -42 mv
832 -28 lv
848 -28 lv
856 -42 lv
848 -56 lv
832 -56 lv
824 -42 lv
0.8 fp
848 -28 mv
856 -14 lv
872 -14 lv
880 -28 lv
872 -42 lv
856 -42 lv
848 -28 lv
0.8 fp
872 -14 mv
880 0 lv
896 0 lv
904 -14 lv
896 -28 lv
880 -28 lv
872 -14 lv
0.8 fp
896 0 mv
904 14 lv
920 14 lv
928 0 lv
920 -14 lv
904 -14 lv
896 0 lv
0.8 fp
920 14 mv
928 28 lv
944 28 lv
952 14 lv
944 0 lv
928 0 lv
920 14 lv
0.8 fp
944 28 mv
952 42 lv
968 42 lv
976 28 lv
968 14 lv
952 14 lv
944 28 lv
0.8 fp
824 -70 mv
832 -56 lv
848 -56 lv
856 -70 lv
848 -84 lv
832 -84 lv
824 -70 lv
0.8 fp
848 -56 mv
856 -42 lv
872 -42 lv
880 -56 lv
872 -70 lv
856 -70 lv
848 -56 lv
0.8 fp
872 -42 mv
880 -28 lv
896 -28 lv
904 -42 lv
896 -56 lv
880 -56 lv
872 -42 lv
0.8 fp
896 -28 mv
904 -14 lv
920 -14 lv
928 -28 lv
920 -42 lv
904 -42 lv
896 -28 lv
0.8 fp
920 -14 mv
928 0 lv
944 0 lv
952 -14 lv
944 -28 lv
928 -28 lv
920 -14 lv
0.8 fp
944 0 mv
952 14 lv
968 14 lv
976 0 lv
968 -14 lv
952 -14 lv
944 0 lv
0.8 fp
968 14 mv
976 28 lv
992 28 lv
1000 14 lv
992 0 lv
976 0 lv
968 14 lv
0.8 fp
848 -84 mv
856 -70 lv
872 -70 lv
880 -84 lv
872 -98 lv
856 -98 lv
848 -84 lv
0.8 fp
872 -70 mv
880 -56 lv
896 -56 lv
904 -70 lv
896 -84 lv
880 -84 lv
872 -70 lv
0.8 fp
896 -56 mv
904 -42 lv
920 -42 lv
928 -56 lv
920 -70 lv
904 -70 lv
896 -56 lv
0.8 fp
920 -42 mv
928 -28 lv
944 -28 lv
952 -42 lv
944 -56 lv
928 -56 lv
920 -42 lv
0.8 fp
944 -28 mv
952 -14 lv
968 -14 lv
976 -28 lv
968 -42 lv
952 -42 lv
944 -28 lv
0.8 fp
968 -14 mv
976 0 lv
992 0 lv
1000 -14 lv
992 -28 lv
976 -28 lv
968 -14 lv
0.8 fp
992 0 mv
1000 14 lv
1016 14 lv
1024 0 lv
1016 -14 lv
1000 -14 lv
992 0 lv
0.8 fp
888 14 mv
10 0 fc
912 28 mv
4 0 fc
912 0 mv
4 0 fc
936 14 mv
4 1 fc
4 cr
960 28 mv
4 0 fc
936 -14 mv
4 0 fc
960 0 mv
4 0 fc
984 14 mv
4 0 fc
936 -42 mv
4 0 fc
960 -28 mv
4 0 fc
984 -14 mv
4 0 fc
1008 0 mv
4 0 fc
es
bs
1064 0 mv
1072 14 lv
1088 14 lv
1096 0 lv
1088 -14 lv
1072 -14 lv
1064 0 lv
0.8 fp
1088 14 mv
1096 28 lv
1112 28 lv
1120 14 lv
1112 0 lv
1096 0 lv
1088 14 lv
0.8 fp
1112 28 mv
1120 42 lv
1136 42 lv
1144 28 lv
1136 14 lv
1120 14 lv
1112 28 lv
0.8 fp
1136 42 mv
1144 56 lv
1160 56 lv
1168 42 lv
1160 28 lv
1144 28 lv
1136 42 lv
0.8 fp
1160 56 mv
1168 70 lv
1184 70 lv
1192 56 lv
1184 42 lv
1168 42 lv
1160 56 lv
0.8 fp
1184 70 mv
1192 84 lv
1208 84 lv
1216 70 lv
1208 56 lv
1192 56 lv
1184 70 lv
0.8 fp
1208 84 mv
1216 98 lv
1232 98 lv
1240 84 lv
1232 70 lv
1216 70 lv
1208 84 lv
0.8 fp
1088 -14 mv
1096 0 lv
1112 0 lv
1120 -14 lv
1112 -28 lv
1096 -28 lv
1088 -14 lv
0.8 fp
1112 0 mv
1120 14 lv
1136 14 lv
1144 0 lv
1136 -14 lv
1120 -14 lv
1112 0 lv
0.8 fp
1136 14 mv
1144 28 lv
1160 28 lv
1168 14 lv
1160 0 lv
1144 0 lv
1136 14 lv
0.8 fp
1160 28 mv
1168 42 lv
1184 42 lv
1192 28 lv
1184 14 lv
1168 14 lv
1160 28 lv
0.8 fp
1184 42 mv
1192 56 lv
1208 56 lv
1216 42 lv
1208 28 lv
1192 28 lv
1184 42 lv
0.8 fp
1208 56 mv
1216 70 lv
1232 70 lv
1240 56 lv
1232 42 lv
1216 42 lv
1208 56 lv
0.8 fp
1232 70 mv
1240 84 lv
1256 84 lv
1264 70 lv
1256 56 lv
1240 56 lv
1232 70 lv
0.8 fp
1112 -28 mv
1120 -14 lv
1136 -14 lv
1144 -28 lv
1136 -42 lv
1120 -42 lv
1112 -28 lv
0.8 fp
1136 -14 mv
1144 0 lv
1160 0 lv
1168 -14 lv
1160 -28 lv
1144 -28 lv
1136 -14 lv
0.8 fp
1160 0 mv
1168 14 lv
1184 14 lv
1192 0 lv
1184 -14 lv
1168 -14 lv
1160 0 lv
0.8 fp
1184 14 mv
1192 28 lv
1208 28 lv
1216 14 lv
1208 0 lv
1192 0 lv
1184 14 lv
0.8 fp
1208 28 mv
1216 42 lv
1232 42 lv
1240 28 lv
1232 14 lv
1216 14 lv
1208 28 lv
0.8 fp
1232 42 mv
1240 56 lv
1256 56 lv
1264 42 lv
1256 28 lv
1240 28 lv
1232 42 lv
0.8 fp
1256 56 mv
1264 70 lv
1280 70 lv
1288 56 lv
1280 42 lv
1264 42 lv
1256 56 lv
0.8 fp
1136 -42 mv
1144 -28 lv
1160 -28 lv
1168 -42 lv
1160 -56 lv
1144 -56 lv
1136 -42 lv
0.8 fp
1160 -28 mv
1168 -14 lv
1184 -14 lv
1192 -28 lv
1184 -42 lv
1168 -42 lv
1160 -28 lv
0.8 fp
1184 -14 mv
1192 0 lv
1208 0 lv
1216 -14 lv
1208 -28 lv
1192 -28 lv
1184 -14 lv
0.8 fp
1208 0 mv
1216 14 lv
1232 14 lv
1240 0 lv
1232 -14 lv
1216 -14 lv
1208 0 lv
0.8 fp
1232 14 mv
1240 28 lv
1256 28 lv
1264 14 lv
1256 0 lv
1240 0 lv
1232 14 lv
0.8 fp
1256 28 mv
1264 42 lv
1280 42 lv
1288 28 lv
1280 14 lv
1264 14 lv
1256 28 lv
0.8 fp
1280 42 mv
1288 56 lv
1304 56 lv
1312 42 lv
1304 28 lv
1288 28 lv
1280 42 lv
0.8 fp
1160 -56 mv
1168 -42 lv
1184 -42 lv
1192 -56 lv
1184 -70 lv
1168 -70 lv
1160 -56 lv
0.8 fp
1184 -42 mv
1192 -28 lv
1208 -28 lv
1216 -42 lv
1208 -56 lv
1192 -56 lv
1184 -42 lv
0.8 fp
1208 -28 mv
1216 -14 lv
1232 -14 lv
1240 -28 lv
1232 -42 lv
1216 -42 lv
1208 -28 lv
0.8 fp
1232 -14 mv
1240 0 lv
1256 0 lv
1264 -14 lv
1256 -28 lv
1240 -28 lv
1232 -14 lv
0.8 fp
1256 0 mv
1264 14 lv
1280 14 lv
1288 0 lv
1280 -14 lv
1264 -14 lv
1256 0 lv
0.8 fp
1280 14 mv
1288 28 lv
1304 28 lv
1312 14 lv
1304 0 lv
1288 0 lv
1280 14 lv
0.8 fp
1304 28 mv
1312 42 lv
1328 42 lv
1336 28 lv
1328 14 lv
1312 14 lv
1304 28 lv
0.8 fp
1184 -70 mv
1192 -56 lv
1208 -56 lv
1216 -70 lv
1208 -84 lv
1192 -84 lv
1184 -70 lv
0.8 fp
1208 -56 mv
1216 -42 lv
1232 -42 lv
1240 -56 lv
1232 -70 lv
1216 -70 lv
1208 -56 lv
0.8 fp
1232 -42 mv
1240 -28 lv
1256 -28 lv
1264 -42 lv
1256 -56 lv
1240 -56 lv
1232 -42 lv
0.8 fp
1256 -28 mv
1264 -14 lv
1280 -14 lv
1288 -28 lv
1280 -42 lv
1264 -42 lv
1256 -28 lv
0.8 fp
1280 -14 mv
1288 0 lv
1304 0 lv
1312 -14 lv
1304 -28 lv
1288 -28 lv
1280 -14 lv
0.8 fp
1304 0 mv
1312 14 lv
1328 14 lv
1336 0 lv
1328 -14 lv
1312 -14 lv
1304 0 lv
0.8 fp
1328 14 mv
1336 28 lv
1352 28 lv
1360 14 lv
1352 0 lv
1336 0 lv
1328 14 lv
0.8 fp
1208 -84 mv
1216 -70 lv
1232 -70 lv
1240 -84 lv
1232 -98 lv
1216 -98 lv
1208 -84 lv
0.8 fp
1232 -70 mv
1240 -56 lv
1256 -56 lv
1264 -70 lv
1256 -84 lv
1240 -84 lv
1232 -70 lv
0.8 fp
1256 -56 mv
1264 -42 lv
1280 -42 lv
1288 -56 lv
1280 -70 lv
1264 -70 lv
1256 -56 lv
0.8 fp
1280 -42 mv
1288 -28 lv
1304 -28 lv
1312 -42 lv
1304 -56 lv
1288 -56 lv
1280 -42 lv
0.8 fp
1304 -28 mv
1312 -14 lv
1328 -14 lv
1336 -28 lv
1328 -42 lv
1312 -42 lv
1304 -28 lv
0.8 fp
1328 -14 mv
1336 0 lv
1352 0 lv
1360 -14 lv
1352 -28 lv
1336 -28 lv
1328 -14 lv
0.8 fp
1352 0 mv
1360 14 lv
1376 14 lv
1384 0 lv
1376 -14 lv
1360 -14 lv
1352 0 lv
0.8 fp
1248 14 mv
10 0 fc
1272 28 mv
4 0 fc
1224 -28 mv
4 0 fc
1248 -14 mv
4 0 fc
1272 0 mv
4 0 fc
1296 14 mv
4 0 fc
1320 28 mv
4 0 fc
1224 -56 mv
4 0 fc
1248 -42 mv
4 0 fc
1272 -28 mv
4 0 fc
1296 -14 mv
4 0 fc
1320 0 mv
4 0 fc
1344 14 mv
4 0 fc
1224 -84 mv
4 0 fc
1248 -70 mv
4 0 fc
1272 -56 mv
4 0 fc
1296 -42 mv
4 0 fc
1320 -28 mv
4 0 fc
1344 -14 mv
4 0 fc
1368 0 mv
4 0 fc
es
stroke end showpage
%%Trailer:
%%BoundingBox: -4 -24 332 24
%%EOF

%%EndDocument
 @endspecial 818 819 a Fs(Fig.)30 b(3.)h(Three)f(w)m(eak)h(connections)
g(and)e(a)i(virtual)e(connection.)0 996 y Fr(cell)j(sets,)j(indicated)d
(in)h(the)h(righ)m(tmost)e(diagram)f(in)h(the)i(\014gure,)g(forms)f(a)g
(Blac)m(k)g(virtual)f(connection)0 1116 y(from)42 b(the)h(blac)m(k)g
(stone)g(to)g(the)g(b)s(ottom)f(righ)m(t)g(side:)h(if)e(all)g(the)i
(dotted)h(cells)e(in)g(this)g(diagram)f(are)0 1236 y(uno)s(ccupied)31
b(and)f(it)g(is)f(White's)i(turn)f(to)g(mo)m(v)m(e,)h(then)g(whatev)m
(er)h(White)e(do)s(es)h(will)d(lea)m(v)m(e)j(all)d(the)j(cells)0
1357 y(of)38 b(at)g(least)h(one)g(of)f(these)i(w)m(eak)g(connections)f
(uno)s(ccupied)g(with)g(Blac)m(k)f(to)h(mo)m(v)m(e;)g(Blac)m(k)f(can)h
(then)0 1477 y(mo)m(v)m(e)33 b(to)f(the)h(white-dotted)g(cell)e(of)h
(that)h(w)m(eak)g(connection)g(and)g(force)g(a)f(connection.)0
1647 y(Although)27 b(de\014ned)j(sligh)m(tly)c(di\013eren)m(tly)i(b)m
(y)h(di\013eren)m(t)f(authors,)h(virtual)d(connections)j(ha)m(v)m(e)g
(long)e(b)s(een)0 1768 y(recognized)48 b(as)g(b)s(eing)f(cen)m(tral)g
(to)g(Hex)i(strategy)-8 b(.)48 b(References)i(to)d(virtual)f
(connections)i(p)s(ermeate)0 1888 y(the)40 b(Hex)h(literature,)d(where)
j(they)g(are)e(also)g(referred)i(to)e(as)h(\\connections")g(or)f
(\\safe)h(groups".)g(F)-8 b(or)0 2008 y(example,)29 b(v)-5
b(arious)30 b(forms)f(of)g(virtual)f(connections)j(are)e(discussed)j(b)
m(y)f(Berge)f([6,15])3180 1972 y Fw(1)3236 2008 y Fr(,)g(Sc)m(hensted)i
(and)0 2129 y(Titus)h([22],)f(Bro)m(wne)i([8],)e(and)h(Anshelevic)m(h)h
([3].)0 2299 y(Virtual-connections)c(are)i(useful)f(in)g(solving)g(Hex)
i(states)f(since,)g(when)h(accompanied)e(b)m(y)i(an)e(explicit)0
2419 y(strategy)-8 b(,)47 b(a)e(virtual)g(connection)h(serv)m(es)i(as)e
(a)g(pro)s(of)f(or)h(certi\014cate)g(that)g(a)g(pair)f(of)g(cells)g
(can)i(b)s(e)0 2540 y(connected.)39 b(The)f(most)e(imp)s(ortan)m(t)g
(virtual)f(connections)j(and)f(w)m(eak)i(connections)e(are)h(those)f
(whic)m(h)0 2660 y(connect)48 b(a)e(pla)m(y)m(er's)i(t)m(w)m(o)f
(sides,)g(since)h(suc)m(h)g(a)e(connection)h(o)s(ccurs)g(b)m(y)h
(de\014nition)e(if)f(and)i(only)f(if)0 2781 y(there)34
b(is)e(an)g(asso)s(ciated)h(winning)f(strategy)-8 b(.)33
b(W)-8 b(e)33 b(call)e(suc)m(h)k(subgames)e Fq(win-links)e
Fr(and)i Fq(win-we)-5 b(aklinks)0 2901 y Fr(resp)s(ectiv)m(ely)d(.)34
b(W)-8 b(e)33 b(use)g Fo(P)14 b Fr(\()p Fo(B)5 b Fr(:)p
Fn(\000)p Fo(;)17 b(S;)g Fn(\000)p Fr(\))33 b(to)f(denote)h(suc)m(h)i
(a)d(connection)h(joining)d Fo(P)14 b Fr('s)33 b(t)m(w)m(o)g(sides.)0
3071 y(Connection)g(subgames)g(are)g(particularly)d(useful)j(in)f(Hex)h
(end-game)f(analysis.)g(F)-8 b(or)32 b(example,)g(Berge)0
3191 y(observ)m(ed)i(that)e(a)f(mo)m(v)m(e)i(to)e(a)h(cell)e(that)i(is)
f(not)h(in)f(the)i(carrier)e(of)g(some)h(opp)s(onen)m(t)g(win-w)m
(eaklink)g(is)f(a)0 3312 y(losing)26 b(mo)m(v)m(e,)j(since)f(on)g(the)h
(next)g(mo)m(v)m(e)f(the)h(opp)s(onen)m(t)f(can)h(turn)f(the)g(win-w)m
(eaklink)g(in)m(to)f(a)h(win-link.)0 3482 y(F)-8 b(or)47
b(a)g(\014xed)i(game-state,)e(w)m(e)h(call)e(the)i(in)m(tersection)f
(of)h(the)g(set)g(of)f(all)e(uno)s(ccupied)k(b)s(oard)e(cells)0
3602 y(with)32 b(all)f(kno)m(wn)j(opp)s(onen)m(t)f(win-w)m(eaklink)g
(carriers)f(a)h(pla)m(y)m(er's)g Fq(must-play)p Fr(.)g(F)-8
b(or)32 b(a)h(pla)m(y)m(er)g Fo(X)40 b Fr(and)33 b(an)0
3723 y(uno)s(ccupied)42 b(cell)e Fo(c)h Fr(of)g(a)g(b)s(oard-state)g
Fo(B)5 b Fr(,)41 b(w)m(e)i(de\014ne)f Fo(B)33 b Fr(+)28
b Fo(c)2366 3738 y Fk(X)2475 3723 y Fr(as)41 b(the)h(state)g(obtained)f
(from)f Fo(B)46 b Fr(b)m(y)0 3843 y(adding)32 b(an)g
Fo(X)8 b Fr(-stone)33 b(at)f Fo(c)p Fr(.)h(Using)f(this)g(notation,)f
(Berge's)j(remark)e(can)h(b)s(e)g(restated)g(as)g(follo)m(ws:)0
4013 y Fp(Theorem)k(1)49 b Fq(\(Ber)-5 b(ge)44 b([6,15]\))g(If)g
Fo(c)h Fq(is)f(not)h(in)f Fo(P)14 b Fq('s)44 b(must-play)h(for)g
Fr(\()p Fo(B)5 b(;)17 b(P)s(;)g(Q)p Fr(\))44 b Fq(then)g
Fo(Q)h Fq(wins)g Fr(\()p Fo(B)34 b Fr(+)0 4134 y Fo(c)42
4149 y Fk(P)101 4134 y Fo(;)17 b(Q;)g(P)d Fr(\))p Fq(.)0
4304 y(Pr)-5 b(o)g(of.)36 b Fr(If)g Fo(c)h Fr(is)f(not)g(in)g
Fo(P)14 b Fr('s)36 b(m)m(ust-pla)m(y)g(for)g(\()p Fo(B)5
b(;)17 b(P)s(;)g(Q)p Fr(\))36 b(then)h(there)g(is)f(a)g(win-w)m
(eaklink)g Fo(Q)p Fr(\()p Fo(B)5 b Fr(:)p Fn(\000)p Fo(;)17
b(S;)g Fn(\000)p Fr(\))0 4424 y(suc)m(h)34 b(that)d Fo(c)i
Fr(is)e(not)h(in)g Fo(S)6 b Fr(.)31 b(Since)i Fo(Q)p
Fr(\()p Fo(B)5 b Fr(:)p Fn(\000)p Fo(;)17 b(S;)g Fn(\000)p
Fr(\))33 b(is)f(a)f(win-w)m(eaklink,)h(there)h(is)f(some)g(cell)f
Fo(d)g Fr(in)h Fo(S)37 b Fr(suc)m(h)0 4545 y(that)28
b Fo(Q)p Fr(\()p Fo(B)f Fr(+)22 b Fo(d)572 4560 y Fk(Q)632
4545 y Fr(:)p Fn(\000)p Fo(;)17 b(S)28 b Fn(\000)23 b
Fo(d)1019 4560 y Fk(Q)1078 4545 y Fo(;)17 b Fn(\000)p
Fr(\))28 b(is)g(a)g(win-link.)e(Since)j Fo(c)f Fr(is)g(not)g(in)f
Fo(S)6 b Fr(,)28 b Fo(Q)p Fr(\()p Fo(B)g Fr(+)22 b Fo(c)3006
4560 y Fk(P)3086 4545 y Fr(+)g Fo(d)3235 4560 y Fk(Q)3295
4545 y Fr(:)p Fn(\000)p Fo(;)17 b(S)28 b Fn(\000)23 b
Fo(d)3682 4560 y Fk(Q)3741 4545 y Fo(;)17 b Fn(\000)p
Fr(\))0 4665 y(is)32 b(also)g(a)g(win-link,)f(so)i Fo(Q)f
Fr(wins)h(\()p Fo(B)27 b Fr(+)22 b Fo(c)1510 4680 y Fk(P)1569
4665 y Fo(;)17 b(Q;)g(P)d Fr(\).)1917 b Fj(2)0 4955 y
Fr(Notice)44 b(that)h(the)g(computation)f(of)g(a)g(m)m(ustpla)m(y)h
(region)f(is)g(a)h(form)f(of)g(n)m(ull)f(mo)m(v)m(e)j(analysis,)e(as)h
(it)0 5076 y(in)m(v)m(olv)m(es)33 b(the)g(consideration)f(of)g(what)h
(can)g(o)s(ccur)g(if)e(a)h(pla)m(y)m(er)h(skips)h(a)e(turn.)0
5246 y(A)f(useful)f(feature)h(of)f(virtual)f(connections)i(is)g(that)f
(smaller)e(ones)k(can)f(b)s(e)f(com)m(bined)h(in)e(v)-5
b(arious)30 b(w)m(a)m(ys)0 5366 y(to)42 b(form)f(larger)h(ones.)h(The)g
(kno)m(wledge)h(of)e(this)g(fact)g(is)g(as)h(old)f(as)g(Hex)i(itself;)d
(for)h(example,)g(it)f(is)p 0 5482 299 4 v 0 5546 a Fw(1)91
5579 y Fs(A)30 b(translated)g(v)m(ersion)g(of)h([6])g(app)s(ears)f(in)f
([15])1909 5912 y Fr(5)p eop
%%Page: 6 6
6 5 bop 0 323 a Fr(discussed)39 b(in)e(detail)f(in)h([6].)g(Recen)m
(tly)-8 b(,)38 b(Anshelevic)m(h)h([1,3,2])e(used)i(the)f(follo)m(wing)d
(set)j(of)f(com)m(bining)0 443 y(rules)c(to)f(compute)g(connection)h
(subgames)g(in)f(an)h(inductiv)m(e)f(or)g(\\b)s(ottom-up")f(fashion.)0
614 y Fp(Theorem)37 b(2)49 b Fq(\(A)n(nshelevich)33 b([1,3,2]\))0
784 y Fn(\017)50 b Fi(and)p Fq(-rule:)39 b(L)-5 b(et)40
b Fo(P)14 b Fq(\()p Fo(B)5 b Fq(:)p Fo(X)j Fq(,)p Fo(S)e
Fq(,)p Fo(Y)20 b Fq(\))40 b(and)e Fo(P)14 b Fq(\()p Fo(B)5
b Fq(:)p Fo(Y)21 b Fq(,)p Fo(T)14 b Fq(,)p Fo(Z)7 b Fq(\))39
b(b)-5 b(e)39 b(virtual)h(c)-5 b(onne)g(ctions)38 b(with)h
Fo(X)47 b Fq(and)39 b Fo(S)46 b Fq(e)-5 b(ach)100 904
y(disjoint)28 b(fr)-5 b(om)28 b Fo(T)43 b Fq(and)28 b
Fo(Z)7 b Fq(.)29 b(Then)f(\(i\))g(if)h(e)-5 b(ach)28
b(c)-5 b(el)5 b(l)28 b(of)h Fo(Y)50 b Fq(has)28 b(a)h
Fo(P)14 b Fq(-stone)28 b(then)g Fo(P)14 b Fq(\()p Fo(B)5
b Fq(:)p Fo(X)j Fq(,)p Fo(S)27 b Fn([)c Fo(T)36 b Fn([)22
b Fo(Y)f Fq(,)p Fo(Z)7 b Fq(\))100 1025 y(is)37 b(a)h(virtual)g(c)-5
b(onne)g(ction)37 b(\(ii\))h(if)f Fo(Y)59 b Fq(c)-5 b(onsists)38
b(of)f(a)h(single)f(c)-5 b(el)5 b(l)38 b(then)f Fo(P)14
b Fq(\()p Fo(B)5 b Fq(:)p Fo(X)j Fq(,)p Fo(S)27 b Fn([)c
Fo(T)14 b Fq(,)p Fo(Z)7 b Fq(\))37 b(is)h(a)g(we)-5 b(ak)100
1145 y(c)g(onne)g(ction.)0 1265 y Fn(\017)50 b Fi(or)p
Fq(-rule:)31 b(L)-5 b(et)31 b Fo(P)14 b Fq(\()p Fo(B)5
b Fq(:)p Fo(X)j Fq(,)p Fo(S)1051 1280 y Fk(j)1086 1265
y Fq(,)p Fo(Y)21 b Fq(\))31 b(b)-5 b(e)31 b(a)f(we)-5
b(ak)30 b(c)-5 b(onne)g(ction)30 b(for)g Fo(j)k Fr(=)28
b(1)p Fo(;)17 b(:)g(:)g(:)e(;)i(t)31 b Fq(such)g(that)g(the)g(interse)
-5 b(ction)100 1386 y(of)36 b(the)h(sets)g Fo(S)634 1401
y Fk(j)707 1386 y Fq(is)g(empty.)g(Then)f Fo(P)14 b Fq(\()p
Fo(B)5 b Fq(:)p Fo(X)j Fq(,)p Fo(S)e Fq(,)p Fo(Y)20 b
Fq(\))36 b(is)h(a)f(virtual)i(c)-5 b(onne)g(ction,)35
b(wher)-5 b(e)36 b Fo(S)43 b Fq(is)37 b(the)f(union)100
1506 y(of)e(the)h(sets)g Fo(S)628 1521 y Fk(j)664 1506
y Fq(.)3132 b Fj(2)0 1676 y Fr(Notice)38 b(that)g(part)g(\(i\))f(of)h
(the)h Fi(and)p Fr(-rule)f(is)f(essen)m(tially)h(a)g(restatemen)m(t)h
(of)f(the)h(previous)g(Berge)g(ob-)0 1797 y(serv)-5 b(ation.)37
b(Also)h(notice)f(that)g(this)h(set)g(of)f(rules)h(is)f(static,)h(in)f
(that)g(it)g(yields)g(a)h(class)g(of)f(connection)0 1917
y(subgames)c(for)f(a)g(\014xed)h(state.)g(Anshelevic)m(h)g(p)s(oin)m
(ted)f(out)h(that)f(this)g(set)h(of)f(rules)g(is)g(not)g(su\016cien)m
(t)h(to)0 2037 y(establish)38 b(all)e(virtual)g(connections)j(of)f(a)f
(state,)i(and)f(is)g(th)m(us)h(not)f(strong)g(enough)h(to)e(solv)m(e)i
(all)d(Hex)0 2158 y(states;)d(ho)m(w)m(ev)m(er,)i(the)e(rules)f(do)h
(yield)e(a)h(su\016cien)m(tly)h(large)e(class)i(of)f(virtual)f
(connections)i(to)f(pro)m(vide)0 2278 y(an)g(e\013ectiv)m(e)i
(subroutine)f(of)f(a)g(strong)h(Hex-pla)m(ying)f(program)f([1,3,2].)0
2448 y(As)46 b(V)-8 b(an)46 b(Rijswijc)m(k)f(observ)m(ed,)i(an)f
(alternativ)m(e)e(metho)s(d)h(of)g(computing)g(connection)g(subgames)h
(is)0 2569 y(to)h(pro)s(ceed)g(through)g(the)h(game-tree)e(dynamically)
-8 b(.)44 b(F)-8 b(or)46 b(a)h(state)g Fo(G)53 b Fr(=)e(\()p
Fo(B)5 b(;)17 b(P)s(;)g(Q)p Fr(\))47 b(and)g(for)f(eac)m(h)0
2689 y(uno)s(ccupied)38 b(cell)f Fo(x)h Fr(of)f Fo(B)5
b Fr(,)38 b(de\014ne)h Fo(G)25 b Fr(+)h Fo(x)1595 2704
y Fk(P)1692 2689 y Fr(as)38 b(\()p Fo(B)30 b Fr(+)c Fo(x)2116
2704 y Fk(P)2175 2689 y Fo(;)17 b(Q;)g(P)d Fr(\);)37
b(when)i(the)f(pla)m(y)m(er)g Fo(P)51 b Fr(is)37 b(clear)g(from)0
2810 y(con)m(text)30 b(w)m(e)g(shall)e(sometimes)g(write)h
Fo(G)15 b Fr(+)g Fo(x)29 b Fr(in)f(place)h(of)g Fo(G)15
b Fr(+)g Fo(x)2392 2825 y Fk(P)2450 2810 y Fr(.)29 b(V)-8
b(an)29 b(Rijswijc)m(k's)h(discussion)f(in)f([25])0 2930
y(suggests)38 b(the)e(follo)m(wing)e(set)j(of)e(rules.)i(The)g(sym)m(b)
s(ol)e Fo(\036)h Fr(denotes)h(the)g(empt)m(y)g(set.)g(F)-8
b(or)35 b(a)h(pla)m(y)m(er)h Fo(P)14 b Fr(,)35 b(a)0
3050 y Fo(P)14 b Fr(-winning)30 b(c)m(hain)j(is)f(a)g(c)m(hain)h(of)f
Fo(P)14 b Fr(-stones)32 b(that)h(connects)h Fo(P)14 b
Fr('s)33 b(t)m(w)m(o)g(sides.)0 3220 y Fp(Theorem)k(3)49
b Fq(\(V)-7 b(an)31 b(R)n(ijswijck)g([25]\))g(Consider)g(a)h(b)-5
b(o)g(ar)g(d-state)32 b Fo(B)37 b Fq(and)32 b(players)g
Fo(P)s(;)17 b(Q)p Fq(.)31 b(If)h Fo(B)37 b Fq(has)32
b(a)g Fo(P)14 b Fq(-)0 3341 y(winning)34 b(chain)h(then)h
Fo(P)14 b Fq(\()p Fo(B)5 b Fq(:)p Fn(\000)p Fo(;)17 b(\036;)g
Fn(\000)p Fq(\))35 b(is)g(a)h(win-link.)e(If)h Fo(B)41
b Fq(has)35 b(no)h Fo(P)14 b Fq(-winning)34 b(or)h Fo(Q)p
Fq(-winning)g(chain)0 3461 y(then)f Fo(P)47 b Fq(wins)33
b Fr(\()p Fo(B)5 b(;)17 b(P)s(;)g(Q)p Fr(\))33 b Fq(if)h(and)f(only)h
(if)f Fo(P)47 b Fq(wins)34 b Fr(\()p Fo(B)24 b Fr(+)c
Fo(c)2162 3476 y Fk(P)2221 3461 y Fo(;)d(Q;)g(P)d Fr(\))33
b Fq(for)g(some)g(uno)-5 b(c)g(cupie)g(d)33 b(c)-5 b(el)5
b(l)34 b Fo(c)f Fq(of)h Fo(B)5 b Fq(;)0 3582 y(in)35
b(p)-5 b(articular)0 3752 y Fn(\017)50 b Fq(if)36 b Fo(P)51
b Fq(wins)36 b Fr(\()p Fo(B)28 b Fr(+)c Fo(c)818 3767
y Fk(P)877 3752 y Fo(;)17 b(Q;)g(P)d Fr(\))35 b Fq(with)i(a)g(win-link)
e Fo(P)14 b Fq(\()p Fo(B)27 b Fr(+)22 b Fo(c)2226 3767
y Fk(P)2285 3752 y Fq(:)p Fn(\000)p Fo(;)17 b(S;)g Fn(\000)p
Fq(\))37 b(then)g Fo(P)14 b Fq(\()p Fo(B)5 b Fq(:)p Fn(\000)p
Fo(;)17 b(S)27 b Fr(+)22 b Fo(c)3487 3767 y Fk(P)3546
3752 y Fo(;)17 b Fn(\000)p Fq(\))37 b(is)f(a)100 3872
y(win-we)-5 b(aklink,)0 3993 y Fn(\017)50 b Fq(if,)24
b(for)h(e)-5 b(ach)24 b(uno)-5 b(c)g(cupie)g(d)24 b(c)-5
b(el)5 b(l)25 b Fo(c)1259 3956 y Fk(j)1295 3993 y Fq(,)g
Fo(Q)g Fq(wins)f Fr(\()p Fo(B)5 b Fr(+)p Fo(c)1901 3945
y Fk(j)1901 4017 y(P)1960 3993 y Fo(;)17 b(Q;)g(P)d Fr(\))24
b Fq(with)h(some)f(win-link)f Fo(Q)p Fq(\()p Fo(B)28
b Fr(+)22 b Fo(c)3427 3945 y Fk(j)3427 4017 y(P)3486
3993 y Fq(:)p Fn(\000)p Fo(;)17 b(S)3703 3956 y Fk(j)3739
3993 y Fo(;)g Fn(\000)p Fq(\))100 4113 y(then)34 b(the)h(interse)-5
b(ction)34 b(of)h(the)g(sets)g Fo(S)1542 4077 y Fk(j)1613
4113 y Fq(is)g(empty,)0 4233 y Fn(\017)50 b Fq(if)36
b(ther)-5 b(e)37 b(is)f(a)g(set)h Fo(C)44 b Fq(of)36
b(uno)-5 b(c)g(cupie)g(d)36 b(c)-5 b(el)5 b(ls)36 b(such)g(that,)h(for)
g(e)-5 b(ach)36 b Fo(c)2603 4197 y Fk(j)2676 4233 y Fq(in)g
Fo(C)7 b Fq(,)37 b Fo(Q)g Fq(wins)e Fr(\()p Fo(B)29 b
Fr(+)23 b Fo(c)3562 4186 y Fk(j)3562 4258 y(P)3621 4233
y Fo(;)17 b(Q;)g(P)d Fr(\))100 4354 y Fq(with)35 b(some)g(win-link)f
Fo(Q)p Fq(\()p Fo(B)27 b Fr(+)22 b Fo(c)1294 4307 y Fk(j)1294
4378 y(P)1353 4354 y Fq(:)p Fn(\000)p Fo(;)17 b(S)1570
4318 y Fk(j)1606 4354 y Fo(;)g Fn(\000)p Fq(\))36 b(and)f(the)g
(interse)-5 b(ction)35 b(of)h(the)f(sets)h Fo(S)3222
4318 y Fk(j)3293 4354 y Fq(is)g(empty,)f(then)100 4474
y Fo(Q)p Fq(\()p Fo(B)5 b Fq(:)p Fn(\000)p Fo(;)17 b(S;)g
Fn(\000)p Fq(\))35 b(is)g(a)g(win-link,)e(wher)-5 b(e)34
b Fo(S)41 b Fq(is)35 b(the)f(union)h(of)f(the)h(sets)g
Fo(S)2749 4438 y Fk(j)2785 4474 y Fq(.)0 4644 y(Pr)-5
b(o)g(of)37 b(\(sketch\).)c Fr(The)j(pro)s(of)e(follo)m(ws)f(b)m(y)j
(elemen)m(tary)e(game-theory)g(argumen)m(ts)h(from)f(the)h(fact)f(that)
859 5383 y @beginspecial -6 @llx -35 @lly 253 @urx 35
@ury 2590 @rwi @setspecial
%%BeginDocument: ppr.ps4
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: (atend)
%%Title: TeXdraw drawing: ppr.ps4
%%Pages: 1
%%Creator: 1995/12/19 TeXdraw V2R0
%%CreationDate: 2006/4/25
50 dict begin
/mv {stroke moveto} def
/lv {lineto} def
/st {currentpoint stroke moveto} def
/sl {st setlinewidth} def
/sd {st 0 setdash} def
/sg {st setgray} def
/bs {gsave} def /es {stroke grestore} def
/fl {gsave setgray fill grestore
 currentpoint newpath moveto} def
/fp {gsave setgray fill grestore st} def
/cv {curveto} def
/cr {gsave currentpoint newpath 3 -1 roll 0 360 arc
 stroke grestore} def
/fc {gsave setgray currentpoint newpath
 3 -1 roll 0 360 arc fill grestore} def
/ar {gsave currentpoint newpath 5 2 roll arc stroke grestore} def
/el {gsave /svm matrix currentmatrix def
 currentpoint translate scale newpath 0 0 1 0 360 arc
 svm setmatrix stroke grestore} def
/fe {gsave setgray currentpoint translate scale newpath
 0 0 1 0 360 arc fill grestore} def
/av {/hhwid exch 2 div def /hlen exch def
 /ah exch def /tipy exch def /tipx exch def
 currentpoint /taily exch def /tailx exch def
 /dx tipx tailx sub def /dy tipy taily sub def
 /alen dx dx mul dy dy mul add sqrt def
 /blen alen hlen sub def
 gsave tailx taily translate dy dx atan rotate
 (V) ah ne {blen 0 gt {blen 0 lineto} if} {alen 0 lineto} ifelse
 stroke blen hhwid neg moveto alen 0 lineto blen hhwid lineto
 (T) ah eq {closepath} if
 (W) ah eq {gsave 1 setgray fill grestore closepath} if
 (F) ah eq {fill} {stroke} ifelse
 grestore tipx tipy moveto} def
0.24 0.24 scale
1 setlinecap 1 setlinejoin
3 setlinewidth [] 0 setdash
0 0 moveto
0 sl
bs
-24 0 mv
-12 21 lv
12 21 lv
24 0 lv
12 -21 lv
-12 -21 lv
-24 0 lv
0.8 fp
12 21 mv
24 42 lv
48 42 lv
60 21 lv
48 0 lv
24 0 lv
12 21 lv
0.8 fp
48 42 mv
60 63 lv
84 63 lv
96 42 lv
84 21 lv
60 21 lv
48 42 lv
0.8 fp
84 63 mv
96 84 lv
120 84 lv
132 63 lv
120 42 lv
96 42 lv
84 63 lv
0.8 fp
120 84 mv
132 105 lv
156 105 lv
168 84 lv
156 63 lv
132 63 lv
120 84 lv
0.8 fp
156 105 mv
168 126 lv
192 126 lv
204 105 lv
192 84 lv
168 84 lv
156 105 lv
0.8 fp
192 126 mv
204 147 lv
228 147 lv
240 126 lv
228 105 lv
204 105 lv
192 126 lv
0.8 fp
12 -21 mv
24 0 lv
48 0 lv
60 -21 lv
48 -42 lv
24 -42 lv
12 -21 lv
0.8 fp
48 0 mv
60 21 lv
84 21 lv
96 0 lv
84 -21 lv
60 -21 lv
48 0 lv
0.8 fp
84 21 mv
96 42 lv
120 42 lv
132 21 lv
120 0 lv
96 0 lv
84 21 lv
0.8 fp
120 42 mv
132 63 lv
156 63 lv
168 42 lv
156 21 lv
132 21 lv
120 42 lv
0.8 fp
156 63 mv
168 84 lv
192 84 lv
204 63 lv
192 42 lv
168 42 lv
156 63 lv
0.8 fp
192 84 mv
204 105 lv
228 105 lv
240 84 lv
228 63 lv
204 63 lv
192 84 lv
0.8 fp
228 105 mv
240 126 lv
264 126 lv
276 105 lv
264 84 lv
240 84 lv
228 105 lv
0.8 fp
48 -42 mv
60 -21 lv
84 -21 lv
96 -42 lv
84 -63 lv
60 -63 lv
48 -42 lv
0.8 fp
84 -21 mv
96 0 lv
120 0 lv
132 -21 lv
120 -42 lv
96 -42 lv
84 -21 lv
0.8 fp
120 0 mv
132 21 lv
156 21 lv
168 0 lv
156 -21 lv
132 -21 lv
120 0 lv
0.8 fp
156 21 mv
168 42 lv
192 42 lv
204 21 lv
192 0 lv
168 0 lv
156 21 lv
0.8 fp
192 42 mv
204 63 lv
228 63 lv
240 42 lv
228 21 lv
204 21 lv
192 42 lv
0.8 fp
228 63 mv
240 84 lv
264 84 lv
276 63 lv
264 42 lv
240 42 lv
228 63 lv
0.8 fp
264 84 mv
276 105 lv
300 105 lv
312 84 lv
300 63 lv
276 63 lv
264 84 lv
0.8 fp
84 -63 mv
96 -42 lv
120 -42 lv
132 -63 lv
120 -84 lv
96 -84 lv
84 -63 lv
0.8 fp
120 -42 mv
132 -21 lv
156 -21 lv
168 -42 lv
156 -63 lv
132 -63 lv
120 -42 lv
0.8 fp
156 -21 mv
168 0 lv
192 0 lv
204 -21 lv
192 -42 lv
168 -42 lv
156 -21 lv
0.8 fp
192 0 mv
204 21 lv
228 21 lv
240 0 lv
228 -21 lv
204 -21 lv
192 0 lv
0.8 fp
228 21 mv
240 42 lv
264 42 lv
276 21 lv
264 0 lv
240 0 lv
228 21 lv
0.8 fp
264 42 mv
276 63 lv
300 63 lv
312 42 lv
300 21 lv
276 21 lv
264 42 lv
0.8 fp
300 63 mv
312 84 lv
336 84 lv
348 63 lv
336 42 lv
312 42 lv
300 63 lv
0.8 fp
120 -84 mv
132 -63 lv
156 -63 lv
168 -84 lv
156 -105 lv
132 -105 lv
120 -84 lv
0.8 fp
156 -63 mv
168 -42 lv
192 -42 lv
204 -63 lv
192 -84 lv
168 -84 lv
156 -63 lv
0.8 fp
192 -42 mv
204 -21 lv
228 -21 lv
240 -42 lv
228 -63 lv
204 -63 lv
192 -42 lv
0.8 fp
228 -21 mv
240 0 lv
264 0 lv
276 -21 lv
264 -42 lv
240 -42 lv
228 -21 lv
0.8 fp
264 0 mv
276 21 lv
300 21 lv
312 0 lv
300 -21 lv
276 -21 lv
264 0 lv
0.8 fp
300 21 mv
312 42 lv
336 42 lv
348 21 lv
336 0 lv
312 0 lv
300 21 lv
0.8 fp
336 42 mv
348 63 lv
372 63 lv
384 42 lv
372 21 lv
348 21 lv
336 42 lv
0.8 fp
156 -105 mv
168 -84 lv
192 -84 lv
204 -105 lv
192 -126 lv
168 -126 lv
156 -105 lv
0.8 fp
192 -84 mv
204 -63 lv
228 -63 lv
240 -84 lv
228 -105 lv
204 -105 lv
192 -84 lv
0.8 fp
228 -63 mv
240 -42 lv
264 -42 lv
276 -63 lv
264 -84 lv
240 -84 lv
228 -63 lv
0.8 fp
264 -42 mv
276 -21 lv
300 -21 lv
312 -42 lv
300 -63 lv
276 -63 lv
264 -42 lv
0.8 fp
300 -21 mv
312 0 lv
336 0 lv
348 -21 lv
336 -42 lv
312 -42 lv
300 -21 lv
0.8 fp
336 0 mv
348 21 lv
372 21 lv
384 0 lv
372 -21 lv
348 -21 lv
336 0 lv
0.8 fp
372 21 mv
384 42 lv
408 42 lv
420 21 lv
408 0 lv
384 0 lv
372 21 lv
0.8 fp
192 -126 mv
204 -105 lv
228 -105 lv
240 -126 lv
228 -147 lv
204 -147 lv
192 -126 lv
0.8 fp
228 -105 mv
240 -84 lv
264 -84 lv
276 -105 lv
264 -126 lv
240 -126 lv
228 -105 lv
0.8 fp
264 -84 mv
276 -63 lv
300 -63 lv
312 -84 lv
300 -105 lv
276 -105 lv
264 -84 lv
0.8 fp
300 -63 mv
312 -42 lv
336 -42 lv
348 -63 lv
336 -84 lv
312 -84 lv
300 -63 lv
0.8 fp
336 -42 mv
348 -21 lv
372 -21 lv
384 -42 lv
372 -63 lv
348 -63 lv
336 -42 lv
0.8 fp
372 -21 mv
384 0 lv
408 0 lv
420 -21 lv
408 -42 lv
384 -42 lv
372 -21 lv
0.8 fp
408 0 mv
420 21 lv
444 21 lv
456 0 lv
444 -21 lv
420 -21 lv
408 0 lv
0.8 fp
0 126 mv
15 0 fc
0 -126 mv
15 1 fc
15 cr
432 -126 mv
15 0 fc
432 126 mv
15 1 fc
15 cr
216 84 mv
15 1 fc
15 cr
0 0 mv
6 0 fc
36 21 mv
6 0 fc
72 42 mv
6 0 fc
216 126 mv
6 0 fc
36 -21 mv
6 0 fc
72 0 mv
6 0 fc
108 21 mv
6 0 fc
144 42 mv
6 0 fc
180 63 mv
6 0 fc
252 105 mv
6 0 fc
72 -42 mv
6 0 fc
108 -21 mv
6 0 fc
144 0 mv
6 0 fc
180 21 mv
6 1 fc
6 cr
216 42 mv
6 0 fc
108 -63 mv
6 0 fc
144 -42 mv
6 0 fc
180 -21 mv
6 0 fc
144 -84 mv
6 0 fc
180 -63 mv
6 0 fc
216 -42 mv
6 0 fc
180 -105 mv
6 0 fc
216 -84 mv
6 0 fc
216 -126 mv
6 0 fc
es
bs
576 0 mv
588 21 lv
612 21 lv
624 0 lv
612 -21 lv
588 -21 lv
576 0 lv
0.8 fp
612 21 mv
624 42 lv
648 42 lv
660 21 lv
648 0 lv
624 0 lv
612 21 lv
0.8 fp
648 42 mv
660 63 lv
684 63 lv
696 42 lv
684 21 lv
660 21 lv
648 42 lv
0.8 fp
684 63 mv
696 84 lv
720 84 lv
732 63 lv
720 42 lv
696 42 lv
684 63 lv
0.8 fp
720 84 mv
732 105 lv
756 105 lv
768 84 lv
756 63 lv
732 63 lv
720 84 lv
0.8 fp
756 105 mv
768 126 lv
792 126 lv
804 105 lv
792 84 lv
768 84 lv
756 105 lv
0.8 fp
792 126 mv
804 147 lv
828 147 lv
840 126 lv
828 105 lv
804 105 lv
792 126 lv
0.8 fp
612 -21 mv
624 0 lv
648 0 lv
660 -21 lv
648 -42 lv
624 -42 lv
612 -21 lv
0.8 fp
648 0 mv
660 21 lv
684 21 lv
696 0 lv
684 -21 lv
660 -21 lv
648 0 lv
0.8 fp
684 21 mv
696 42 lv
720 42 lv
732 21 lv
720 0 lv
696 0 lv
684 21 lv
0.8 fp
720 42 mv
732 63 lv
756 63 lv
768 42 lv
756 21 lv
732 21 lv
720 42 lv
0.8 fp
756 63 mv
768 84 lv
792 84 lv
804 63 lv
792 42 lv
768 42 lv
756 63 lv
0.8 fp
792 84 mv
804 105 lv
828 105 lv
840 84 lv
828 63 lv
804 63 lv
792 84 lv
0.8 fp
828 105 mv
840 126 lv
864 126 lv
876 105 lv
864 84 lv
840 84 lv
828 105 lv
0.8 fp
648 -42 mv
660 -21 lv
684 -21 lv
696 -42 lv
684 -63 lv
660 -63 lv
648 -42 lv
0.8 fp
684 -21 mv
696 0 lv
720 0 lv
732 -21 lv
720 -42 lv
696 -42 lv
684 -21 lv
0.8 fp
720 0 mv
732 21 lv
756 21 lv
768 0 lv
756 -21 lv
732 -21 lv
720 0 lv
0.8 fp
756 21 mv
768 42 lv
792 42 lv
804 21 lv
792 0 lv
768 0 lv
756 21 lv
0.8 fp
792 42 mv
804 63 lv
828 63 lv
840 42 lv
828 21 lv
804 21 lv
792 42 lv
0.8 fp
828 63 mv
840 84 lv
864 84 lv
876 63 lv
864 42 lv
840 42 lv
828 63 lv
0.8 fp
864 84 mv
876 105 lv
900 105 lv
912 84 lv
900 63 lv
876 63 lv
864 84 lv
0.8 fp
684 -63 mv
696 -42 lv
720 -42 lv
732 -63 lv
720 -84 lv
696 -84 lv
684 -63 lv
0.8 fp
720 -42 mv
732 -21 lv
756 -21 lv
768 -42 lv
756 -63 lv
732 -63 lv
720 -42 lv
0.8 fp
756 -21 mv
768 0 lv
792 0 lv
804 -21 lv
792 -42 lv
768 -42 lv
756 -21 lv
0.8 fp
792 0 mv
804 21 lv
828 21 lv
840 0 lv
828 -21 lv
804 -21 lv
792 0 lv
0.8 fp
828 21 mv
840 42 lv
864 42 lv
876 21 lv
864 0 lv
840 0 lv
828 21 lv
0.8 fp
864 42 mv
876 63 lv
900 63 lv
912 42 lv
900 21 lv
876 21 lv
864 42 lv
0.8 fp
900 63 mv
912 84 lv
936 84 lv
948 63 lv
936 42 lv
912 42 lv
900 63 lv
0.8 fp
720 -84 mv
732 -63 lv
756 -63 lv
768 -84 lv
756 -105 lv
732 -105 lv
720 -84 lv
0.8 fp
756 -63 mv
768 -42 lv
792 -42 lv
804 -63 lv
792 -84 lv
768 -84 lv
756 -63 lv
0.8 fp
792 -42 mv
804 -21 lv
828 -21 lv
840 -42 lv
828 -63 lv
804 -63 lv
792 -42 lv
0.8 fp
828 -21 mv
840 0 lv
864 0 lv
876 -21 lv
864 -42 lv
840 -42 lv
828 -21 lv
0.8 fp
864 0 mv
876 21 lv
900 21 lv
912 0 lv
900 -21 lv
876 -21 lv
864 0 lv
0.8 fp
900 21 mv
912 42 lv
936 42 lv
948 21 lv
936 0 lv
912 0 lv
900 21 lv
0.8 fp
936 42 mv
948 63 lv
972 63 lv
984 42 lv
972 21 lv
948 21 lv
936 42 lv
0.8 fp
756 -105 mv
768 -84 lv
792 -84 lv
804 -105 lv
792 -126 lv
768 -126 lv
756 -105 lv
0.8 fp
792 -84 mv
804 -63 lv
828 -63 lv
840 -84 lv
828 -105 lv
804 -105 lv
792 -84 lv
0.8 fp
828 -63 mv
840 -42 lv
864 -42 lv
876 -63 lv
864 -84 lv
840 -84 lv
828 -63 lv
0.8 fp
864 -42 mv
876 -21 lv
900 -21 lv
912 -42 lv
900 -63 lv
876 -63 lv
864 -42 lv
0.8 fp
900 -21 mv
912 0 lv
936 0 lv
948 -21 lv
936 -42 lv
912 -42 lv
900 -21 lv
0.8 fp
936 0 mv
948 21 lv
972 21 lv
984 0 lv
972 -21 lv
948 -21 lv
936 0 lv
0.8 fp
972 21 mv
984 42 lv
1008 42 lv
1020 21 lv
1008 0 lv
984 0 lv
972 21 lv
0.8 fp
792 -126 mv
804 -105 lv
828 -105 lv
840 -126 lv
828 -147 lv
804 -147 lv
792 -126 lv
0.8 fp
828 -105 mv
840 -84 lv
864 -84 lv
876 -105 lv
864 -126 lv
840 -126 lv
828 -105 lv
0.8 fp
864 -84 mv
876 -63 lv
900 -63 lv
912 -84 lv
900 -105 lv
876 -105 lv
864 -84 lv
0.8 fp
900 -63 mv
912 -42 lv
936 -42 lv
948 -63 lv
936 -84 lv
912 -84 lv
900 -63 lv
0.8 fp
936 -42 mv
948 -21 lv
972 -21 lv
984 -42 lv
972 -63 lv
948 -63 lv
936 -42 lv
0.8 fp
972 -21 mv
984 0 lv
1008 0 lv
1020 -21 lv
1008 -42 lv
984 -42 lv
972 -21 lv
0.8 fp
1008 0 mv
1020 21 lv
1044 21 lv
1056 0 lv
1044 -21 lv
1020 -21 lv
1008 0 lv
0.8 fp
600 126 mv
15 0 fc
600 -126 mv
15 1 fc
15 cr
1032 -126 mv
15 0 fc
1032 126 mv
15 1 fc
15 cr
816 84 mv
15 1 fc
15 cr
600 0 mv
6 0 fc
636 21 mv
6 0 fc
672 42 mv
6 0 fc
816 126 mv
6 0 fc
636 -21 mv
6 0 fc
672 0 mv
6 0 fc
708 21 mv
6 0 fc
744 42 mv
6 0 fc
780 63 mv
6 0 fc
852 105 mv
6 0 fc
672 -42 mv
6 0 fc
708 -21 mv
6 0 fc
744 0 mv
6 0 fc
780 21 mv
15 1 fc
15 cr
816 42 mv
6 0 fc
708 -63 mv
6 0 fc
744 -42 mv
6 0 fc
780 -21 mv
6 0 fc
744 -84 mv
6 0 fc
780 -63 mv
6 0 fc
816 -42 mv
6 0 fc
780 -105 mv
6 0 fc
816 -84 mv
6 0 fc
816 -126 mv
6 0 fc
es
stroke end showpage
%%Trailer:
%%BoundingBox: -6 -35 253 35
%%EOF

%%EndDocument
 @endspecial 543 5562 a Fs(Fig.)c(4.)h(A)g(white)e(win-w)m(eaklink)358
b(.)16 b(.)f(.)h(and)29 b(a)i(corresp)s(onding)d(win-link.)1909
5912 y Fr(6)p eop
%%Page: 7 7
7 6 bop 526 2490 a @beginspecial -135 @llx -245 @lly
204 @urx 25 @ury 3390 @rwi @setspecial
%%BeginDocument: ppr.ps5
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: (atend)
%%Title: TeXdraw drawing: ppr.ps5
%%Pages: 1
%%Creator: 1995/12/19 TeXdraw V2R0
%%CreationDate: 2006/4/25
50 dict begin
/mv {stroke moveto} def
/lv {lineto} def
/st {currentpoint stroke moveto} def
/sl {st setlinewidth} def
/sd {st 0 setdash} def
/sg {st setgray} def
/bs {gsave} def /es {stroke grestore} def
/fl {gsave setgray fill grestore
 currentpoint newpath moveto} def
/fp {gsave setgray fill grestore st} def
/cv {curveto} def
/cr {gsave currentpoint newpath 3 -1 roll 0 360 arc
 stroke grestore} def
/fc {gsave setgray currentpoint newpath
 3 -1 roll 0 360 arc fill grestore} def
/ar {gsave currentpoint newpath 5 2 roll arc stroke grestore} def
/el {gsave /svm matrix currentmatrix def
 currentpoint translate scale newpath 0 0 1 0 360 arc
 svm setmatrix stroke grestore} def
/fe {gsave setgray currentpoint translate scale newpath
 0 0 1 0 360 arc fill grestore} def
/av {/hhwid exch 2 div def /hlen exch def
 /ah exch def /tipy exch def /tipx exch def
 currentpoint /taily exch def /tailx exch def
 /dx tipx tailx sub def /dy tipy taily sub def
 /alen dx dx mul dy dy mul add sqrt def
 /blen alen hlen sub def
 gsave tailx taily translate dy dx atan rotate
 (V) ah ne {blen 0 gt {blen 0 lineto} if} {alen 0 lineto} ifelse
 stroke blen hhwid neg moveto alen 0 lineto blen hhwid lineto
 (T) ah eq {closepath} if
 (W) ah eq {gsave 1 setgray fill grestore closepath} if
 (F) ah eq {fill} {stroke} ifelse
 grestore tipx tipy moveto} def
0.24 0.24 scale
1 setlinecap 1 setlinejoin
3 setlinewidth [] 0 setdash
0 0 moveto
0 sl
bs
-24 0 mv
-12 21 lv
12 21 lv
24 0 lv
12 -21 lv
-12 -21 lv
-24 0 lv
0.8 fp
12 21 mv
24 42 lv
48 42 lv
60 21 lv
48 0 lv
24 0 lv
12 21 lv
0.8 fp
48 42 mv
60 63 lv
84 63 lv
96 42 lv
84 21 lv
60 21 lv
48 42 lv
0.8 fp
84 63 mv
96 84 lv
120 84 lv
132 63 lv
120 42 lv
96 42 lv
84 63 lv
0.8 fp
120 84 mv
132 105 lv
156 105 lv
168 84 lv
156 63 lv
132 63 lv
120 84 lv
0.8 fp
12 -21 mv
24 0 lv
48 0 lv
60 -21 lv
48 -42 lv
24 -42 lv
12 -21 lv
0.8 fp
48 0 mv
60 21 lv
84 21 lv
96 0 lv
84 -21 lv
60 -21 lv
48 0 lv
0.8 fp
84 21 mv
96 42 lv
120 42 lv
132 21 lv
120 0 lv
96 0 lv
84 21 lv
0.8 fp
120 42 mv
132 63 lv
156 63 lv
168 42 lv
156 21 lv
132 21 lv
120 42 lv
0.8 fp
156 63 mv
168 84 lv
192 84 lv
204 63 lv
192 42 lv
168 42 lv
156 63 lv
0.8 fp
48 -42 mv
60 -21 lv
84 -21 lv
96 -42 lv
84 -63 lv
60 -63 lv
48 -42 lv
0.8 fp
84 -21 mv
96 0 lv
120 0 lv
132 -21 lv
120 -42 lv
96 -42 lv
84 -21 lv
0.8 fp
120 0 mv
132 21 lv
156 21 lv
168 0 lv
156 -21 lv
132 -21 lv
120 0 lv
0.8 fp
156 21 mv
168 42 lv
192 42 lv
204 21 lv
192 0 lv
168 0 lv
156 21 lv
0.8 fp
192 42 mv
204 63 lv
228 63 lv
240 42 lv
228 21 lv
204 21 lv
192 42 lv
0.8 fp
84 -63 mv
96 -42 lv
120 -42 lv
132 -63 lv
120 -84 lv
96 -84 lv
84 -63 lv
0.8 fp
120 -42 mv
132 -21 lv
156 -21 lv
168 -42 lv
156 -63 lv
132 -63 lv
120 -42 lv
0.8 fp
156 -21 mv
168 0 lv
192 0 lv
204 -21 lv
192 -42 lv
168 -42 lv
156 -21 lv
0.8 fp
192 0 mv
204 21 lv
228 21 lv
240 0 lv
228 -21 lv
204 -21 lv
192 0 lv
0.8 fp
228 21 mv
240 42 lv
264 42 lv
276 21 lv
264 0 lv
240 0 lv
228 21 lv
0.8 fp
120 -84 mv
132 -63 lv
156 -63 lv
168 -84 lv
156 -105 lv
132 -105 lv
120 -84 lv
0.8 fp
156 -63 mv
168 -42 lv
192 -42 lv
204 -63 lv
192 -84 lv
168 -84 lv
156 -63 lv
0.8 fp
192 -42 mv
204 -21 lv
228 -21 lv
240 -42 lv
228 -63 lv
204 -63 lv
192 -42 lv
0.8 fp
228 -21 mv
240 0 lv
264 0 lv
276 -21 lv
264 -42 lv
240 -42 lv
228 -21 lv
0.8 fp
264 0 mv
276 21 lv
300 21 lv
312 0 lv
300 -21 lv
276 -21 lv
264 0 lv
0.8 fp
0 84 mv
15 0 fc
0 -84 mv
15 1 fc
15 cr
288 -84 mv
15 0 fc
288 84 mv
15 1 fc
15 cr
180 21 mv
15 0 fc
144 42 mv
15 0 fc
144 84 mv
15 0 fc
144 0 mv
15 1 fc
15 cr
108 63 mv
15 1 fc
15 cr
-108 -189 mv
-216 -294 (T) 48 24 av
144 -189 mv
144 -294 (T) 48 24 av
396 -189 mv
504 -294 (T) 48 24 av
es
bs
-564 -420 mv
-552 -399 lv
-528 -399 lv
-516 -420 lv
-528 -441 lv
-552 -441 lv
-564 -420 lv
0.8 fp
-528 -399 mv
-516 -378 lv
-492 -378 lv
-480 -399 lv
-492 -420 lv
-516 -420 lv
-528 -399 lv
0.8 fp
-492 -378 mv
-480 -357 lv
-456 -357 lv
-444 -378 lv
-456 -399 lv
-480 -399 lv
-492 -378 lv
0.8 fp
-456 -357 mv
-444 -336 lv
-420 -336 lv
-408 -357 lv
-420 -378 lv
-444 -378 lv
-456 -357 lv
0.8 fp
-420 -336 mv
-408 -315 lv
-384 -315 lv
-372 -336 lv
-384 -357 lv
-408 -357 lv
-420 -336 lv
0.8 fp
-528 -441 mv
-516 -420 lv
-492 -420 lv
-480 -441 lv
-492 -462 lv
-516 -462 lv
-528 -441 lv
0.8 fp
-492 -420 mv
-480 -399 lv
-456 -399 lv
-444 -420 lv
-456 -441 lv
-480 -441 lv
-492 -420 lv
0.8 fp
-456 -399 mv
-444 -378 lv
-420 -378 lv
-408 -399 lv
-420 -420 lv
-444 -420 lv
-456 -399 lv
0.8 fp
-420 -378 mv
-408 -357 lv
-384 -357 lv
-372 -378 lv
-384 -399 lv
-408 -399 lv
-420 -378 lv
0.8 fp
-384 -357 mv
-372 -336 lv
-348 -336 lv
-336 -357 lv
-348 -378 lv
-372 -378 lv
-384 -357 lv
0.8 fp
-492 -462 mv
-480 -441 lv
-456 -441 lv
-444 -462 lv
-456 -483 lv
-480 -483 lv
-492 -462 lv
0.8 fp
-456 -441 mv
-444 -420 lv
-420 -420 lv
-408 -441 lv
-420 -462 lv
-444 -462 lv
-456 -441 lv
0.8 fp
-420 -420 mv
-408 -399 lv
-384 -399 lv
-372 -420 lv
-384 -441 lv
-408 -441 lv
-420 -420 lv
0.8 fp
-384 -399 mv
-372 -378 lv
-348 -378 lv
-336 -399 lv
-348 -420 lv
-372 -420 lv
-384 -399 lv
0.8 fp
-348 -378 mv
-336 -357 lv
-312 -357 lv
-300 -378 lv
-312 -399 lv
-336 -399 lv
-348 -378 lv
0.8 fp
-456 -483 mv
-444 -462 lv
-420 -462 lv
-408 -483 lv
-420 -504 lv
-444 -504 lv
-456 -483 lv
0.8 fp
-420 -462 mv
-408 -441 lv
-384 -441 lv
-372 -462 lv
-384 -483 lv
-408 -483 lv
-420 -462 lv
0.8 fp
-384 -441 mv
-372 -420 lv
-348 -420 lv
-336 -441 lv
-348 -462 lv
-372 -462 lv
-384 -441 lv
0.8 fp
-348 -420 mv
-336 -399 lv
-312 -399 lv
-300 -420 lv
-312 -441 lv
-336 -441 lv
-348 -420 lv
0.8 fp
-312 -399 mv
-300 -378 lv
-276 -378 lv
-264 -399 lv
-276 -420 lv
-300 -420 lv
-312 -399 lv
0.8 fp
-420 -504 mv
-408 -483 lv
-384 -483 lv
-372 -504 lv
-384 -525 lv
-408 -525 lv
-420 -504 lv
0.8 fp
-384 -483 mv
-372 -462 lv
-348 -462 lv
-336 -483 lv
-348 -504 lv
-372 -504 lv
-384 -483 lv
0.8 fp
-348 -462 mv
-336 -441 lv
-312 -441 lv
-300 -462 lv
-312 -483 lv
-336 -483 lv
-348 -462 lv
0.8 fp
-312 -441 mv
-300 -420 lv
-276 -420 lv
-264 -441 lv
-276 -462 lv
-300 -462 lv
-312 -441 lv
0.8 fp
-276 -420 mv
-264 -399 lv
-240 -399 lv
-228 -420 lv
-240 -441 lv
-264 -441 lv
-276 -420 lv
0.8 fp
-360 -399 mv
15 0 fc
-396 -378 mv
15 0 fc
-396 -336 mv
15 0 fc
-396 -420 mv
15 1 fc
15 cr
-432 -357 mv
15 1 fc
15 cr
-360 -441 mv
15 1 fc
15 cr
-396 -609 mv
-396 -714 (T) 48 24 av
es
bs
-24 -420 mv
-12 -399 lv
12 -399 lv
24 -420 lv
12 -441 lv
-12 -441 lv
-24 -420 lv
0.8 fp
12 -399 mv
24 -378 lv
48 -378 lv
60 -399 lv
48 -420 lv
24 -420 lv
12 -399 lv
0.8 fp
48 -378 mv
60 -357 lv
84 -357 lv
96 -378 lv
84 -399 lv
60 -399 lv
48 -378 lv
0.8 fp
84 -357 mv
96 -336 lv
120 -336 lv
132 -357 lv
120 -378 lv
96 -378 lv
84 -357 lv
0.8 fp
120 -336 mv
132 -315 lv
156 -315 lv
168 -336 lv
156 -357 lv
132 -357 lv
120 -336 lv
0.8 fp
12 -441 mv
24 -420 lv
48 -420 lv
60 -441 lv
48 -462 lv
24 -462 lv
12 -441 lv
0.8 fp
48 -420 mv
60 -399 lv
84 -399 lv
96 -420 lv
84 -441 lv
60 -441 lv
48 -420 lv
0.8 fp
84 -399 mv
96 -378 lv
120 -378 lv
132 -399 lv
120 -420 lv
96 -420 lv
84 -399 lv
0.8 fp
120 -378 mv
132 -357 lv
156 -357 lv
168 -378 lv
156 -399 lv
132 -399 lv
120 -378 lv
0.8 fp
156 -357 mv
168 -336 lv
192 -336 lv
204 -357 lv
192 -378 lv
168 -378 lv
156 -357 lv
0.8 fp
48 -462 mv
60 -441 lv
84 -441 lv
96 -462 lv
84 -483 lv
60 -483 lv
48 -462 lv
0.8 fp
84 -441 mv
96 -420 lv
120 -420 lv
132 -441 lv
120 -462 lv
96 -462 lv
84 -441 lv
0.8 fp
120 -420 mv
132 -399 lv
156 -399 lv
168 -420 lv
156 -441 lv
132 -441 lv
120 -420 lv
0.8 fp
156 -399 mv
168 -378 lv
192 -378 lv
204 -399 lv
192 -420 lv
168 -420 lv
156 -399 lv
0.8 fp
192 -378 mv
204 -357 lv
228 -357 lv
240 -378 lv
228 -399 lv
204 -399 lv
192 -378 lv
0.8 fp
84 -483 mv
96 -462 lv
120 -462 lv
132 -483 lv
120 -504 lv
96 -504 lv
84 -483 lv
0.8 fp
120 -462 mv
132 -441 lv
156 -441 lv
168 -462 lv
156 -483 lv
132 -483 lv
120 -462 lv
0.8 fp
156 -441 mv
168 -420 lv
192 -420 lv
204 -441 lv
192 -462 lv
168 -462 lv
156 -441 lv
0.8 fp
192 -420 mv
204 -399 lv
228 -399 lv
240 -420 lv
228 -441 lv
204 -441 lv
192 -420 lv
0.8 fp
228 -399 mv
240 -378 lv
264 -378 lv
276 -399 lv
264 -420 lv
240 -420 lv
228 -399 lv
0.8 fp
120 -504 mv
132 -483 lv
156 -483 lv
168 -504 lv
156 -525 lv
132 -525 lv
120 -504 lv
0.8 fp
156 -483 mv
168 -462 lv
192 -462 lv
204 -483 lv
192 -504 lv
168 -504 lv
156 -483 lv
0.8 fp
192 -462 mv
204 -441 lv
228 -441 lv
240 -462 lv
228 -483 lv
204 -483 lv
192 -462 lv
0.8 fp
228 -441 mv
240 -420 lv
264 -420 lv
276 -441 lv
264 -462 lv
240 -462 lv
228 -441 lv
0.8 fp
264 -420 mv
276 -399 lv
300 -399 lv
312 -420 lv
300 -441 lv
276 -441 lv
264 -420 lv
0.8 fp
180 -399 mv
15 0 fc
144 -378 mv
15 0 fc
144 -336 mv
15 0 fc
144 -420 mv
15 1 fc
15 cr
108 -357 mv
15 1 fc
15 cr
216 -420 mv
15 1 fc
15 cr
144 -609 mv
144 -714 (T) 48 24 av
es
bs
516 -420 mv
528 -399 lv
552 -399 lv
564 -420 lv
552 -441 lv
528 -441 lv
516 -420 lv
0.8 fp
552 -399 mv
564 -378 lv
588 -378 lv
600 -399 lv
588 -420 lv
564 -420 lv
552 -399 lv
0.8 fp
588 -378 mv
600 -357 lv
624 -357 lv
636 -378 lv
624 -399 lv
600 -399 lv
588 -378 lv
0.8 fp
624 -357 mv
636 -336 lv
660 -336 lv
672 -357 lv
660 -378 lv
636 -378 lv
624 -357 lv
0.8 fp
660 -336 mv
672 -315 lv
696 -315 lv
708 -336 lv
696 -357 lv
672 -357 lv
660 -336 lv
0.8 fp
552 -441 mv
564 -420 lv
588 -420 lv
600 -441 lv
588 -462 lv
564 -462 lv
552 -441 lv
0.8 fp
588 -420 mv
600 -399 lv
624 -399 lv
636 -420 lv
624 -441 lv
600 -441 lv
588 -420 lv
0.8 fp
624 -399 mv
636 -378 lv
660 -378 lv
672 -399 lv
660 -420 lv
636 -420 lv
624 -399 lv
0.8 fp
660 -378 mv
672 -357 lv
696 -357 lv
708 -378 lv
696 -399 lv
672 -399 lv
660 -378 lv
0.8 fp
696 -357 mv
708 -336 lv
732 -336 lv
744 -357 lv
732 -378 lv
708 -378 lv
696 -357 lv
0.8 fp
588 -462 mv
600 -441 lv
624 -441 lv
636 -462 lv
624 -483 lv
600 -483 lv
588 -462 lv
0.8 fp
624 -441 mv
636 -420 lv
660 -420 lv
672 -441 lv
660 -462 lv
636 -462 lv
624 -441 lv
0.8 fp
660 -420 mv
672 -399 lv
696 -399 lv
708 -420 lv
696 -441 lv
672 -441 lv
660 -420 lv
0.8 fp
696 -399 mv
708 -378 lv
732 -378 lv
744 -399 lv
732 -420 lv
708 -420 lv
696 -399 lv
0.8 fp
732 -378 mv
744 -357 lv
768 -357 lv
780 -378 lv
768 -399 lv
744 -399 lv
732 -378 lv
0.8 fp
624 -483 mv
636 -462 lv
660 -462 lv
672 -483 lv
660 -504 lv
636 -504 lv
624 -483 lv
0.8 fp
660 -462 mv
672 -441 lv
696 -441 lv
708 -462 lv
696 -483 lv
672 -483 lv
660 -462 lv
0.8 fp
696 -441 mv
708 -420 lv
732 -420 lv
744 -441 lv
732 -462 lv
708 -462 lv
696 -441 lv
0.8 fp
732 -420 mv
744 -399 lv
768 -399 lv
780 -420 lv
768 -441 lv
744 -441 lv
732 -420 lv
0.8 fp
768 -399 mv
780 -378 lv
804 -378 lv
816 -399 lv
804 -420 lv
780 -420 lv
768 -399 lv
0.8 fp
660 -504 mv
672 -483 lv
696 -483 lv
708 -504 lv
696 -525 lv
672 -525 lv
660 -504 lv
0.8 fp
696 -483 mv
708 -462 lv
732 -462 lv
744 -483 lv
732 -504 lv
708 -504 lv
696 -483 lv
0.8 fp
732 -462 mv
744 -441 lv
768 -441 lv
780 -462 lv
768 -483 lv
744 -483 lv
732 -462 lv
0.8 fp
768 -441 mv
780 -420 lv
804 -420 lv
816 -441 lv
804 -462 lv
780 -462 lv
768 -441 lv
0.8 fp
804 -420 mv
816 -399 lv
840 -399 lv
852 -420 lv
840 -441 lv
816 -441 lv
804 -420 lv
0.8 fp
720 -399 mv
15 0 fc
684 -378 mv
15 0 fc
684 -336 mv
15 0 fc
684 -420 mv
15 1 fc
15 cr
648 -357 mv
15 1 fc
15 cr
756 -462 mv
15 1 fc
15 cr
684 -609 mv
684 -714 (T) 48 24 av
es
bs
-564 -840 mv
-552 -819 lv
-528 -819 lv
-516 -840 lv
-528 -861 lv
-552 -861 lv
-564 -840 lv
0.8 fp
-528 -819 mv
-516 -798 lv
-492 -798 lv
-480 -819 lv
-492 -840 lv
-516 -840 lv
-528 -819 lv
0.8 fp
-492 -798 mv
-480 -777 lv
-456 -777 lv
-444 -798 lv
-456 -819 lv
-480 -819 lv
-492 -798 lv
0.8 fp
-456 -777 mv
-444 -756 lv
-420 -756 lv
-408 -777 lv
-420 -798 lv
-444 -798 lv
-456 -777 lv
0.8 fp
-420 -756 mv
-408 -735 lv
-384 -735 lv
-372 -756 lv
-384 -777 lv
-408 -777 lv
-420 -756 lv
0.8 fp
-528 -861 mv
-516 -840 lv
-492 -840 lv
-480 -861 lv
-492 -882 lv
-516 -882 lv
-528 -861 lv
0.8 fp
-492 -840 mv
-480 -819 lv
-456 -819 lv
-444 -840 lv
-456 -861 lv
-480 -861 lv
-492 -840 lv
0.8 fp
-456 -819 mv
-444 -798 lv
-420 -798 lv
-408 -819 lv
-420 -840 lv
-444 -840 lv
-456 -819 lv
0.8 fp
-420 -798 mv
-408 -777 lv
-384 -777 lv
-372 -798 lv
-384 -819 lv
-408 -819 lv
-420 -798 lv
0.8 fp
-384 -777 mv
-372 -756 lv
-348 -756 lv
-336 -777 lv
-348 -798 lv
-372 -798 lv
-384 -777 lv
0.8 fp
-492 -882 mv
-480 -861 lv
-456 -861 lv
-444 -882 lv
-456 -903 lv
-480 -903 lv
-492 -882 lv
0.8 fp
-456 -861 mv
-444 -840 lv
-420 -840 lv
-408 -861 lv
-420 -882 lv
-444 -882 lv
-456 -861 lv
0.8 fp
-420 -840 mv
-408 -819 lv
-384 -819 lv
-372 -840 lv
-384 -861 lv
-408 -861 lv
-420 -840 lv
0.8 fp
-384 -819 mv
-372 -798 lv
-348 -798 lv
-336 -819 lv
-348 -840 lv
-372 -840 lv
-384 -819 lv
0.8 fp
-348 -798 mv
-336 -777 lv
-312 -777 lv
-300 -798 lv
-312 -819 lv
-336 -819 lv
-348 -798 lv
0.8 fp
-456 -903 mv
-444 -882 lv
-420 -882 lv
-408 -903 lv
-420 -924 lv
-444 -924 lv
-456 -903 lv
0.8 fp
-420 -882 mv
-408 -861 lv
-384 -861 lv
-372 -882 lv
-384 -903 lv
-408 -903 lv
-420 -882 lv
0.8 fp
-384 -861 mv
-372 -840 lv
-348 -840 lv
-336 -861 lv
-348 -882 lv
-372 -882 lv
-384 -861 lv
0.8 fp
-348 -840 mv
-336 -819 lv
-312 -819 lv
-300 -840 lv
-312 -861 lv
-336 -861 lv
-348 -840 lv
0.8 fp
-312 -819 mv
-300 -798 lv
-276 -798 lv
-264 -819 lv
-276 -840 lv
-300 -840 lv
-312 -819 lv
0.8 fp
-420 -924 mv
-408 -903 lv
-384 -903 lv
-372 -924 lv
-384 -945 lv
-408 -945 lv
-420 -924 lv
0.8 fp
-384 -903 mv
-372 -882 lv
-348 -882 lv
-336 -903 lv
-348 -924 lv
-372 -924 lv
-384 -903 lv
0.8 fp
-348 -882 mv
-336 -861 lv
-312 -861 lv
-300 -882 lv
-312 -903 lv
-336 -903 lv
-348 -882 lv
0.8 fp
-312 -861 mv
-300 -840 lv
-276 -840 lv
-264 -861 lv
-276 -882 lv
-300 -882 lv
-312 -861 lv
0.8 fp
-276 -840 mv
-264 -819 lv
-240 -819 lv
-228 -840 lv
-240 -861 lv
-264 -861 lv
-276 -840 lv
0.8 fp
-360 -819 mv
15 0 fc
-396 -798 mv
15 0 fc
-396 -756 mv
15 0 fc
-324 -840 mv
15 0 fc
-396 -840 mv
15 1 fc
15 cr
-432 -777 mv
15 1 fc
15 cr
-360 -861 mv
15 1 fc
15 cr
es
bs
-24 -840 mv
-12 -819 lv
12 -819 lv
24 -840 lv
12 -861 lv
-12 -861 lv
-24 -840 lv
0.8 fp
12 -819 mv
24 -798 lv
48 -798 lv
60 -819 lv
48 -840 lv
24 -840 lv
12 -819 lv
0.8 fp
48 -798 mv
60 -777 lv
84 -777 lv
96 -798 lv
84 -819 lv
60 -819 lv
48 -798 lv
0.8 fp
84 -777 mv
96 -756 lv
120 -756 lv
132 -777 lv
120 -798 lv
96 -798 lv
84 -777 lv
0.8 fp
120 -756 mv
132 -735 lv
156 -735 lv
168 -756 lv
156 -777 lv
132 -777 lv
120 -756 lv
0.8 fp
12 -861 mv
24 -840 lv
48 -840 lv
60 -861 lv
48 -882 lv
24 -882 lv
12 -861 lv
0.8 fp
48 -840 mv
60 -819 lv
84 -819 lv
96 -840 lv
84 -861 lv
60 -861 lv
48 -840 lv
0.8 fp
84 -819 mv
96 -798 lv
120 -798 lv
132 -819 lv
120 -840 lv
96 -840 lv
84 -819 lv
0.8 fp
120 -798 mv
132 -777 lv
156 -777 lv
168 -798 lv
156 -819 lv
132 -819 lv
120 -798 lv
0.8 fp
156 -777 mv
168 -756 lv
192 -756 lv
204 -777 lv
192 -798 lv
168 -798 lv
156 -777 lv
0.8 fp
48 -882 mv
60 -861 lv
84 -861 lv
96 -882 lv
84 -903 lv
60 -903 lv
48 -882 lv
0.8 fp
84 -861 mv
96 -840 lv
120 -840 lv
132 -861 lv
120 -882 lv
96 -882 lv
84 -861 lv
0.8 fp
120 -840 mv
132 -819 lv
156 -819 lv
168 -840 lv
156 -861 lv
132 -861 lv
120 -840 lv
0.8 fp
156 -819 mv
168 -798 lv
192 -798 lv
204 -819 lv
192 -840 lv
168 -840 lv
156 -819 lv
0.8 fp
192 -798 mv
204 -777 lv
228 -777 lv
240 -798 lv
228 -819 lv
204 -819 lv
192 -798 lv
0.8 fp
84 -903 mv
96 -882 lv
120 -882 lv
132 -903 lv
120 -924 lv
96 -924 lv
84 -903 lv
0.8 fp
120 -882 mv
132 -861 lv
156 -861 lv
168 -882 lv
156 -903 lv
132 -903 lv
120 -882 lv
0.8 fp
156 -861 mv
168 -840 lv
192 -840 lv
204 -861 lv
192 -882 lv
168 -882 lv
156 -861 lv
0.8 fp
192 -840 mv
204 -819 lv
228 -819 lv
240 -840 lv
228 -861 lv
204 -861 lv
192 -840 lv
0.8 fp
228 -819 mv
240 -798 lv
264 -798 lv
276 -819 lv
264 -840 lv
240 -840 lv
228 -819 lv
0.8 fp
120 -924 mv
132 -903 lv
156 -903 lv
168 -924 lv
156 -945 lv
132 -945 lv
120 -924 lv
0.8 fp
156 -903 mv
168 -882 lv
192 -882 lv
204 -903 lv
192 -924 lv
168 -924 lv
156 -903 lv
0.8 fp
192 -882 mv
204 -861 lv
228 -861 lv
240 -882 lv
228 -903 lv
204 -903 lv
192 -882 lv
0.8 fp
228 -861 mv
240 -840 lv
264 -840 lv
276 -861 lv
264 -882 lv
240 -882 lv
228 -861 lv
0.8 fp
264 -840 mv
276 -819 lv
300 -819 lv
312 -840 lv
300 -861 lv
276 -861 lv
264 -840 lv
0.8 fp
180 -819 mv
15 0 fc
144 -798 mv
15 0 fc
144 -756 mv
15 0 fc
180 -861 mv
15 0 fc
144 -840 mv
15 1 fc
15 cr
108 -777 mv
15 1 fc
15 cr
216 -840 mv
15 1 fc
15 cr
es
bs
516 -840 mv
528 -819 lv
552 -819 lv
564 -840 lv
552 -861 lv
528 -861 lv
516 -840 lv
0.8 fp
552 -819 mv
564 -798 lv
588 -798 lv
600 -819 lv
588 -840 lv
564 -840 lv
552 -819 lv
0.8 fp
588 -798 mv
600 -777 lv
624 -777 lv
636 -798 lv
624 -819 lv
600 -819 lv
588 -798 lv
0.8 fp
624 -777 mv
636 -756 lv
660 -756 lv
672 -777 lv
660 -798 lv
636 -798 lv
624 -777 lv
0.8 fp
660 -756 mv
672 -735 lv
696 -735 lv
708 -756 lv
696 -777 lv
672 -777 lv
660 -756 lv
0.8 fp
552 -861 mv
564 -840 lv
588 -840 lv
600 -861 lv
588 -882 lv
564 -882 lv
552 -861 lv
0.8 fp
588 -840 mv
600 -819 lv
624 -819 lv
636 -840 lv
624 -861 lv
600 -861 lv
588 -840 lv
0.8 fp
624 -819 mv
636 -798 lv
660 -798 lv
672 -819 lv
660 -840 lv
636 -840 lv
624 -819 lv
0.8 fp
660 -798 mv
672 -777 lv
696 -777 lv
708 -798 lv
696 -819 lv
672 -819 lv
660 -798 lv
0.8 fp
696 -777 mv
708 -756 lv
732 -756 lv
744 -777 lv
732 -798 lv
708 -798 lv
696 -777 lv
0.8 fp
588 -882 mv
600 -861 lv
624 -861 lv
636 -882 lv
624 -903 lv
600 -903 lv
588 -882 lv
0.8 fp
624 -861 mv
636 -840 lv
660 -840 lv
672 -861 lv
660 -882 lv
636 -882 lv
624 -861 lv
0.8 fp
660 -840 mv
672 -819 lv
696 -819 lv
708 -840 lv
696 -861 lv
672 -861 lv
660 -840 lv
0.8 fp
696 -819 mv
708 -798 lv
732 -798 lv
744 -819 lv
732 -840 lv
708 -840 lv
696 -819 lv
0.8 fp
732 -798 mv
744 -777 lv
768 -777 lv
780 -798 lv
768 -819 lv
744 -819 lv
732 -798 lv
0.8 fp
624 -903 mv
636 -882 lv
660 -882 lv
672 -903 lv
660 -924 lv
636 -924 lv
624 -903 lv
0.8 fp
660 -882 mv
672 -861 lv
696 -861 lv
708 -882 lv
696 -903 lv
672 -903 lv
660 -882 lv
0.8 fp
696 -861 mv
708 -840 lv
732 -840 lv
744 -861 lv
732 -882 lv
708 -882 lv
696 -861 lv
0.8 fp
732 -840 mv
744 -819 lv
768 -819 lv
780 -840 lv
768 -861 lv
744 -861 lv
732 -840 lv
0.8 fp
768 -819 mv
780 -798 lv
804 -798 lv
816 -819 lv
804 -840 lv
780 -840 lv
768 -819 lv
0.8 fp
660 -924 mv
672 -903 lv
696 -903 lv
708 -924 lv
696 -945 lv
672 -945 lv
660 -924 lv
0.8 fp
696 -903 mv
708 -882 lv
732 -882 lv
744 -903 lv
732 -924 lv
708 -924 lv
696 -903 lv
0.8 fp
732 -882 mv
744 -861 lv
768 -861 lv
780 -882 lv
768 -903 lv
744 -903 lv
732 -882 lv
0.8 fp
768 -861 mv
780 -840 lv
804 -840 lv
816 -861 lv
804 -882 lv
780 -882 lv
768 -861 lv
0.8 fp
804 -840 mv
816 -819 lv
840 -819 lv
852 -840 lv
840 -861 lv
816 -861 lv
804 -840 lv
0.8 fp
720 -819 mv
15 0 fc
684 -798 mv
15 0 fc
684 -756 mv
15 0 fc
792 -819 mv
15 0 fc
684 -840 mv
15 1 fc
15 cr
648 -777 mv
15 1 fc
15 cr
756 -882 mv
15 1 fc
15 cr
es
stroke end showpage
%%Trailer:
%%BoundingBox: -135 -245 204 25
%%EOF

%%EndDocument
 @endspecial 2208 470 a Fk(S)2136 428 y(S)2064 386 y(S)2136
512 y(S)2064 470 y(S)2064 554 y(S)1992 512 y(S)1992 596
y(S)1914 738 y(G)969 793 y Fw(White)24 b(to)h(mo)n(v)n(e)e(loses,)g
(Blac)n(k)h(win-link)f Fk(S)g Fw(=)c Fh(f)p Fk(S)2322
802 y Fg(2)2373 793 y Fh([)d Fk(y)2471 802 y Fg(2)2505
793 y Fh(g)g([)g(f)p Fk(S)2697 802 y Fg(3)2747 793 y
Fh([)g Fk(y)2845 802 y Fg(3)2879 793 y Fh(g)973 1297
y Fk(y)1008 1306 y Fg(1)1041 1343 y Fk(S)1084 1352 y
Fg(1)969 1385 y Fk(S)1012 1394 y Fg(1)754 1569 y Fk(G)g
Fw(+)f Fk(x)935 1578 y Fg(1)348 1637 y Fw(Blac)n(k)24
b(wins,)f(win-w)n(eaklink)h Fk(S)1193 1646 y Fg(1)1243
1637 y Fh([)16 b Fk(y)1341 1646 y Fg(1)1981 1339 y Fk(y)2016
1348 y Fg(2)2049 1385 y Fk(S)2092 1394 y Fg(2)1977 1427
y Fk(S)2020 1436 y Fg(2)1834 1569 y Fk(G)g Fw(+)f Fk(x)2015
1578 y Fg(2)1429 1637 y Fw(Blac)n(k)24 b(wins,)e(win-w)n(eaklink)i
Fk(S)2273 1646 y Fg(2)2323 1637 y Fh([)16 b Fk(y)2421
1646 y Fg(2)3205 1255 y Fk(y)3240 1264 y Fg(3)3273 1301
y Fk(S)3316 1310 y Fg(3)3201 1343 y Fk(S)3244 1352 y
Fg(3)3129 1301 y Fk(S)3172 1310 y Fg(3)3129 1217 y Fk(S)3172
1226 y Fg(3)2914 1569 y Fk(G)g Fw(+)f Fk(x)3095 1578
y Fg(3)2509 1637 y Fw(Blac)n(k)24 b(wins,)e(win-w)n(eaklink)i
Fk(S)3353 1646 y Fg(3)3403 1637 y Fh([)16 b Fk(y)3501
1646 y Fg(3)1041 2183 y Fk(S)1084 2192 y Fg(1)969 2225
y Fk(S)1012 2234 y Fg(1)676 2405 y Fk(G)g Fw(+)f Fk(x)857
2414 y Fg(1)907 2405 y Fw(+)h Fk(y)1013 2414 y Fg(1)487
2477 y Fw(White)25 b(loses,)e(win-link)g Fk(S)1202 2486
y Fg(1)2049 2225 y Fk(S)2092 2234 y Fg(2)1977 2267 y
Fk(S)2020 2276 y Fg(2)1756 2405 y Fk(G)16 b Fw(+)f Fk(x)1937
2414 y Fg(2)1987 2405 y Fw(+)h Fk(y)2093 2414 y Fg(2)1567
2477 y Fw(White)25 b(loses,)e(win-link)g Fk(S)2282 2486
y Fg(2)3273 2141 y Fk(S)3316 2150 y Fg(3)3201 2183 y
Fk(S)3244 2192 y Fg(3)3129 2141 y Fk(S)3172 2150 y Fg(3)3129
2057 y Fk(S)3172 2066 y Fg(3)2836 2405 y Fk(G)16 b Fw(+)f
Fk(x)3017 2414 y Fg(3)3067 2405 y Fw(+)h Fk(y)3173 2414
y Fg(3)2647 2477 y Fw(White)25 b(loses,)e(win-link)g
Fk(S)3362 2486 y Fg(3)1094 2669 y Fs(Fig.)31 b(5.)g(An)f(example)g
(illustrating)d(Theorem)j(3.)0 2853 y Fr(an)m(y)j(Hex)g(state)g(has)f
(exactly)h(one)g(winner.)f(This)h(fact)f(in)f(turn)i(requires)g(some)f
(care)h(to)e(pro)m(v)m(e;)j(see)f(for)0 2973 y(example)f([4,10,14].)
3031 b Fj(2)0 3264 y Fr(Figure)23 b(5)h(illustrates)f(Theorem)h(3.)g
(The)h(ro)s(ot)f(state)g Fo(G)g Fr(is)g(a)g(loss)g(for)g(White.)g
(Three)h(of)f(White's)h(p)s(ossible)0 3384 y(mo)m(v)m(es)33
b(are)e(explored.)h(In)g(eac)m(h)h(state)f Fo(G)20 b
Fr(+)g Fo(x)1696 3399 y Fk(i)1724 3384 y Fr(,)32 b(the)g(mo)m(v)m(e)g
Fo(y)2249 3399 y Fk(i)2308 3384 y Fr(yields)f(a)h(blac)m(k)g(win;)f
(the)h(resulting)f(state)0 3504 y Fo(G)23 b Fr(+)f Fo(x)253
3519 y Fk(i)305 3504 y Fr(+)h Fo(y)452 3519 y Fk(i)513
3504 y Fr(has)34 b(a)f(blac)m(k)h(win-link)d(carrier)i
Fo(S)1773 3519 y Fk(i)1802 3504 y Fr(,)g(so)h Fo(G)23
b Fr(+)f Fo(x)2236 3519 y Fk(i)2298 3504 y Fr(has)34
b(a)g(blac)m(k)f(win-w)m(eaklink)g(with)h(carrier)0 3625
y Fo(S)60 3640 y Fk(i)91 3625 y Fn([)s Fo(y)208 3640
y Fk(i)237 3625 y Fr(;)23 b(this)g(win-w)m(eaklink)g(implies)e(that)i
Fo(x)1626 3640 y Fk(i)1677 3625 y Fr(loses)h(in)e Fo(G)p
Fr(,)i(and)f(moreo)m(v)m(er)h(that)f Fq(any)g Fr(white)g(mo)m(v)m(e)h
(outside)0 3745 y(of)36 b Fo(S)175 3760 y Fk(i)229 3745
y Fn([)25 b Fo(y)368 3760 y Fk(i)433 3745 y Fr(loses.)37
b(The)h(in)m(tersection)e(of)h(these)h(three)f(win-w)m(eaklink)g
(carriers)f(is)h(empt)m(y)-8 b(.)37 b(Indeed,)i(the)0
3866 y(in)m(tersection)29 b(of)g(just)h(the)f(t)m(w)m(o)h(win-w)m
(eaklink)f(carriers)g Fo(S)2152 3881 y Fw(2)2207 3866
y Fn([)15 b Fo(y)2336 3881 y Fw(2)2405 3866 y Fr(and)29
b Fo(S)2651 3881 y Fw(3)2706 3866 y Fn([)15 b Fo(y)2835
3881 y Fw(3)2904 3866 y Fr(is)29 b(already)g(empt)m(y)-8
b(,)29 b(whic)m(h)0 3986 y(means)41 b(that)h(the)f(union)g(of)g(these)i
(t)m(w)m(o)f(win-w)m(eaklink)e(carriers)i(is)e(a)i(blac)m(k)f(win-link)
f(in)g Fo(G)p Fr(.)h(It)h(also)0 4106 y(means)31 b(that)g(the)h
(exploration)e(of)h(these)h(t)m(w)m(o)g(branc)m(hes)h(of)e(the)h
(game-tree)e(is)h(su\016cien)m(t)h(to)f(determine)0 4227
y(that)h(White)h(loses)f Fo(G)p Fr(;)h(the)g(consideration)f(of)g(an)m
(y)h(other)g(mo)m(v)m(e)g(is)f(unnecessary)-8 b(.)0 4397
y(Notice)48 b(that)f(these)j(rules)e(are)g(b)m(y)h(their)e
(de\014nition)g(complete:)h(they)g(can)h(b)s(e)f(used)h(to)f(solv)m(e)g
(an)m(y)0 4517 y(arbitrary)32 b(Hex)h(state.)0 4688 y(F)-8
b(rom)25 b(a)h(computational)d(p)s(oin)m(t)j(of)g(view,)g(the)h
(di\016cult)m(y)f(with)g(the)h(t)m(w)m(o)g(preceding)g(sets)g(of)f
(rules)g(is)g(that)0 4808 y(the)g(n)m(um)m(b)s(er)h(of)e(p)s(ossible)h
(connection)g(subgames)g(that)g(can)g(b)s(e)h(computed)f(in)f(this)h(w)
m(a)m(y)h(is)f(exp)s(onen)m(tial)0 4928 y(in)g(the)g(n)m(um)m(b)s(er)h
(of)f(cells.)g(F)-8 b(or)25 b(this)h(reason,)h(an)f(exhaustiv)m(e)i
(approac)m(h)f(to)f(computing)f(connection)i(sub-)0 5049
y(games)j(based)h(on)e(either)h(rule)g(set)g(will)e(b)s(e)i(forced)h
(to)e(limit)e(the)j(n)m(um)m(b)s(er)h(of)e(in)m(termediate)g
(connection)0 5169 y(subgames)k(computed.)0 5339 y(F)-8
b(or)39 b(b)s(oth)g(the)h(static)f(and)h(dynamic)f(computational)e(pro)
s(cesses,)42 b(what)e(is)f(needed)i(is)e(some)h(w)m(a)m(y)g(of)0
5460 y(distinguishing)34 b(those)j(in)m(termediate)f(connection)g(sets)
i(that)f(are)f(critical)e(to)i(solving)g(the)h(particular)0
5580 y(state)d(from)f(those)h(that)g(are)g(not.)g(W)-8
b(e)34 b(close)g(this)f(section)h(b)m(y)h(giving)d(evidence)j(that)f
(this)f(is)h(lik)m(ely)e(to)1909 5912 y(7)p eop
%%Page: 8 8
8 7 bop 0 323 a Fr(b)s(e)33 b(a)f(di\016cult)g(problem.)0
493 y(Assume)41 b(that)e(at)h(some)f(p)s(oin)m(t)g(in)g(a)g
(computation)g(in)m(v)m(olving)f(the)i(dynamic)f(rules)h(it)f(is)g
(disco)m(v)m(ered)0 614 y(that)44 b(pla)m(y)m(er)h Fo(P)58
b Fr(has)45 b(no)g(winning)e(mo)m(v)m(e)i(in)f(a)h(state)g
Fo(G)p Fr(.)f(It)h(follo)m(ws)e(that)i Fo(P)14 b Fr('s)44
b(opp)s(onen)m(t)h Fo(Q)g Fr(has)g(a)0 734 y(win-w)m(eaklink)40
b Fo(S)656 749 y Fk(x)740 734 y Fr(after)h(eac)m(h)g(p)s(ossible)f(mo)m
(v)m(e)h Fo(x)g Fr(b)m(y)g Fo(P)54 b Fr(and)41 b(that)f(the)h(union)f
(of)g(an)m(y)h(collection)d(of)0 854 y(these)g(win-w)m(eaklinks)f(whic)
m(h)h(ha)m(v)m(e)g(an)f(empt)m(y)h(in)m(tersection)f(establishes)g(a)g
(win-link)e(for)h Fo(Q)p Fr(.)i(If)f Fo(G)f Fr(is)0 975
y(an)d(in)m(termediate)f(state)i(in)e(the)i(pro)s(cess)g(of)f(solving)f
(some)h(earlier)f(state,)i(then)g Fo(P)46 b Fr(needs)35
b(to)e(compute)0 1095 y(suc)m(h)45 b(a)e(win-link)e(to)i(pass)h(bac)m
(k)h(to)e(the)h(state)f(that)g(ga)m(v)m(e)i(rise)e(to)g
Fo(G)p Fr(.)g(It)h(is)e(reasonable)i(to)f(exp)s(ect)0
1216 y(that)i(a)f(useful)h(win-link)e(to)h(pass)i(bac)m(k)f(w)m(ould)g
(b)s(e)g(one)g(that)g(has)g(the)g(smallest)e(n)m(um)m(b)s(er)i(of)g
(cells,)0 1336 y(among)f(all)g(suc)m(h)i(p)s(ossible)f(win-links.)f(Ho)
m(w)m(ev)m(er,)k(it)c(is)h(also)g(reasonable)g(to)g(exp)s(ect)i(this)e
(problem)0 1456 y(to)39 b(b)s(e)g(computationally)d(di\016cult,)j
(since)g(it)f(seems)j(to)d(b)s(e)i(in)m(timately)c(related)j(to)g
(determining)f(the)0 1577 y(outcome)c(of)g(a)g(Hex)h(game,)e(whic)m(h)i
(w)m(e)h(ha)m(v)m(e)f(already)f(noted)h(is)f(PSP)-8 b(A)m(CE-complete.)
35 b(Saks)g(observ)m(ed)0 1697 y(that)d(this)h(problem)e(is)h(indeed)h
(computationally)c(di\016cult,)j(as)h(w)m(e)h(no)m(w)f(explain.)0
1867 y(The)43 b Fq(Minimum-Union)g(Empty)g(Interse)-5
b(ction)43 b(Pr)-5 b(oblem)43 b(\(MUEIP\))f Fr(is)g(the)g(decision)f
(problem)g(that)0 1988 y(tak)m(es)g(as)f(input)f(an)h(in)m(teger)f
Fo(k)k Fr(together)d(with)f(a)h(set)g Fo(S)46 b Fr(=)39
b Fn(f)p Fo(S)2417 2003 y Fw(1)2457 1988 y Fo(;)17 b(:)g(:)g(:)e(;)i(S)
2735 2003 y Fk(t)2765 1988 y Fn(g)39 b Fr(of)g(subsets)j(of)d(a)h
(\014nite)f(set)0 2108 y Fo(V)59 b Fr(and)38 b(asks)g(whether)h(there)g
(is)e(a)g(subset)i Fo(T)51 b Fr(of)37 b Fo(S)44 b Fr(suc)m(h)39
b(that)e(the)h(in)m(tersection)g(of)f(the)h(sets)g(in)f
Fo(T)51 b Fr(is)0 2228 y(empt)m(y)40 b(and)f(the)h(union)f(of)g(the)h
(sets)g(in)f Fo(T)53 b Fr(has)40 b(size)f(at)g(most)g
Fo(k)s Fr(.)g Fq(Minimum)i(Cover)e Fr(is)g(the)g(decision)0
2349 y(problem)31 b(that)h(tak)m(es)i(as)e(input)g(an)h(in)m(teger)f
Fo(k)j Fr(together)e(with)f(a)g(set)h Fo(A)28 b Fr(=)f
Fn(f)p Fo(A)2930 2364 y Fw(1)2970 2349 y Fo(;)17 b(:)g(:)g(:)f(;)h(A)
3262 2364 y Fk(t)3291 2349 y Fn(g)32 b Fr(of)g(subsets)i(of)0
2469 y(a)f(\014nite)f(set)i Fo(V)55 b Fr(and)33 b(asks)h(whether)g
(there)g(is)f(a)f(subset)j(of)e(at)f(most)h Fo(k)j Fr(elemen)m(ts)d(of)
g Fo(A)g Fr(whose)h(union)e(is)0 2590 y Fo(V)22 b Fr(.)28
b(Minim)m(um)f(Co)m(v)m(er,)k(referred)e(to)g(as)g(Problem)f([SP5])h
(in)f(the)i(text)f(b)m(y)h(Garey)f(and)g(Johnson)g([13])g(and)0
2710 y(sometimes)j(also)f(kno)m(wn)j(as)f(Minim)m(um)d(Set)j(Co)m(v)m
(er,)h(w)m(as)g(sho)m(wn)g(to)e(b)s(e)h(NP-complete)f(b)m(y)h(Karp)g
([18].)0 2880 y Fp(Theorem)k(4)49 b Fq(\(Michael)34 b(Saks,)g(private)h
(c)-5 b(ommunic)g(ation\))33 b(MUEIP)i(is)g(NP-c)-5 b(omplete.)0
3050 y(Pr)g(o)g(of.)29 b Fr(Consider)g(an)g(instance)h(of)f(Minim)m(um)
e(Co)m(v)m(er,)k(where)f Fo(k)s Fr(,)f Fo(A)p Fr(,)h(and)f
Fo(V)51 b Fr(are)29 b(as)g(de\014ned)i(ab)s(o)m(v)m(e)f(and)0
3171 y Fo(n)i Fr(=)h Fn(j)p Fo(V)21 b Fn(j)p Fr(.)35
b(This)g(instance)h(can)f(b)s(e)h(transformed)f(in)f(p)s(olynomial)e
(time)i(in)m(to)g(an)h(instance)h(of)f(MUEIP)-8 b(,)0
3291 y(as)33 b(follo)m(ws.)0 3461 y(F)-8 b(or)40 b(eac)m(h)i(index)f
Fo(j)6 b Fr(,)42 b(let)e Fo(B)1020 3476 y Fk(j)1097 3461
y Fr(b)s(e)i(the)f(set)h(complemen)m(t)e(\(with)h(resp)s(ect)h(to)f
Fo(V)21 b Fr(\))41 b(of)g Fo(A)3218 3476 y Fk(j)3254
3461 y Fr(;)g(also,)g(let)f Fo(B)47 b Fr(=)0 3582 y Fn(f)p
Fo(B)124 3597 y Fw(1)163 3582 y Fo(;)17 b(:)g(:)g(:)f(;)h(B)456
3597 y Fk(t)486 3582 y Fn(g)p Fr(.)41 b(Observ)m(e)j(that)d(the)h
(union)f(of)g Fo(k)k Fr(elemen)m(ts)d(of)f Fo(A)h Fr(is)f(equal)g(to)h
Fo(V)63 b Fr(if)40 b(and)i(only)f(if)g(the)0 3702 y(in)m(tersection)d
(of)f(the)h(corresp)s(onding)f Fo(k)k Fr(elemen)m(ts)d(of)f
Fo(B)43 b Fr(is)37 b(empt)m(y)-8 b(.)38 b(Let)g Fo(V)2862
3666 y Fh(0)2923 3702 y Fr(b)s(e)f(the)i(set)f(obtained)f(b)m(y)0
3822 y(adding)c Fo(t)p Fr(\()p Fo(n)24 b Fr(+)f(1\))34
b(new)h(elemen)m(ts)f(to)g Fo(V)22 b Fr(.)34 b(F)-8 b(or)33
b(eac)m(h)i(index)g Fo(j)6 b Fr(,)34 b(let)g Fo(B)2550
3786 y Fh(0)2545 3847 y Fk(j)2615 3822 y Fr(b)s(e)h(the)f(set)h
(obtained)f(b)m(y)h(adding)0 3943 y Fo(n)23 b Fr(+)g(1)34
b(of)f(the)h(new)h(elemen)m(ts)f(to)g Fo(B)1341 3958
y Fk(j)1411 3943 y Fr(in)f(suc)m(h)i(a)f(w)m(a)m(y)h(that)f(eac)m(h)h
Fo(B)2537 3958 y Fk(j)2607 3943 y Fr(gets)f(expanded)i(b)m(y)f(a)e(set)
i(of)e(new)0 4063 y(elemen)m(ts)g(disjoin)m(t)f(from)g(all)e(other)j
(new)h(elemen)m(ts.)g(Let)f Fo(B)2250 4027 y Fh(0)2301
4063 y Fr(=)28 b Fn(f)p Fo(B)2534 4027 y Fh(0)2529 4088
y Fw(1)2569 4063 y Fo(;)17 b(:)g(:)g(:)f(;)h(B)2867 4027
y Fh(0)2862 4088 y Fk(t)2891 4063 y Fn(g)p Fr(.)33 b(Observ)m(e)i(that)
d(a)h(set)g(of)0 4184 y Fo(k)k Fr(elemen)m(ts)e(of)f
Fo(B)39 b Fr(has)c(empt)m(y)g(in)m(tersection)f(if)f(and)i(only)f(if)f
(the)i(corresp)s(onding)f(set)h(of)f Fo(k)j Fr(elemen)m(t)d(of)0
4304 y Fo(B)79 4268 y Fh(0)131 4304 y Fr(has)c(empt)m(y)f(in)m
(tersection,)g(and)g(this)f(o)s(ccurs)i(if)e(and)h(only)f(if)g(the)h
(same)g(set)g(of)g Fo(k)j Fr(elemen)m(ts)d(of)f Fo(B)3706
4268 y Fh(0)3759 4304 y Fr(has)0 4424 y(empt)m(y)33 b(in)m(tersection)g
(and)f(union)g(with)g(size)h(at)f(most)g Fo(k)s Fr(\()p
Fo(n)23 b Fr(+)f(1\))g(+)g Fo(n)p Fr(.)0 4595 y(Since)36
b(MUEIP)h(is)e(clearly)g(in)g(NP)-8 b(,)36 b(the)g(theorem)g(follo)m
(ws)e(from)h(the)h(preceding)g(transformation)e(and)0
4715 y(the)f(fact)f(that)h(Minim)m(um)d(Co)m(v)m(er)k(is)e(NP-complete)
g([18].)1637 b Fj(2)0 5005 y Fr(Kiefer)34 b(recen)m(tly)j(sho)m(w)m(ed)
g(that)e(computing)f(virtual)f(connections)j(using)f(only)f(the)i
(static)f(com)m(bining)0 5125 y(rules)28 b(describ)s(ed)g(earlier)e(is)
h(PSP)-8 b(A)m(CE-complete)28 b([19].)g(Theorem)g(4)f(suggests)i(that)e
(computing)f(virtual)0 5246 y(connections)f(using)e(dynamic)h(com)m
(bining)e(rules)i(is)f(also)h(lik)m(ely)e(to)i(b)s(e)g(computationally)
d(di\016cult.)i(Th)m(us)0 5366 y(an)m(y)i(algorithm)d(that)j(solv)m(es)
g(arbitrary)f(Hex)i(states)f(b)m(y)h(computing)e(virtual)f(connections)
i(dynamically)0 5487 y(and/or)36 b(statically)f(will)g(probably)h(need)
i(to)e(use)i(some)e(extra)i(game)e(kno)m(wledge)h(in)f(order)h(to)g
(reduce)1909 5912 y(8)p eop
%%Page: 9 9
9 8 bop 0 323 a Fr(the)33 b(complexit)m(y)g(of)f(searc)m(hing)i
(through)e(the)i(game-tree.)e(W)-8 b(e)33 b(discuss)i(some)d(suc)m(h)j
(reductions)e(in)g(the)0 443 y(next)g(section.)0 898
y Fp(3)112 b(Game-State)38 b(Reduction:)f(Domination)e(and)k(Fill-in)0
1188 y Fr(One)k(reason)h(that)e(Hex)i(is)f(a)f(c)m(hallenge)h(for)f
(computers)i(to)e(pla)m(y)h(or)g(solv)m(e)g(is)f(the)i(high)e(branc)m
(hing)0 1309 y(factor;)36 b(esp)s(ecially)f(in)h(the)g(early)g(stages)h
(of)f(the)h(game,)e(the)i(n)m(um)m(b)s(er)g(of)e(p)s(ossible)h(mo)m(v)m
(es)h(is)f(high.)g(In)0 1429 y(this)31 b(section)g(w)m(e)i(describ)s(e)
e(t)m(w)m(o)h(kinds)g(of)f(game-state)f(reductions.)i(Eac)m(h)g
(reduction)f(strengthens)j(the)0 1549 y(algorithm)h(implicitly)g
(describ)s(ed)k(b)m(y)h(the)f(virtual)e(connection)i(comp)s(osition)d
(rules)i(of)g(the)h(previous)0 1670 y(section)32 b(b)m(y)h(allo)m(wing)
d(the)i(game-tree)g(to)f(b)s(e)i(pruned.)g(W)-8 b(e)32
b(refer)h(to)e(these)j(reductions)e(as)h(domination)0
1790 y(and)g(\014ll-in.)0 1960 y(Informally)-8 b(,)29
b(one)i(mo)m(v)m(e)h(dominates)e(another)h(if)f(the)h(former)f(is)h(at)
g(least)g(as)g(go)s(o)s(d)f(as)h(the)h(latter.)e(Since)0
2081 y(w)m(e)36 b(are)f(in)m(terested)h(here)g(only)f(in)f(determining)
f(the)j(v)-5 b(alue)34 b(of)h(a)f(game-state,)h(one)g(mo)m(v)m(e)g(is)g
(\\at)f(least)0 2201 y(as)k(go)s(o)s(d)e(as")i(another)g(if)e(the)i
(former)f(yields)g(a)h(win)f(whenev)m(er)j(the)e(latter)f(yields)g(a)h
(win.)f(F)-8 b(ormally)g(,)0 2321 y(for)40 b(p)s(ossible)g(mo)m(v)m(es)
i Fo(u;)17 b(v)44 b Fr(from)c(a)g(state)h Fo(G)h Fr(=)g(\()p
Fo(B)5 b(;)17 b(P)s(;)g(Q)p Fr(\),)40 b(w)m(e)i(sa)m(y)g(that)e
Fo(u)h Fq(dominates)e Fo(v)45 b Fr(if)40 b Fo(P)54 b
Fr(wins)0 2442 y(\()p Fo(B)27 b Fr(+)22 b Fo(u)293 2457
y Fk(P)351 2442 y Fo(;)17 b(Q;)g(P)d Fr(\))32 b(whenev)m(er)j
Fo(P)46 b Fr(wins)33 b(\()p Fo(B)27 b Fr(+)22 b Fo(v)1707
2457 y Fk(P)1766 2442 y Fo(;)17 b(Q;)g(P)d Fr(\).)0 2612
y(Domination)33 b(results)j(are)g(useful)g(for)f(our)h(purp)s(oses)h
(since,)g(in)e(searc)m(hing)h(the)h(game-tree)e(for)g(a)h(win-)0
2732 y(ning)h(mo)m(v)m(e,)i(a)f(dominated)f(mo)m(v)m(e)i(at)f(a)g
(particular)e(state)j(can)f(b)s(e)h(ignored)e(as)i(long)e(as)h(at)g
(least)g(one)0 2853 y(dominating)28 b(mo)m(v)m(e)j(at)g(that)f(state)i
(is)e(considered.)i(Unfortunately)-8 b(,)30 b(few)i(Hex)g(domination)c
(results)j(are)0 2973 y(kno)m(wn.)42 b(One)f(suc)m(h)i(result)d(is)h
(due)g(to)f(Bec)m(k,)j(who)e(pro)m(v)m(ed)h(that)f(on)f(an)h(empt)m(y)g
(b)s(oard)g(size)g(2)p Fn(\002)p Fr(2)f(or)0 3093 y(larger,)e(mo)m
(ving)g(to)h(an)g(acute)g(corner)h(is)f(a)g(losing,)e(and)i(so)h
(dominated,)e(mo)m(v)m(e)h([4].)g(The)h(b)s(oard)f(cell)0
3214 y(co)s(ordinate)27 b(system)j(w)m(e)f(use)g(in)f(this)g(pap)s(er)g
(is)g(sho)m(wn)i(in)d(Figure)h(6)g(and)g(subsequen)m(t)k(\014gures.)d
(The)g(t)m(w)m(o)0 3334 y(acute)k(corners)h(of)e(the)h(b)s(oards)f(of)g
(Figure)g(6)g(are)h(A1)f(and)h(G7.)0 3504 y(\\Fill-in")38
b(refers)43 b(to)f(placing)f(stones)i(on)f(a)g(b)s(oard)g(that)g(do)h
(not)f(alter)f(the)i(v)-5 b(alue)42 b(of)g(an)g(asso)s(ciated)0
3625 y(game-state.)31 b(Ha)m(yw)m(ard)j(recen)m(tly)f(established)f(a)g
(domination)e(and)i(\014ll-in)d(result)k(in)m(v)m(olving)d(a)i(certain)
0 3745 y(three-cell)g(con\014guration)f([16];)i(this)f(is)g(explained)g
(in)g(Theorem)h(5.)0 3915 y(Our)26 b(algorithm)e(uses)k(Theorem)f(5)f
(in)g(t)m(w)m(o)h(w)m(a)m(ys.)h(Firstly)-8 b(,)25 b(for)h(an)m(y)i
(state)f(\()p Fo(B)5 b(;)17 b(P)s(;)g(Q)p Fr(\))25 b(with)i(an)f(empt)m
(y)h Fo(P)14 b Fr(-)0 4036 y(triangle,)25 b(the)j(t)m(w)m(o)g
Fo(P)14 b Fr(-mo)m(v)m(es)27 b(to)g(the)h(side)f(of)g(the)g(triangle)f
(can)h(b)s(e)h(ignored)e(since)i(they)g(are)f(dominated)0
4156 y(b)m(y)i(the)g Fo(P)14 b Fr(-mo)m(v)m(e)28 b(to)g(the)h(tip.)f
(Secondly)-8 b(,)29 b(for)f(an)m(y)h(state)g(\()p Fo(B)5
b(;)17 b(Q;)g(P)d Fr(\))28 b(with)g(a)g Fo(P)14 b Fr(-triangle)26
b(with)i(a)g Fo(P)14 b Fr(-stone)0 4277 y(at)40 b(the)h(tip)f(and)g
(the)h(t)m(w)m(o)g(side)g(cells)f(uno)s(ccupied,)h(eac)m(h)g(cell)e(of)
h(this)h(side)f(pair)g(can)g(b)s(e)h(\014lled)e(with)0
4397 y(a)d Fo(P)14 b Fr(-stone)37 b(without)f(c)m(hanging)g(the)h
(outcome)f(of)g(the)i(game.)d(As)j(can)f(b)s(e)f(seen)i(from)e(Figure)f
(12,)i(the)0 4517 y(second)32 b(result)f(is)f(particularly)e(useful)j
(when)h(com)m(bined)e(with)h(our)f(virtual)g(connection)g(computation)0
4638 y(approac)m(h.)0 4808 y(The)h(k)m(ey)i(idea)c(in)h(the)h(pro)s(of)
f(of)g(Theorem)h(5)f(is)g(that)g(if)g Fo(P)44 b Fr(ev)m(er)32
b(pla)m(ys)e(at)h(the)g(tip)e(of)h(an)h(empt)m(y)g Fo(P)14
b Fr(-side)0 4928 y(triangle,)28 b(it)h(is)g(thereafter)h(p)s(oin)m
(tless)f(for)g Fo(Q)h Fr(to)f(pla)m(y)h(in)m(to)f(either)g(of)g(the)i
(t)m(w)m(o)f(adjacen)m(t)g(side)g(cells.)f(The)0 5049
y(reason)37 b(for)f(this)g(is)g(that)g Fo(P)49 b Fr(could)36
b(immediately)e(reply)i(in)m(to)g(the)g(other)h(side)f(cell)f(and)i
(mak)m(e)f(the)h Fo(Q)p Fr(-)0 5169 y(stone)26 b(\\dead",)g(in)f(the)h
(sense)i(that)d(the)h Fo(Q)p Fr(-stone)g(will)e(not)h(b)s(e)h(in)f(an)m
(y)h(minimal)c(winning)i Fo(Q)p Fr(-c)m(hain.)i(This)0
5289 y(idea)i(has)h(recen)m(tly)g(b)s(een)g(dev)m(elop)s(ed)g(to)g
(establish)f(more)f(general)h(domination)e(and)i(\014ll-in)e(results;)j
(see)0 5410 y([14,7])j(for)g(more)g(details.)0 5580 y(F)-8
b(or)37 b(a)g(pla)m(y)m(er)h Fo(P)14 b Fr(,)37 b(a)h
Fo(P)14 b Fq(-side)38 b(c)-5 b(el)5 b(l)37 b Fr(is)g(an)m(y)h(cell)f
(that)g(b)s(orders)h(one)g(of)f Fo(P)14 b Fr('s)38 b(t)m(w)m(o)g(b)s
(oundary)g(sides,)g(a)g Fo(P)14 b Fq(-)1909 5912 y Fr(9)p
eop
%%Page: 10 10
10 9 bop 0 323 a Fq(side)40 b(p)-5 b(air)39 b Fr(is)f(a)h(set)h
Fn(f)p Fo(x;)17 b(y)t Fn(g)37 b Fr(of)i(t)m(w)m(o)h(adjacen)m(t)f
Fo(P)14 b Fr(-side)38 b(cells,)h(and)g(a)g Fo(P)14 b
Fq(-triangle)37 b Fr(is)i(an)g(ordered)g(triple)0 443
y(\()p Fo(x;)17 b(y)t(;)g(t)p Fr(\))34 b(where)h Fn(f)p
Fo(x;)17 b(y)t Fn(g)34 b Fr(is)g(a)g Fo(P)14 b Fr(-side)34
b(pair)f(and)i Fo(t)g Fr(is)f(the)h(unique)g(b)s(oard)f(cell)f(adjacen)
m(t)i(to)g(b)s(oth)f Fo(x)h Fr(and)0 564 y Fo(y)t Fr(;)e
Fo(t)i Fr(is)f(called)f(the)h Fq(tip)h Fr(of)e(the)i(side)f(triangle.)f
(A)h Fo(P)14 b Fr(-triangle)31 b(is)j Fq(empty)g Fr(if)f(eac)m(h)j
(cell)d(of)g(the)i(triangle)d(is)0 684 y(uno)s(ccupied.)h(See)h(Figure)
d(7.)0 854 y Fp(Theorem)37 b(5)49 b Fq(\(Haywar)-5 b(d)32
b([16]\))f(L)-5 b(et)33 b Fo(B)k Fq(b)-5 b(e)32 b(a)g(b)-5
b(o)g(ar)g(d-state)32 b(with)g(an)f(empty)i Fo(P)14 b
Fq(-triangle)31 b Fr(\()p Fo(x;)17 b(y)t(;)g(t)p Fr(\))p
Fq(.)31 b(Then)0 975 y(a)39 b(player)f Fo(R)i Fq(in)f
Fn(f)p Fo(P)s(;)17 b(Q)p Fn(g)38 b Fq(wins)g(any)h(one)f(of)g(the)h
(four)g(states)g Fr(\()p Fo(B)30 b Fr(+)25 b Fo(t)2607
990 y Fk(P)2666 975 y Fo(;)17 b(Q;)g(P)d Fr(\))p Fq(,)38
b Fr(\()p Fo(B)30 b Fr(+)25 b Fo(t)3292 990 y Fk(P)3376
975 y Fr(+)g Fo(x)3532 990 y Fk(P)3591 975 y Fo(;)17
b(Q;)g(P)d Fr(\))p Fq(,)0 1095 y Fr(\()p Fo(B)30 b Fr(+)25
b Fo(t)278 1110 y Fk(P)362 1095 y Fr(+)f Fo(y)510 1110
y Fk(P)569 1095 y Fo(;)17 b(Q;)g(P)d Fr(\))p Fq(,)37
b Fr(\()p Fo(B)30 b Fr(+)25 b Fo(t)1194 1110 y Fk(P)1278
1095 y Fr(+)g Fo(x)1434 1110 y Fk(P)1518 1095 y Fr(+)g
Fo(y)1667 1110 y Fk(P)1725 1095 y Fo(;)17 b(Q;)g(P)d
Fr(\))37 b Fq(if)i(and)f(only)g(if)h Fo(R)g Fq(wins)f(al)5
b(l)39 b(of)f(them.)g(A)n(lso,)g(for)0 1216 y(e)-5 b(ach)34
b(c)-5 b(el)5 b(l)35 b Fo(z)k Fq(in)c Fn(f)p Fo(x;)17
b(y)t Fn(g)p Fq(,)33 b Fo(P)49 b Fq(wins)34 b Fo(G)1325
1231 y Fk(t)1382 1216 y Fr(=)28 b(\()p Fo(B)f Fr(+)22
b Fo(t)1758 1231 y Fk(P)1817 1216 y Fo(;)17 b(Q;)g(P)d
Fr(\))34 b Fq(if)g Fo(P)49 b Fq(wins)34 b Fo(G)2638 1231
y Fk(z)2705 1216 y Fr(=)28 b(\()p Fo(B)f Fr(+)22 b Fo(z)3091
1231 y Fk(P)3150 1216 y Fo(;)17 b(Q;)g(P)d Fr(\))p Fq(.)0
1386 y(Pr)-5 b(o)g(of.)41 b Fr(Hex)i(is)e(a)g(so-called)f(\\regular")h
(game:)f(altering)g(a)i(game-state)e(b)m(y)j(adding)e(an)g(extra)h
(stone)0 1506 y(is)c(nev)m(er)i(disadv)-5 b(an)m(tageous)39
b(for)f(the)h(pla)m(y)m(er)g(whose)h(stone)f(w)m(as)g(added)h([11].)e
(This)h(prop)s(ert)m(y)g(can)g(b)s(e)0 1626 y(stated)c(more)e(formally)
e(as)j(follo)m(ws:)f(for)g(eac)m(h)i(uno)s(ccupied)f(cell)f
Fo(x)h Fr(of)g(a)f(b)s(oard-state)h Fo(B)39 b Fr(and)34
b(for)f(eac)m(h)0 1747 y(pla)m(y)m(er)g Fo(R)h Fr(in)d
Fn(f)p Fo(P)s(;)17 b(Q)p Fn(g)p Fr(,)32 b Fo(R)i Fr(wins)e(\()p
Fo(B)c Fr(+)22 b Fo(x)1480 1762 y Fk(R)1538 1747 y Fo(;)17
b(P)s(;)g(Q)p Fr(\))32 b(if)f Fo(R)j Fr(wins)e(\()p Fo(B)5
b(;)17 b(P)s(;)g(Q)p Fr(\).)0 1917 y(The)35 b(second)g(statemen)m(t)g
(of)e(the)i(theorem)e(follo)m(ws)g(from)g(the)h(\014rst)h(statemen)m(t)
f(and)g(the)h(regularit)m(y)d(of)0 2037 y(Hex,)27 b(since)g
Fo(P)39 b Fr(wins)27 b(\()p Fo(B)14 b Fr(+)9 b Fo(t)1019
2052 y Fk(P)1087 2037 y Fr(+)g Fo(x)1227 2052 y Fk(P)1295
2037 y Fr(+)g Fo(y)1428 2052 y Fk(P)1486 2037 y Fo(;)17
b(Q;)g(P)d Fr(\))25 b(if)g Fo(P)40 b Fr(wins)26 b(\()p
Fo(B)14 b Fr(+)9 b Fo(z)2449 2052 y Fk(P)2509 2037 y
Fo(;)17 b(Q;)g(P)d Fr(\))25 b(and)h Fo(P)40 b Fr(wins)26
b(\()p Fo(B)14 b Fr(+)9 b Fo(t)3562 2052 y Fk(P)3621
2037 y Fo(;)17 b(Q;)g(P)d Fr(\))0 2158 y(if)31 b Fo(P)46
b Fr(wins)33 b(\()p Fo(B)27 b Fr(+)22 b Fo(t)693 2173
y Fk(P)774 2158 y Fr(+)g Fo(x)927 2173 y Fk(P)1009 2158
y Fr(+)g Fo(y)1155 2173 y Fk(P)1213 2158 y Fo(;)17 b(Q;)g(P)d
Fr(\).)0 2328 y(Consider)39 b(then)g(the)f(\014rst)h(statemen)m(t)g(of)
f(the)g(theorem.)h(Since)f(Hex)h(cannot)g(end)g(in)e(a)h(dra)m(w)h
([11],)f(it)0 2448 y(su\016ces)h(to)d(pro)m(v)m(e)i(this)f(statemen)m
(t)g(for)f(one)h(of)g(the)g(t)m(w)m(o)g(pla)m(y)m(ers,)h(sa)m(y)g(for)e
Fo(R)g Fr(=)f Fo(P)14 b Fr(.)36 b(Also,)g(regularit)m(y)0
2569 y(simpli\014es)20 b(the)j(task)f(of)g(pro)m(ving)g(this)f
(statemen)m(t,)i(since)f(b)m(y)h(regularit)m(y)e Fo(P)35
b Fr(wins)23 b(\()p Fo(B)6 b Fr(+)q Fo(t)3189 2584 y
Fk(P)3247 2569 y Fr(+)q Fo(x)3379 2584 y Fk(P)3438 2569
y Fr(+)q Fo(y)3563 2584 y Fk(P)3621 2569 y Fo(;)17 b(Q;)g(P)d
Fr(\))0 2689 y(if)34 b Fo(P)48 b Fr(wins)35 b(\()p Fo(B)28
b Fr(+)c Fo(t)703 2704 y Fk(P)785 2689 y Fr(+)g Fo(y)933
2704 y Fk(P)991 2689 y Fo(;)17 b(Q;)g(P)d Fr(\))34 b(or)g(\()p
Fo(B)29 b Fr(+)23 b Fo(t)1701 2704 y Fk(P)1784 2689 y
Fr(+)g Fo(x)1938 2704 y Fk(P)1997 2689 y Fo(;)17 b(Q;)g(P)d
Fr(\),)34 b(and)h Fo(P)48 b Fr(wins)35 b(\()p Fo(B)28
b Fr(+)c Fo(t)3141 2704 y Fk(P)3223 2689 y Fr(+)g Fo(y)3371
2704 y Fk(P)3429 2689 y Fo(;)17 b(Q;)g(P)d Fr(\))34 b(and)0
2810 y(\()p Fo(B)27 b Fr(+)22 b Fo(t)272 2825 y Fk(P)353
2810 y Fr(+)g Fo(x)506 2825 y Fk(P)565 2810 y Fo(;)17
b(Q;)g(P)d Fr(\))31 b(if)h Fo(P)46 b Fr(wins)32 b(\()p
Fo(B)27 b Fr(+)22 b Fo(t)1569 2825 y Fk(P)1628 2810 y
Fr(\).)33 b(Th)m(us)h(to)e(pro)m(v)m(e)i(the)f(\014rst)g(statemen)m(t)g
(of)f(the)h(theorem)f(it)0 2930 y(su\016ces)j(to)d(sho)m(w)i(that)0
3100 y Fo(P)48 b Fq(wins)34 b Fo(G)412 3064 y Fh(0)463
3100 y Fr(=)28 b(\()p Fo(B)f Fr(+)22 b Fo(t)839 3115
y Fk(P)898 3100 y Fo(;)17 b(Q;)g(P)d Fr(\))34 b Fq(if)h
Fo(P)48 b Fq(wins)34 b Fo(G)28 b Fr(=)f(\()p Fo(B)g Fr(+)22
b Fo(t)2122 3115 y Fk(P)2203 3100 y Fr(+)h Fo(x)2357
3115 y Fk(P)2438 3100 y Fr(+)f Fo(y)2584 3115 y Fk(P)2642
3100 y Fo(;)17 b(Q;)g(P)d Fr(\))p Fq(.)822 b Fr(\()p
Fn(\003)p Fr(\))0 3270 y(W)-8 b(e)29 b(pro)m(v)m(e)h(\()p
Fn(\003)p Fr(\))f(b)m(y)g(constructing)g(a)g(strategy)g
Fo(S)1781 3234 y Fh(0)1833 3270 y Fr(for)f Fo(P)43 b
Fr(and)28 b Fo(G)2346 3234 y Fh(0)2398 3270 y Fr(from)g(a)h(strategy)g
Fo(S)34 b Fr(for)29 b Fo(P)42 b Fr(and)29 b Fo(G)f Fr(suc)m(h)0
3391 y(that)k Fo(S)277 3355 y Fh(0)333 3391 y Fr(wins)h
Fo(G)633 3355 y Fh(0)688 3391 y Fr(if)f Fo(S)38 b Fr(wins)33
b Fo(G)p Fr(.)f Fo(S)1301 3355 y Fh(0)1357 3391 y Fr(is)g(de\014ned)i
(as)f(follo)m(ws:)-54 3561 y(\(i\))48 b(in)31 b(resp)s(onse)j(to)f(a)f
Fo(Q)p Fr(-mo)m(v)m(e)h(to)f(either)g(cell)g(of)g Fn(f)p
Fo(x;)17 b(y)t Fn(g)p Fr(,)31 b Fo(P)46 b Fr(pla)m(ys)33
b(in)m(to)f(the)h(other)g(cell)-81 3681 y(\(ii\))47 b(in)35
b(resp)s(onse)j(to)d(a)h Fo(Q)p Fr(-mo)m(v)m(e)h(not)f(to)g(either)g
(cell)f(of)g Fn(f)p Fo(x;)17 b(y)t Fn(g)p Fr(,)36 b(if)f(there)i(is)e
(a)h Fo(P)14 b Fr(-c)m(hain)35 b(connecting)i(the)98
3802 y Fo(P)14 b Fr(-stone)35 b(at)h(cell)f Fo(t)h Fr(to)g
Fo(P)14 b Fr('s)36 b(other)g(side)g(of)g(the)g(b)s(oard)g(then)h
Fo(P)49 b Fr(pla)m(ys)37 b(in)m(to)e(either)h(cell)f(of)g
Fn(f)p Fo(x;)17 b(y)t Fn(g)35 b Fr(to)98 3922 y(win)f(the)i(game;)f
(otherwise)g Fo(P)49 b Fr(pla)m(ys)36 b(as)f(in)f(the)i(state)g(of)f
Fo(S)41 b Fr(obtained)34 b(from)g(the)i(curren)m(t)g(state)g(b)m(y)98
4042 y(c)m(hanging)c(the)h(status)g(of)f(cells)g Fo(x)h
Fr(and)g Fo(y)i Fr(so)e(that)f(b)s(oth)h(are)f(o)s(ccupied)h(b)m(y)h
Fo(P)14 b Fr(-stones.)0 4213 y(No)m(w)47 b(supp)s(ose)h(that)e
Fo(S)52 b Fr(wins)46 b Fo(G)g Fr(for)g Fo(P)60 b Fr(and)46
b(consider)h(a)f(con)m(tin)m(uation)f(of)h Fo(G)3070
4176 y Fh(0)3140 4213 y Fr(in)f(whic)m(h)i Fo(P)60 b
Fr(pla)m(ys)0 4333 y(according)39 b(to)f Fo(S)637 4297
y Fh(0)660 4333 y Fr(.)i(It)f(is)f(easy)i(to)f(sho)m(w)h(b)m(y)h
(induction)d(on)h(the)g(n)m(um)m(b)s(er)h(of)e(uno)s(ccupied)i(b)s
(oard)f(cells)0 4453 y(of)c Fo(B)193 4417 y Fh(0)252
4453 y Fr(that)h(for)f(eac)m(h)i(state)f Fo(G)1161 4417
y Fh(0)1161 4478 y Fk(j)1231 4453 y Fr(=)d(\()p Fo(B)1457
4417 y Fh(0)1452 4478 y Fk(j)1488 4453 y Fo(;)17 b(P)s(;)g(Q)p
Fr(\))35 b(reac)m(hed)i(in)e(this)h(con)m(tin)m(uation,)f(the)h(asso)s
(ciated)g(state)0 4574 y Fo(G)77 4589 y Fk(j)149 4574
y Fr(=)g(\()p Fo(B)373 4589 y Fk(j)410 4574 y Fo(;)17
b(P)s(;)g(Q)p Fr(\))36 b(reac)m(hed)j(b)m(y)f(follo)m(wing)d
Fo(S)43 b Fr(has)38 b(the)g(prop)s(ert)m(y)g(that)f Fo(B)2780
4589 y Fk(j)2854 4574 y Fr(and)h Fo(B)3128 4538 y Fh(0)3123
4598 y Fk(j)3197 4574 y Fr(are)f(equal)g(except)0 4694
y(p)s(ossibly)30 b(for)g(the)h(con)m(ten)m(ts)h(of)e(cells)g
Fo(x)h Fr(and)f Fo(y)t Fr(;)g(these)i(t)m(w)m(o)f(cells)f(are)g(b)s
(oth)g Fo(P)14 b Fr(-stones)31 b(in)f Fo(B)3385 4709
y Fk(j)3452 4694 y Fr(whereas)i(in)0 4815 y Fo(B)79 4778
y Fh(0)74 4839 y Fk(j)143 4815 y Fr(they)i(are)e(either)h(b)s(oth)f
(uno)s(ccupied)h(or)f(con)m(tain)g(at)h(least)f(one)h
Fo(P)14 b Fr(-stone.)0 4985 y(W)-8 b(e)32 b(\014nish)h(the)f(pro)s(of)f
(b)m(y)i(con)m(tradiction:)e(supp)s(ose)j(that)e(there)g(is)g(a)g
(winning)f Fo(Q)p Fr(-c)m(hain)g(in)h Fo(B)3536 4949
y Fh(0)3531 5009 y Fk(j)3567 4985 y Fr(.)g(Notice)0 5105
y(that)43 b(suc)m(h)h(a)f(c)m(hain)g(con)m(tains)g(at)g(most)f(one)i
(cell)e(of)g Fo(x)i Fr(or)e Fo(y)t Fr(,)h(since)g(at)g(least)g(one)g
(cell)f(of)h Fn(f)p Fo(x;)17 b(y)t Fn(g)41 b Fr(is)0
5225 y(uno)s(ccupied)34 b(or)f(has)g(a)g Fo(P)14 b Fr(-stone.)33
b(Supp)s(ose)h(that)f(the)h(c)m(hain)f(con)m(tains)g(one)h(of)f(these)h
(t)m(w)m(o)g(cells,)f(sa)m(y)h Fo(y)t Fr(.)0 5346 y(Since)h(the)g(six)f
(neigh)m(b)s(ours)h(of)f Fo(y)k Fr(include)c Fo(x)p Fr(,)h
Fo(t)p Fr(,)g(and)g(t)m(w)m(o)g(cells)f(from)f Fo(P)14
b Fr('s)35 b(b)s(oundary)g(and)f(since)h(none)0 5466
y(of)h(these)j(four)d(cells)g(con)m(tains)h(a)g Fo(Q)p
Fr(-stone,)h(the)f(t)m(w)m(o)h(other)f(neigh)m(b)s(ours)g(of)f
Fo(y)k Fr(are)d(the)g(neigh)m(b)s(ours)g(of)1885 5912
y(10)p eop
%%Page: 11 11
11 10 bop 0 323 a Fo(y)35 b Fr(on)d(the)h Fo(Q)p Fr(-c)m(hain.)f(Since)
g(these)i(t)m(w)m(o)f(neigh)m(b)s(ours)f(are)g(themselv)m(es)i(adjacen)
m(t,)f(remo)m(ving)e Fo(y)36 b Fr(from)31 b(the)0 443
y Fo(Q)p Fr(-c)m(hain)39 b(lea)m(v)m(es)h(a)g(shorter)f(winning)g
Fo(Q)p Fr(-c)m(hain.)g(Th)m(us)i(the)f(existence)g(of)f(a)g(winning)g
Fo(Q)p Fr(-c)m(hain)g(in)f Fo(B)3868 407 y Fh(0)3863
468 y Fk(j)0 564 y Fr(implies)30 b(the)i(existence)i(of)e(a)g(winning)f
Fo(Q)p Fr(-c)m(hain)h(in)g Fo(B)2033 528 y Fh(0)2028
588 y Fk(j)2096 564 y Fr(that)g(do)s(es)h(not)f(include)g(an)m(y)h
(cell)e(from)g Fn(f)p Fo(x;)17 b(y)t Fn(g)p Fr(.)0 684
y(But)29 b Fo(S)35 b Fr(and)29 b Fo(S)537 648 y Fh(0)588
684 y Fr(are)g(the)h(same)e(with)h(resp)s(ect)h(to)e(all)f(cells)h
(except)j Fo(x)e Fr(and)g Fo(y)t Fr(,)f(so)h(the)g(existence)i(of)d
(suc)m(h)i(a)0 805 y(c)m(hain)g(implies)e(the)i(existence)i(of)d(a)h
(winning)f Fo(Q)p Fr(-c)m(hain)h(in)f Fo(B)2265 820 y
Fk(j)2302 805 y Fr(,)h(con)m(tradicting)f(our)h(earlier)f(assumption)0
925 y(that)42 b Fo(S)49 b Fr(wins)43 b Fo(G)f Fr(for)h
Fo(P)14 b Fr(.)42 b(It)h(follo)m(ws)e(that)h(there)i(is)e(no)h(winning)
e Fo(Q)p Fr(-c)m(hain)i(in)f Fo(B)3128 889 y Fh(0)3123
950 y Fk(j)3159 925 y Fr(,)h(so)g(it)f(follo)m(ws)f(b)m(y)0
1045 y(induction)32 b(on)g(the)h(n)m(um)m(b)s(er)g(of)f(uno)s(ccupied)h
(cells)f(of)g Fo(B)2117 1009 y Fh(0)2173 1045 y Fr(that)h
Fo(S)2451 1009 y Fh(0)2506 1045 y Fr(wins)g Fo(G)2806
1009 y Fh(0)2862 1045 y Fr(for)f Fo(P)14 b Fr(.)678 b
Fj(2)526 1812 y @beginspecial -6 @llx -26 @lly 333 @urx
25 @ury 3390 @rwi @setspecial
%%BeginDocument: ppr.ps6
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: (atend)
%%Title: TeXdraw drawing: ppr.ps6
%%Pages: 1
%%Creator: 1995/12/19 TeXdraw V2R0
%%CreationDate: 2006/4/25
50 dict begin
/mv {stroke moveto} def
/lv {lineto} def
/st {currentpoint stroke moveto} def
/sl {st setlinewidth} def
/sd {st 0 setdash} def
/sg {st setgray} def
/bs {gsave} def /es {stroke grestore} def
/fl {gsave setgray fill grestore
 currentpoint newpath moveto} def
/fp {gsave setgray fill grestore st} def
/cv {curveto} def
/cr {gsave currentpoint newpath 3 -1 roll 0 360 arc
 stroke grestore} def
/fc {gsave setgray currentpoint newpath
 3 -1 roll 0 360 arc fill grestore} def
/ar {gsave currentpoint newpath 5 2 roll arc stroke grestore} def
/el {gsave /svm matrix currentmatrix def
 currentpoint translate scale newpath 0 0 1 0 360 arc
 svm setmatrix stroke grestore} def
/fe {gsave setgray currentpoint translate scale newpath
 0 0 1 0 360 arc fill grestore} def
/av {/hhwid exch 2 div def /hlen exch def
 /ah exch def /tipy exch def /tipx exch def
 currentpoint /taily exch def /tailx exch def
 /dx tipx tailx sub def /dy tipy taily sub def
 /alen dx dx mul dy dy mul add sqrt def
 /blen alen hlen sub def
 gsave tailx taily translate dy dx atan rotate
 (V) ah ne {blen 0 gt {blen 0 lineto} if} {alen 0 lineto} ifelse
 stroke blen hhwid neg moveto alen 0 lineto blen hhwid lineto
 (T) ah eq {closepath} if
 (W) ah eq {gsave 1 setgray fill grestore closepath} if
 (F) ah eq {fill} {stroke} ifelse
 grestore tipx tipy moveto} def
0.24 0.24 scale
1 setlinecap 1 setlinejoin
3 setlinewidth [] 0 setdash
0 0 moveto
0 sl
bs
-17 0 mv
-9 15 lv
8 15 lv
16 0 lv
8 -15 lv
-9 -15 lv
-17 0 lv
0.8 fp
8 15 mv
16 30 lv
33 30 lv
41 15 lv
33 0 lv
16 0 lv
8 15 lv
0.8 fp
33 30 mv
41 45 lv
58 45 lv
66 30 lv
58 15 lv
41 15 lv
33 30 lv
0.8 fp
58 45 mv
66 60 lv
83 60 lv
91 45 lv
83 30 lv
66 30 lv
58 45 lv
0.8 fp
83 60 mv
91 75 lv
108 75 lv
116 60 lv
108 45 lv
91 45 lv
83 60 lv
0.8 fp
108 75 mv
116 90 lv
133 90 lv
141 75 lv
133 60 lv
116 60 lv
108 75 lv
0.8 fp
133 90 mv
141 105 lv
158 105 lv
166 90 lv
158 75 lv
141 75 lv
133 90 lv
0.8 fp
8 -15 mv
16 0 lv
33 0 lv
41 -15 lv
33 -30 lv
16 -30 lv
8 -15 lv
0.8 fp
33 0 mv
41 15 lv
58 15 lv
66 0 lv
58 -15 lv
41 -15 lv
33 0 lv
0.8 fp
58 15 mv
66 30 lv
83 30 lv
91 15 lv
83 0 lv
66 0 lv
58 15 lv
0.8 fp
83 30 mv
91 45 lv
108 45 lv
116 30 lv
108 15 lv
91 15 lv
83 30 lv
0.8 fp
108 45 mv
116 60 lv
133 60 lv
141 45 lv
133 30 lv
116 30 lv
108 45 lv
0.8 fp
133 60 mv
141 75 lv
158 75 lv
166 60 lv
158 45 lv
141 45 lv
133 60 lv
0.8 fp
158 75 mv
166 90 lv
183 90 lv
191 75 lv
183 60 lv
166 60 lv
158 75 lv
0.8 fp
33 -30 mv
41 -15 lv
58 -15 lv
66 -30 lv
58 -45 lv
41 -45 lv
33 -30 lv
0.8 fp
58 -15 mv
66 0 lv
83 0 lv
91 -15 lv
83 -30 lv
66 -30 lv
58 -15 lv
0.8 fp
83 0 mv
91 15 lv
108 15 lv
116 0 lv
108 -15 lv
91 -15 lv
83 0 lv
0.8 fp
108 15 mv
116 30 lv
133 30 lv
141 15 lv
133 0 lv
116 0 lv
108 15 lv
0.8 fp
133 30 mv
141 45 lv
158 45 lv
166 30 lv
158 15 lv
141 15 lv
133 30 lv
0.8 fp
158 45 mv
166 60 lv
183 60 lv
191 45 lv
183 30 lv
166 30 lv
158 45 lv
0.8 fp
183 60 mv
191 75 lv
208 75 lv
216 60 lv
208 45 lv
191 45 lv
183 60 lv
0.8 fp
58 -45 mv
66 -30 lv
83 -30 lv
91 -45 lv
83 -60 lv
66 -60 lv
58 -45 lv
0.8 fp
83 -30 mv
91 -15 lv
108 -15 lv
116 -30 lv
108 -45 lv
91 -45 lv
83 -30 lv
0.8 fp
108 -15 mv
116 0 lv
133 0 lv
141 -15 lv
133 -30 lv
116 -30 lv
108 -15 lv
0.8 fp
133 0 mv
141 15 lv
158 15 lv
166 0 lv
158 -15 lv
141 -15 lv
133 0 lv
0.8 fp
158 15 mv
166 30 lv
183 30 lv
191 15 lv
183 0 lv
166 0 lv
158 15 lv
0.8 fp
183 30 mv
191 45 lv
208 45 lv
216 30 lv
208 15 lv
191 15 lv
183 30 lv
0.8 fp
208 45 mv
216 60 lv
233 60 lv
241 45 lv
233 30 lv
216 30 lv
208 45 lv
0.8 fp
83 -60 mv
91 -45 lv
108 -45 lv
116 -60 lv
108 -75 lv
91 -75 lv
83 -60 lv
0.8 fp
108 -45 mv
116 -30 lv
133 -30 lv
141 -45 lv
133 -60 lv
116 -60 lv
108 -45 lv
0.8 fp
133 -30 mv
141 -15 lv
158 -15 lv
166 -30 lv
158 -45 lv
141 -45 lv
133 -30 lv
0.8 fp
158 -15 mv
166 0 lv
183 0 lv
191 -15 lv
183 -30 lv
166 -30 lv
158 -15 lv
0.8 fp
183 0 mv
191 15 lv
208 15 lv
216 0 lv
208 -15 lv
191 -15 lv
183 0 lv
0.8 fp
208 15 mv
216 30 lv
233 30 lv
241 15 lv
233 0 lv
216 0 lv
208 15 lv
0.8 fp
233 30 mv
241 45 lv
258 45 lv
266 30 lv
258 15 lv
241 15 lv
233 30 lv
0.8 fp
108 -75 mv
116 -60 lv
133 -60 lv
141 -75 lv
133 -90 lv
116 -90 lv
108 -75 lv
0.8 fp
133 -60 mv
141 -45 lv
158 -45 lv
166 -60 lv
158 -75 lv
141 -75 lv
133 -60 lv
0.8 fp
158 -45 mv
166 -30 lv
183 -30 lv
191 -45 lv
183 -60 lv
166 -60 lv
158 -45 lv
0.8 fp
183 -30 mv
191 -15 lv
208 -15 lv
216 -30 lv
208 -45 lv
191 -45 lv
183 -30 lv
0.8 fp
208 -15 mv
216 0 lv
233 0 lv
241 -15 lv
233 -30 lv
216 -30 lv
208 -15 lv
0.8 fp
233 0 mv
241 15 lv
258 15 lv
266 0 lv
258 -15 lv
241 -15 lv
233 0 lv
0.8 fp
258 15 mv
266 30 lv
283 30 lv
291 15 lv
283 0 lv
266 0 lv
258 15 lv
0.8 fp
133 -90 mv
141 -75 lv
158 -75 lv
166 -90 lv
158 -105 lv
141 -105 lv
133 -90 lv
0.8 fp
158 -75 mv
166 -60 lv
183 -60 lv
191 -75 lv
183 -90 lv
166 -90 lv
158 -75 lv
0.8 fp
183 -60 mv
191 -45 lv
208 -45 lv
216 -60 lv
208 -75 lv
191 -75 lv
183 -60 lv
0.8 fp
208 -45 mv
216 -30 lv
233 -30 lv
241 -45 lv
233 -60 lv
216 -60 lv
208 -45 lv
0.8 fp
233 -30 mv
241 -15 lv
258 -15 lv
266 -30 lv
258 -45 lv
241 -45 lv
233 -30 lv
0.8 fp
258 -15 mv
266 0 lv
283 0 lv
291 -15 lv
283 -30 lv
266 -30 lv
258 -15 lv
0.8 fp
283 0 mv
291 15 lv
308 15 lv
316 0 lv
308 -15 lv
291 -15 lv
283 0 lv
0.8 fp
0 88 mv
11 0 fc
0 -88 mv
11 1 fc
11 cr
302 -88 mv
11 0 fc
302 88 mv
11 1 fc
11 cr
152 29 mv
11 0 fc
126 -44 mv
11 1 fc
11 cr
es
bs
340 0 mv
348 15 lv
365 15 lv
373 0 lv
365 -15 lv
348 -15 lv
340 0 lv
0.8 fp
365 15 mv
373 30 lv
390 30 lv
398 15 lv
390 0 lv
373 0 lv
365 15 lv
0.8 fp
390 30 mv
398 45 lv
415 45 lv
423 30 lv
415 15 lv
398 15 lv
390 30 lv
0.8 fp
415 45 mv
423 60 lv
440 60 lv
448 45 lv
440 30 lv
423 30 lv
415 45 lv
0.8 fp
440 60 mv
448 75 lv
465 75 lv
473 60 lv
465 45 lv
448 45 lv
440 60 lv
0.8 fp
465 75 mv
473 90 lv
490 90 lv
498 75 lv
490 60 lv
473 60 lv
465 75 lv
0.8 fp
490 90 mv
498 105 lv
515 105 lv
523 90 lv
515 75 lv
498 75 lv
490 90 lv
0.8 fp
365 -15 mv
373 0 lv
390 0 lv
398 -15 lv
390 -30 lv
373 -30 lv
365 -15 lv
0.8 fp
390 0 mv
398 15 lv
415 15 lv
423 0 lv
415 -15 lv
398 -15 lv
390 0 lv
0.8 fp
415 15 mv
423 30 lv
440 30 lv
448 15 lv
440 0 lv
423 0 lv
415 15 lv
0.8 fp
440 30 mv
448 45 lv
465 45 lv
473 30 lv
465 15 lv
448 15 lv
440 30 lv
0.8 fp
465 45 mv
473 60 lv
490 60 lv
498 45 lv
490 30 lv
473 30 lv
465 45 lv
0.8 fp
490 60 mv
498 75 lv
515 75 lv
523 60 lv
515 45 lv
498 45 lv
490 60 lv
0.8 fp
515 75 mv
523 90 lv
540 90 lv
548 75 lv
540 60 lv
523 60 lv
515 75 lv
0.8 fp
390 -30 mv
398 -15 lv
415 -15 lv
423 -30 lv
415 -45 lv
398 -45 lv
390 -30 lv
0.8 fp
415 -15 mv
423 0 lv
440 0 lv
448 -15 lv
440 -30 lv
423 -30 lv
415 -15 lv
0.8 fp
440 0 mv
448 15 lv
465 15 lv
473 0 lv
465 -15 lv
448 -15 lv
440 0 lv
0.8 fp
465 15 mv
473 30 lv
490 30 lv
498 15 lv
490 0 lv
473 0 lv
465 15 lv
0.8 fp
490 30 mv
498 45 lv
515 45 lv
523 30 lv
515 15 lv
498 15 lv
490 30 lv
0.8 fp
515 45 mv
523 60 lv
540 60 lv
548 45 lv
540 30 lv
523 30 lv
515 45 lv
0.8 fp
540 60 mv
548 75 lv
565 75 lv
573 60 lv
565 45 lv
548 45 lv
540 60 lv
0.8 fp
415 -45 mv
423 -30 lv
440 -30 lv
448 -45 lv
440 -60 lv
423 -60 lv
415 -45 lv
0.8 fp
440 -30 mv
448 -15 lv
465 -15 lv
473 -30 lv
465 -45 lv
448 -45 lv
440 -30 lv
0.8 fp
465 -15 mv
473 0 lv
490 0 lv
498 -15 lv
490 -30 lv
473 -30 lv
465 -15 lv
0.8 fp
490 0 mv
498 15 lv
515 15 lv
523 0 lv
515 -15 lv
498 -15 lv
490 0 lv
0.8 fp
515 15 mv
523 30 lv
540 30 lv
548 15 lv
540 0 lv
523 0 lv
515 15 lv
0.8 fp
540 30 mv
548 45 lv
565 45 lv
573 30 lv
565 15 lv
548 15 lv
540 30 lv
0.8 fp
565 45 mv
573 60 lv
590 60 lv
598 45 lv
590 30 lv
573 30 lv
565 45 lv
0.8 fp
440 -60 mv
448 -45 lv
465 -45 lv
473 -60 lv
465 -75 lv
448 -75 lv
440 -60 lv
0.8 fp
465 -45 mv
473 -30 lv
490 -30 lv
498 -45 lv
490 -60 lv
473 -60 lv
465 -45 lv
0.8 fp
490 -30 mv
498 -15 lv
515 -15 lv
523 -30 lv
515 -45 lv
498 -45 lv
490 -30 lv
0.8 fp
515 -15 mv
523 0 lv
540 0 lv
548 -15 lv
540 -30 lv
523 -30 lv
515 -15 lv
0.8 fp
540 0 mv
548 15 lv
565 15 lv
573 0 lv
565 -15 lv
548 -15 lv
540 0 lv
0.8 fp
565 15 mv
573 30 lv
590 30 lv
598 15 lv
590 0 lv
573 0 lv
565 15 lv
0.8 fp
590 30 mv
598 45 lv
615 45 lv
623 30 lv
615 15 lv
598 15 lv
590 30 lv
0.8 fp
465 -75 mv
473 -60 lv
490 -60 lv
498 -75 lv
490 -90 lv
473 -90 lv
465 -75 lv
0.8 fp
490 -60 mv
498 -45 lv
515 -45 lv
523 -60 lv
515 -75 lv
498 -75 lv
490 -60 lv
0.8 fp
515 -45 mv
523 -30 lv
540 -30 lv
548 -45 lv
540 -60 lv
523 -60 lv
515 -45 lv
0.8 fp
540 -30 mv
548 -15 lv
565 -15 lv
573 -30 lv
565 -45 lv
548 -45 lv
540 -30 lv
0.8 fp
565 -15 mv
573 0 lv
590 0 lv
598 -15 lv
590 -30 lv
573 -30 lv
565 -15 lv
0.8 fp
590 0 mv
598 15 lv
615 15 lv
623 0 lv
615 -15 lv
598 -15 lv
590 0 lv
0.8 fp
615 15 mv
623 30 lv
640 30 lv
648 15 lv
640 0 lv
623 0 lv
615 15 lv
0.8 fp
490 -90 mv
498 -75 lv
515 -75 lv
523 -90 lv
515 -105 lv
498 -105 lv
490 -90 lv
0.8 fp
515 -75 mv
523 -60 lv
540 -60 lv
548 -75 lv
540 -90 lv
523 -90 lv
515 -75 lv
0.8 fp
540 -60 mv
548 -45 lv
565 -45 lv
573 -60 lv
565 -75 lv
548 -75 lv
540 -60 lv
0.8 fp
565 -45 mv
573 -30 lv
590 -30 lv
598 -45 lv
590 -60 lv
573 -60 lv
565 -45 lv
0.8 fp
590 -30 mv
598 -15 lv
615 -15 lv
623 -30 lv
615 -45 lv
598 -45 lv
590 -30 lv
0.8 fp
615 -15 mv
623 0 lv
640 0 lv
648 -15 lv
640 -30 lv
623 -30 lv
615 -15 lv
0.8 fp
640 0 mv
648 15 lv
665 15 lv
673 0 lv
665 -15 lv
648 -15 lv
640 0 lv
0.8 fp
509 29 mv
11 0 fc
483 -44 mv
11 1 fc
11 cr
457 -59 mv
11 1 fc
11 cr
es
bs
697 0 mv
705 15 lv
722 15 lv
730 0 lv
722 -15 lv
705 -15 lv
697 0 lv
0.8 fp
722 15 mv
730 30 lv
747 30 lv
755 15 lv
747 0 lv
730 0 lv
722 15 lv
0.8 fp
747 30 mv
755 45 lv
772 45 lv
780 30 lv
772 15 lv
755 15 lv
747 30 lv
0.8 fp
772 45 mv
780 60 lv
797 60 lv
805 45 lv
797 30 lv
780 30 lv
772 45 lv
0.8 fp
797 60 mv
805 75 lv
822 75 lv
830 60 lv
822 45 lv
805 45 lv
797 60 lv
0.8 fp
822 75 mv
830 90 lv
847 90 lv
855 75 lv
847 60 lv
830 60 lv
822 75 lv
0.8 fp
847 90 mv
855 105 lv
872 105 lv
880 90 lv
872 75 lv
855 75 lv
847 90 lv
0.8 fp
722 -15 mv
730 0 lv
747 0 lv
755 -15 lv
747 -30 lv
730 -30 lv
722 -15 lv
0.8 fp
747 0 mv
755 15 lv
772 15 lv
780 0 lv
772 -15 lv
755 -15 lv
747 0 lv
0.8 fp
772 15 mv
780 30 lv
797 30 lv
805 15 lv
797 0 lv
780 0 lv
772 15 lv
0.8 fp
797 30 mv
805 45 lv
822 45 lv
830 30 lv
822 15 lv
805 15 lv
797 30 lv
0.8 fp
822 45 mv
830 60 lv
847 60 lv
855 45 lv
847 30 lv
830 30 lv
822 45 lv
0.8 fp
847 60 mv
855 75 lv
872 75 lv
880 60 lv
872 45 lv
855 45 lv
847 60 lv
0.8 fp
872 75 mv
880 90 lv
897 90 lv
905 75 lv
897 60 lv
880 60 lv
872 75 lv
0.8 fp
747 -30 mv
755 -15 lv
772 -15 lv
780 -30 lv
772 -45 lv
755 -45 lv
747 -30 lv
0.8 fp
772 -15 mv
780 0 lv
797 0 lv
805 -15 lv
797 -30 lv
780 -30 lv
772 -15 lv
0.8 fp
797 0 mv
805 15 lv
822 15 lv
830 0 lv
822 -15 lv
805 -15 lv
797 0 lv
0.8 fp
822 15 mv
830 30 lv
847 30 lv
855 15 lv
847 0 lv
830 0 lv
822 15 lv
0.8 fp
847 30 mv
855 45 lv
872 45 lv
880 30 lv
872 15 lv
855 15 lv
847 30 lv
0.8 fp
872 45 mv
880 60 lv
897 60 lv
905 45 lv
897 30 lv
880 30 lv
872 45 lv
0.8 fp
897 60 mv
905 75 lv
922 75 lv
930 60 lv
922 45 lv
905 45 lv
897 60 lv
0.8 fp
772 -45 mv
780 -30 lv
797 -30 lv
805 -45 lv
797 -60 lv
780 -60 lv
772 -45 lv
0.8 fp
797 -30 mv
805 -15 lv
822 -15 lv
830 -30 lv
822 -45 lv
805 -45 lv
797 -30 lv
0.8 fp
822 -15 mv
830 0 lv
847 0 lv
855 -15 lv
847 -30 lv
830 -30 lv
822 -15 lv
0.8 fp
847 0 mv
855 15 lv
872 15 lv
880 0 lv
872 -15 lv
855 -15 lv
847 0 lv
0.8 fp
872 15 mv
880 30 lv
897 30 lv
905 15 lv
897 0 lv
880 0 lv
872 15 lv
0.8 fp
897 30 mv
905 45 lv
922 45 lv
930 30 lv
922 15 lv
905 15 lv
897 30 lv
0.8 fp
922 45 mv
930 60 lv
947 60 lv
955 45 lv
947 30 lv
930 30 lv
922 45 lv
0.8 fp
797 -60 mv
805 -45 lv
822 -45 lv
830 -60 lv
822 -75 lv
805 -75 lv
797 -60 lv
0.8 fp
822 -45 mv
830 -30 lv
847 -30 lv
855 -45 lv
847 -60 lv
830 -60 lv
822 -45 lv
0.8 fp
847 -30 mv
855 -15 lv
872 -15 lv
880 -30 lv
872 -45 lv
855 -45 lv
847 -30 lv
0.8 fp
872 -15 mv
880 0 lv
897 0 lv
905 -15 lv
897 -30 lv
880 -30 lv
872 -15 lv
0.8 fp
897 0 mv
905 15 lv
922 15 lv
930 0 lv
922 -15 lv
905 -15 lv
897 0 lv
0.8 fp
922 15 mv
930 30 lv
947 30 lv
955 15 lv
947 0 lv
930 0 lv
922 15 lv
0.8 fp
947 30 mv
955 45 lv
972 45 lv
980 30 lv
972 15 lv
955 15 lv
947 30 lv
0.8 fp
822 -75 mv
830 -60 lv
847 -60 lv
855 -75 lv
847 -90 lv
830 -90 lv
822 -75 lv
0.8 fp
847 -60 mv
855 -45 lv
872 -45 lv
880 -60 lv
872 -75 lv
855 -75 lv
847 -60 lv
0.8 fp
872 -45 mv
880 -30 lv
897 -30 lv
905 -45 lv
897 -60 lv
880 -60 lv
872 -45 lv
0.8 fp
897 -30 mv
905 -15 lv
922 -15 lv
930 -30 lv
922 -45 lv
905 -45 lv
897 -30 lv
0.8 fp
922 -15 mv
930 0 lv
947 0 lv
955 -15 lv
947 -30 lv
930 -30 lv
922 -15 lv
0.8 fp
947 0 mv
955 15 lv
972 15 lv
980 0 lv
972 -15 lv
955 -15 lv
947 0 lv
0.8 fp
972 15 mv
980 30 lv
997 30 lv
1005 15 lv
997 0 lv
980 0 lv
972 15 lv
0.8 fp
847 -90 mv
855 -75 lv
872 -75 lv
880 -90 lv
872 -105 lv
855 -105 lv
847 -90 lv
0.8 fp
872 -75 mv
880 -60 lv
897 -60 lv
905 -75 lv
897 -90 lv
880 -90 lv
872 -75 lv
0.8 fp
897 -60 mv
905 -45 lv
922 -45 lv
930 -60 lv
922 -75 lv
905 -75 lv
897 -60 lv
0.8 fp
922 -45 mv
930 -30 lv
947 -30 lv
955 -45 lv
947 -60 lv
930 -60 lv
922 -45 lv
0.8 fp
947 -30 mv
955 -15 lv
972 -15 lv
980 -30 lv
972 -45 lv
955 -45 lv
947 -30 lv
0.8 fp
972 -15 mv
980 0 lv
997 0 lv
1005 -15 lv
997 -30 lv
980 -30 lv
972 -15 lv
0.8 fp
997 0 mv
1005 15 lv
1022 15 lv
1030 0 lv
1022 -15 lv
1005 -15 lv
997 0 lv
0.8 fp
866 29 mv
11 0 fc
840 -44 mv
11 1 fc
11 cr
840 -74 mv
11 1 fc
11 cr
es
bs
1054 0 mv
1062 15 lv
1079 15 lv
1087 0 lv
1079 -15 lv
1062 -15 lv
1054 0 lv
0.8 fp
1079 15 mv
1087 30 lv
1104 30 lv
1112 15 lv
1104 0 lv
1087 0 lv
1079 15 lv
0.8 fp
1104 30 mv
1112 45 lv
1129 45 lv
1137 30 lv
1129 15 lv
1112 15 lv
1104 30 lv
0.8 fp
1129 45 mv
1137 60 lv
1154 60 lv
1162 45 lv
1154 30 lv
1137 30 lv
1129 45 lv
0.8 fp
1154 60 mv
1162 75 lv
1179 75 lv
1187 60 lv
1179 45 lv
1162 45 lv
1154 60 lv
0.8 fp
1179 75 mv
1187 90 lv
1204 90 lv
1212 75 lv
1204 60 lv
1187 60 lv
1179 75 lv
0.8 fp
1204 90 mv
1212 105 lv
1229 105 lv
1237 90 lv
1229 75 lv
1212 75 lv
1204 90 lv
0.8 fp
1079 -15 mv
1087 0 lv
1104 0 lv
1112 -15 lv
1104 -30 lv
1087 -30 lv
1079 -15 lv
0.8 fp
1104 0 mv
1112 15 lv
1129 15 lv
1137 0 lv
1129 -15 lv
1112 -15 lv
1104 0 lv
0.8 fp
1129 15 mv
1137 30 lv
1154 30 lv
1162 15 lv
1154 0 lv
1137 0 lv
1129 15 lv
0.8 fp
1154 30 mv
1162 45 lv
1179 45 lv
1187 30 lv
1179 15 lv
1162 15 lv
1154 30 lv
0.8 fp
1179 45 mv
1187 60 lv
1204 60 lv
1212 45 lv
1204 30 lv
1187 30 lv
1179 45 lv
0.8 fp
1204 60 mv
1212 75 lv
1229 75 lv
1237 60 lv
1229 45 lv
1212 45 lv
1204 60 lv
0.8 fp
1229 75 mv
1237 90 lv
1254 90 lv
1262 75 lv
1254 60 lv
1237 60 lv
1229 75 lv
0.8 fp
1104 -30 mv
1112 -15 lv
1129 -15 lv
1137 -30 lv
1129 -45 lv
1112 -45 lv
1104 -30 lv
0.8 fp
1129 -15 mv
1137 0 lv
1154 0 lv
1162 -15 lv
1154 -30 lv
1137 -30 lv
1129 -15 lv
0.8 fp
1154 0 mv
1162 15 lv
1179 15 lv
1187 0 lv
1179 -15 lv
1162 -15 lv
1154 0 lv
0.8 fp
1179 15 mv
1187 30 lv
1204 30 lv
1212 15 lv
1204 0 lv
1187 0 lv
1179 15 lv
0.8 fp
1204 30 mv
1212 45 lv
1229 45 lv
1237 30 lv
1229 15 lv
1212 15 lv
1204 30 lv
0.8 fp
1229 45 mv
1237 60 lv
1254 60 lv
1262 45 lv
1254 30 lv
1237 30 lv
1229 45 lv
0.8 fp
1254 60 mv
1262 75 lv
1279 75 lv
1287 60 lv
1279 45 lv
1262 45 lv
1254 60 lv
0.8 fp
1129 -45 mv
1137 -30 lv
1154 -30 lv
1162 -45 lv
1154 -60 lv
1137 -60 lv
1129 -45 lv
0.8 fp
1154 -30 mv
1162 -15 lv
1179 -15 lv
1187 -30 lv
1179 -45 lv
1162 -45 lv
1154 -30 lv
0.8 fp
1179 -15 mv
1187 0 lv
1204 0 lv
1212 -15 lv
1204 -30 lv
1187 -30 lv
1179 -15 lv
0.8 fp
1204 0 mv
1212 15 lv
1229 15 lv
1237 0 lv
1229 -15 lv
1212 -15 lv
1204 0 lv
0.8 fp
1229 15 mv
1237 30 lv
1254 30 lv
1262 15 lv
1254 0 lv
1237 0 lv
1229 15 lv
0.8 fp
1254 30 mv
1262 45 lv
1279 45 lv
1287 30 lv
1279 15 lv
1262 15 lv
1254 30 lv
0.8 fp
1279 45 mv
1287 60 lv
1304 60 lv
1312 45 lv
1304 30 lv
1287 30 lv
1279 45 lv
0.8 fp
1154 -60 mv
1162 -45 lv
1179 -45 lv
1187 -60 lv
1179 -75 lv
1162 -75 lv
1154 -60 lv
0.8 fp
1179 -45 mv
1187 -30 lv
1204 -30 lv
1212 -45 lv
1204 -60 lv
1187 -60 lv
1179 -45 lv
0.8 fp
1204 -30 mv
1212 -15 lv
1229 -15 lv
1237 -30 lv
1229 -45 lv
1212 -45 lv
1204 -30 lv
0.8 fp
1229 -15 mv
1237 0 lv
1254 0 lv
1262 -15 lv
1254 -30 lv
1237 -30 lv
1229 -15 lv
0.8 fp
1254 0 mv
1262 15 lv
1279 15 lv
1287 0 lv
1279 -15 lv
1262 -15 lv
1254 0 lv
0.8 fp
1279 15 mv
1287 30 lv
1304 30 lv
1312 15 lv
1304 0 lv
1287 0 lv
1279 15 lv
0.8 fp
1304 30 mv
1312 45 lv
1329 45 lv
1337 30 lv
1329 15 lv
1312 15 lv
1304 30 lv
0.8 fp
1179 -75 mv
1187 -60 lv
1204 -60 lv
1212 -75 lv
1204 -90 lv
1187 -90 lv
1179 -75 lv
0.8 fp
1204 -60 mv
1212 -45 lv
1229 -45 lv
1237 -60 lv
1229 -75 lv
1212 -75 lv
1204 -60 lv
0.8 fp
1229 -45 mv
1237 -30 lv
1254 -30 lv
1262 -45 lv
1254 -60 lv
1237 -60 lv
1229 -45 lv
0.8 fp
1254 -30 mv
1262 -15 lv
1279 -15 lv
1287 -30 lv
1279 -45 lv
1262 -45 lv
1254 -30 lv
0.8 fp
1279 -15 mv
1287 0 lv
1304 0 lv
1312 -15 lv
1304 -30 lv
1287 -30 lv
1279 -15 lv
0.8 fp
1304 0 mv
1312 15 lv
1329 15 lv
1337 0 lv
1329 -15 lv
1312 -15 lv
1304 0 lv
0.8 fp
1329 15 mv
1337 30 lv
1354 30 lv
1362 15 lv
1354 0 lv
1337 0 lv
1329 15 lv
0.8 fp
1204 -90 mv
1212 -75 lv
1229 -75 lv
1237 -90 lv
1229 -105 lv
1212 -105 lv
1204 -90 lv
0.8 fp
1229 -75 mv
1237 -60 lv
1254 -60 lv
1262 -75 lv
1254 -90 lv
1237 -90 lv
1229 -75 lv
0.8 fp
1254 -60 mv
1262 -45 lv
1279 -45 lv
1287 -60 lv
1279 -75 lv
1262 -75 lv
1254 -60 lv
0.8 fp
1279 -45 mv
1287 -30 lv
1304 -30 lv
1312 -45 lv
1304 -60 lv
1287 -60 lv
1279 -45 lv
0.8 fp
1304 -30 mv
1312 -15 lv
1329 -15 lv
1337 -30 lv
1329 -45 lv
1312 -45 lv
1304 -30 lv
0.8 fp
1329 -15 mv
1337 0 lv
1354 0 lv
1362 -15 lv
1354 -30 lv
1337 -30 lv
1329 -15 lv
0.8 fp
1354 0 mv
1362 15 lv
1379 15 lv
1387 0 lv
1379 -15 lv
1362 -15 lv
1354 0 lv
0.8 fp
1223 29 mv
11 0 fc
1197 -44 mv
11 1 fc
11 cr
1171 -59 mv
11 1 fc
11 cr
1197 -74 mv
11 1 fc
11 cr
es
stroke end showpage
%%Trailer:
%%BoundingBox: -6 -26 333 25
%%EOF

%%EndDocument
 @endspecial 501 1636 a Fw(A)510 1576 y(1)555 1664 y(B)562
1548 y(2)606 1694 y(C)614 1518 y(3)653 1724 y(D)662 1488
y(4)708 1754 y(E)714 1458 y(5)757 1782 y(F)762 1430 y(6)804
1812 y(G)814 1400 y(7)0 1991 y Fs(Fig.)29 b(6.)h(Illustrating)d(the)i
(\014rst)f(part)h(of)g(Theorem)g(5.)h(Applying)d(this)h(result)g(to)h
(the)h(white)e(side)g(triangle)g(with)0 2104 y(tip)k(E2,)i(it)f(follo)m
(ws)g(that)g(a)h(pla)m(y)m(er)g(has)f(a)g(winning)e(strategy)k(for)e
(one)g(of)h(these)g(b)s(oard-states)f(if)g(and)g(only)f(if)0
2217 y(that)f(pla)m(y)m(er)f(has)h(a)f(winning)e(strategy)k(for)e(all)f
(of)h(these)h(b)s(oard-states.)0 2916 y Fp(4)112 b(The)38
b(Algorithm)0 3206 y Fr(Our)32 b(algorithm)e Fi(Sol)-9
b(ver)32 b Fr(com)m(bines)g(the)h(approac)m(hes)h(suggested)g(b)m(y)f
(Theorems)g(1,)g(2,)f(3,)g(and)h(5.)f(F)-8 b(or)0 3327
y(a)32 b(pla)m(y)m(er)h Fo(P)46 b Fr(with)32 b(opp)s(onen)m(t)i
Fo(Q)p Fr(,)e(the)h(algorithm)d(solv)m(es)j(a)g(state)g
Fo(G)27 b Fr(=)h([)p Fo(P)s(;)17 b(B)5 b Fr(])32 b(as)h(follo)m(ws.)0
3557 y Fi(Algorithm)39 b(Sol)-9 b(ver)0 3727 y Fr(Input:)33
b(A)g(Hex)g(game-state)f Fo(G)c Fr(=)f(\()p Fo(B)5 b(;)17
b(P)s(;)g(Q)p Fr(\).)0 3897 y(Output:)33 b(The)g(v)-5
b(alue)32 b(of)h Fo(G)f Fr(together)h(with)f(the)h(carrier)f(of)g(a)g
(win-link)f(for)h Fo(G)p Fr(.)0 4068 y Fq(F)-7 b(or)35
b(e)-5 b(ach)36 b(side)f(triangle)h(for)f(which)h(the)g(\014rst)g
(statement)g(of)g(The)-5 b(or)g(em)35 b(5)h(applies,)f(add)g(stones)h
(to)g(the)0 4188 y(appr)-5 b(opriate)31 b(side)g(c)-5
b(el)5 b(ls;)32 b(c)-5 b(al)5 b(l)31 b(the)h(r)-5 b(esulting)32
b(b)-5 b(o)g(ar)g(d)31 b Fo(B)2011 4152 y Fh(\003)2051
4188 y Fq(.)g(Static)-5 b(al)5 b(ly)32 b(c)-5 b(ompute)32
b(virtual)g(c)-5 b(onne)g(ctions)31 b(and)0 4308 y(we)-5
b(ak)29 b(c)-5 b(onne)g(ctions.)27 b(If)i(a)g(win-we)-5
b(aklink)28 b Fo(P)14 b Fq(\()p Fo(B)5 b Fq(:)p Fn(\000)p
Fo(;)17 b(S;)g Fn(\000)p Fq(\))29 b(is)g(dete)-5 b(cte)g(d)29
b(then)g(r)-5 b(eturn)30 b Fr(\()p Fo(P)s(;)17 b(S)6
b Fr(\))p Fq(;)28 b(if)h(a)g(win-link)0 4429 y Fo(Q)p
Fq(\()p Fo(B)5 b Fq(:)p Fn(\000)p Fo(;)17 b(S;)g Fn(\000)p
Fq(\))40 b(is)f(dete)-5 b(cte)g(d)39 b(then,)g(if)g(the)g(win-link)f
(uses)h(the)g(the)h(tip)f(of)g(a)g(triangle)g(whose)f(side)h(was)0
4549 y(\014l)5 b(le)-5 b(d)34 b(in)h(then)f(add)h(the)g(side)f(c)-5
b(el)5 b(ls)34 b(to)h Fo(S)6 b Fq(,)35 b(and)f(r)-5 b(eturn)35
b Fr(\()p Fo(Q;)17 b(S)6 b Fr(\))p Fq(.)0 4719 y(Otherwise,)34
b(let)h Fo(T)48 b Fq(b)-5 b(e)34 b(the)h(set)g(c)-5 b(onsisting)34
b(of)g(al)5 b(l)34 b(c)-5 b(arriers)35 b(of)f(al)5 b(l)34
b Fo(Q)p Fq(-win-we)-5 b(aklinks)33 b(found)h(for)h Fo(G)g
Fq(and)0 4840 y(let)i Fo(R)g Fq(b)-5 b(e)37 b(the)f Fo(P)14
b Fq(-mustplay)36 b(r)-5 b(e)g(gion)36 b(de\014ne)-5
b(d)36 b(with)g(r)-5 b(esp)g(e)g(ct)36 b(to)h Fo(T)14
b Fq(,)36 b(namely)g(the)h(interse)-5 b(ction)36 b(of)g(the)h(set)0
4960 y(of)d(uno)-5 b(c)g(cupie)g(d)34 b(c)-5 b(el)5 b(ls)33
b(of)h Fo(B)40 b Fq(with)34 b(e)-5 b(ach)33 b(of)h(the)h(elements)e(of)
h Fo(T)14 b Fq(.)34 b(R)-5 b(emove)33 b(fr)-5 b(om)34
b Fo(R)h Fq(any)g(side-c)-5 b(el)5 b(ls)32 b(fr)-5 b(om)0
5080 y(any)35 b(empty)g Fo(P)14 b Fq(-triangle.)33 b(While)i
Fo(R)h Fq(is)e(not)h(empty,)g(pick)f(a)h(c)-5 b(el)5
b(l)34 b Fo(x)i Fq(in)e Fo(R)q Fq(,)h(and)f(do)h(the)g(fol)5
b(lowing:)236 5227 y(L)-5 b(et)46 b Fo(B)494 5191 y Fh(\003)489
5252 y Fk(x)579 5227 y Fq(b)-5 b(e)46 b(the)f(state)h(obtaine)-5
b(d)45 b(fr)-5 b(om)45 b Fo(B)1844 5191 y Fh(\003)1929
5227 y Fq(by)h(adding)f(a)g Fo(P)14 b Fq(-)236 5348 y(stone)36
b(at)h Fo(x)g Fq(and,)f(if)g Fo(x)h Fq(was)f(the)g(tip)h(of)f(an)g
(empty)h Fo(P)14 b Fq(-triangle)236 5468 y(b)-5 b(efor)g(e)29
b(this)g(move,)f(\014l)5 b(ling)28 b(in)h(the)g(triangle.)f(R)-5
b(e)g(cursively)29 b(solve)236 5588 y Fo(G)313 5603 y
Fk(x)385 5588 y Fr(=)e(\()p Fo(B)605 5552 y Fh(\003)600
5613 y Fk(x)645 5588 y Fo(;)17 b(Q;)g(P)d Fr(\))p Fq(.)1885
5912 y Fr(11)p eop
%%Page: 12 12
12 11 bop 236 309 a Fq(If)37 b Fo(P)50 b Fq(wins)36 b
Fo(G)757 324 y Fk(x)801 309 y Fq(,)h(say)g(with)f(win-link)g(c)-5
b(arrier)37 b Fo(X)8 b Fq(,)36 b(then)h(add)f(to)236
430 y Fo(X)43 b Fq(the)35 b(c)-5 b(el)5 b(l)34 b Fo(x)i
Fq(as)e(wel)5 b(l)35 b(as)f(the)h(two)g(asso)-5 b(ciate)g(d)34
b(side-c)-5 b(el)5 b(ls)33 b(if)i Fo(x)236 550 y Fq(was)j(the)h(tip)f
(of)h(an)f(empty)g Fo(P)14 b Fq(-triangle,)38 b(and)g(r)-5
b(eturn)39 b Fr(\()p Fo(P)s(;)17 b(X)8 b Fr(\))p Fq(.)236
670 y(If)36 b Fo(Q)i Fq(wins)e Fo(G)758 685 y Fk(x)801
670 y Fq(,)h(say)g(with)g(win-we)-5 b(aklink)34 b Fo(X)8
b Fq(,)37 b(then)f(add)h Fo(X)44 b Fq(to)236 791 y Fo(T)14
b Fq(.)0 918 y(If)46 b(exe)-5 b(cution)47 b(r)-5 b(e)g(aches)45
b(this)i(p)-5 b(oint)47 b(then)f(the)h(while)f(lo)-5
b(op)46 b(terminate)-5 b(d)47 b(without)g(disc)-5 b(overing)45
b(a)i(win-)0 1038 y(we)-5 b(aklink)33 b(for)i Fo(P)14
b Fq(,)34 b(so)g(the)h(union)f Fo(U)45 b Fq(of)34 b(elements)g(of)g
Fo(T)49 b Fq(is)34 b(a)h(c)-5 b(arrier)34 b(for)g(a)h(win-link)e(for)h
Fo(Q)p Fq(,)h(so)f(r)-5 b(eturn)0 1159 y Fr(\()p Fo(Q;)17
b(U)10 b Fr(\))p Fq(.)0 1389 y Fr(A)31 b(sample)g(execution)h(of)f(the)
h(algorithm)c(is)j(describ)s(ed)h(in)f(Figures)g(7)g(through)g(9.)h
(The)g(correctness)h(of)0 1509 y(our)f(algorithm)e(follo)m(ws)h
(directly)h(from)f(the)i(previous)g(theorems.)526 2037
y @beginspecial -6 @llx -26 @lly 333 @urx 25 @ury 3390
@rwi @setspecial
%%BeginDocument: ppr.ps7
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: (atend)
%%Title: TeXdraw drawing: ppr.ps7
%%Pages: 1
%%Creator: 1995/12/19 TeXdraw V2R0
%%CreationDate: 2006/4/25
50 dict begin
/mv {stroke moveto} def
/lv {lineto} def
/st {currentpoint stroke moveto} def
/sl {st setlinewidth} def
/sd {st 0 setdash} def
/sg {st setgray} def
/bs {gsave} def /es {stroke grestore} def
/fl {gsave setgray fill grestore
 currentpoint newpath moveto} def
/fp {gsave setgray fill grestore st} def
/cv {curveto} def
/cr {gsave currentpoint newpath 3 -1 roll 0 360 arc
 stroke grestore} def
/fc {gsave setgray currentpoint newpath
 3 -1 roll 0 360 arc fill grestore} def
/ar {gsave currentpoint newpath 5 2 roll arc stroke grestore} def
/el {gsave /svm matrix currentmatrix def
 currentpoint translate scale newpath 0 0 1 0 360 arc
 svm setmatrix stroke grestore} def
/fe {gsave setgray currentpoint translate scale newpath
 0 0 1 0 360 arc fill grestore} def
/av {/hhwid exch 2 div def /hlen exch def
 /ah exch def /tipy exch def /tipx exch def
 currentpoint /taily exch def /tailx exch def
 /dx tipx tailx sub def /dy tipy taily sub def
 /alen dx dx mul dy dy mul add sqrt def
 /blen alen hlen sub def
 gsave tailx taily translate dy dx atan rotate
 (V) ah ne {blen 0 gt {blen 0 lineto} if} {alen 0 lineto} ifelse
 stroke blen hhwid neg moveto alen 0 lineto blen hhwid lineto
 (T) ah eq {closepath} if
 (W) ah eq {gsave 1 setgray fill grestore closepath} if
 (F) ah eq {fill} {stroke} ifelse
 grestore tipx tipy moveto} def
0.24 0.24 scale
1 setlinecap 1 setlinejoin
3 setlinewidth [] 0 setdash
0 0 moveto
0 sl
bs
-17 0 mv
-9 15 lv
8 15 lv
16 0 lv
8 -15 lv
-9 -15 lv
-17 0 lv
0.8 fp
8 15 mv
16 30 lv
33 30 lv
41 15 lv
33 0 lv
16 0 lv
8 15 lv
0.8 fp
33 30 mv
41 45 lv
58 45 lv
66 30 lv
58 15 lv
41 15 lv
33 30 lv
0.8 fp
58 45 mv
66 60 lv
83 60 lv
91 45 lv
83 30 lv
66 30 lv
58 45 lv
0.8 fp
83 60 mv
91 75 lv
108 75 lv
116 60 lv
108 45 lv
91 45 lv
83 60 lv
0.8 fp
108 75 mv
116 90 lv
133 90 lv
141 75 lv
133 60 lv
116 60 lv
108 75 lv
0.8 fp
133 90 mv
141 105 lv
158 105 lv
166 90 lv
158 75 lv
141 75 lv
133 90 lv
0.8 fp
8 -15 mv
16 0 lv
33 0 lv
41 -15 lv
33 -30 lv
16 -30 lv
8 -15 lv
0.8 fp
33 0 mv
41 15 lv
58 15 lv
66 0 lv
58 -15 lv
41 -15 lv
33 0 lv
0.8 fp
58 15 mv
66 30 lv
83 30 lv
91 15 lv
83 0 lv
66 0 lv
58 15 lv
0.8 fp
83 30 mv
91 45 lv
108 45 lv
116 30 lv
108 15 lv
91 15 lv
83 30 lv
0.8 fp
108 45 mv
116 60 lv
133 60 lv
141 45 lv
133 30 lv
116 30 lv
108 45 lv
0.8 fp
133 60 mv
141 75 lv
158 75 lv
166 60 lv
158 45 lv
141 45 lv
133 60 lv
0.8 fp
158 75 mv
166 90 lv
183 90 lv
191 75 lv
183 60 lv
166 60 lv
158 75 lv
0.8 fp
33 -30 mv
41 -15 lv
58 -15 lv
66 -30 lv
58 -45 lv
41 -45 lv
33 -30 lv
0.8 fp
58 -15 mv
66 0 lv
83 0 lv
91 -15 lv
83 -30 lv
66 -30 lv
58 -15 lv
0.8 fp
83 0 mv
91 15 lv
108 15 lv
116 0 lv
108 -15 lv
91 -15 lv
83 0 lv
0.8 fp
108 15 mv
116 30 lv
133 30 lv
141 15 lv
133 0 lv
116 0 lv
108 15 lv
0.8 fp
133 30 mv
141 45 lv
158 45 lv
166 30 lv
158 15 lv
141 15 lv
133 30 lv
0.8 fp
158 45 mv
166 60 lv
183 60 lv
191 45 lv
183 30 lv
166 30 lv
158 45 lv
0.8 fp
183 60 mv
191 75 lv
208 75 lv
216 60 lv
208 45 lv
191 45 lv
183 60 lv
0.8 fp
58 -45 mv
66 -30 lv
83 -30 lv
91 -45 lv
83 -60 lv
66 -60 lv
58 -45 lv
0.8 fp
83 -30 mv
91 -15 lv
108 -15 lv
116 -30 lv
108 -45 lv
91 -45 lv
83 -30 lv
0.8 fp
108 -15 mv
116 0 lv
133 0 lv
141 -15 lv
133 -30 lv
116 -30 lv
108 -15 lv
0.8 fp
133 0 mv
141 15 lv
158 15 lv
166 0 lv
158 -15 lv
141 -15 lv
133 0 lv
0.8 fp
158 15 mv
166 30 lv
183 30 lv
191 15 lv
183 0 lv
166 0 lv
158 15 lv
0.8 fp
183 30 mv
191 45 lv
208 45 lv
216 30 lv
208 15 lv
191 15 lv
183 30 lv
0.8 fp
208 45 mv
216 60 lv
233 60 lv
241 45 lv
233 30 lv
216 30 lv
208 45 lv
0.8 fp
83 -60 mv
91 -45 lv
108 -45 lv
116 -60 lv
108 -75 lv
91 -75 lv
83 -60 lv
0.8 fp
108 -45 mv
116 -30 lv
133 -30 lv
141 -45 lv
133 -60 lv
116 -60 lv
108 -45 lv
0.8 fp
133 -30 mv
141 -15 lv
158 -15 lv
166 -30 lv
158 -45 lv
141 -45 lv
133 -30 lv
0.8 fp
158 -15 mv
166 0 lv
183 0 lv
191 -15 lv
183 -30 lv
166 -30 lv
158 -15 lv
0.8 fp
183 0 mv
191 15 lv
208 15 lv
216 0 lv
208 -15 lv
191 -15 lv
183 0 lv
0.8 fp
208 15 mv
216 30 lv
233 30 lv
241 15 lv
233 0 lv
216 0 lv
208 15 lv
0.8 fp
233 30 mv
241 45 lv
258 45 lv
266 30 lv
258 15 lv
241 15 lv
233 30 lv
0.8 fp
108 -75 mv
116 -60 lv
133 -60 lv
141 -75 lv
133 -90 lv
116 -90 lv
108 -75 lv
0.8 fp
133 -60 mv
141 -45 lv
158 -45 lv
166 -60 lv
158 -75 lv
141 -75 lv
133 -60 lv
0.8 fp
158 -45 mv
166 -30 lv
183 -30 lv
191 -45 lv
183 -60 lv
166 -60 lv
158 -45 lv
0.8 fp
183 -30 mv
191 -15 lv
208 -15 lv
216 -30 lv
208 -45 lv
191 -45 lv
183 -30 lv
0.8 fp
208 -15 mv
216 0 lv
233 0 lv
241 -15 lv
233 -30 lv
216 -30 lv
208 -15 lv
0.8 fp
233 0 mv
241 15 lv
258 15 lv
266 0 lv
258 -15 lv
241 -15 lv
233 0 lv
0.8 fp
258 15 mv
266 30 lv
283 30 lv
291 15 lv
283 0 lv
266 0 lv
258 15 lv
0.8 fp
133 -90 mv
141 -75 lv
158 -75 lv
166 -90 lv
158 -105 lv
141 -105 lv
133 -90 lv
0.8 fp
158 -75 mv
166 -60 lv
183 -60 lv
191 -75 lv
183 -90 lv
166 -90 lv
158 -75 lv
0.8 fp
183 -60 mv
191 -45 lv
208 -45 lv
216 -60 lv
208 -75 lv
191 -75 lv
183 -60 lv
0.8 fp
208 -45 mv
216 -30 lv
233 -30 lv
241 -45 lv
233 -60 lv
216 -60 lv
208 -45 lv
0.8 fp
233 -30 mv
241 -15 lv
258 -15 lv
266 -30 lv
258 -45 lv
241 -45 lv
233 -30 lv
0.8 fp
258 -15 mv
266 0 lv
283 0 lv
291 -15 lv
283 -30 lv
266 -30 lv
258 -15 lv
0.8 fp
283 0 mv
291 15 lv
308 15 lv
316 0 lv
308 -15 lv
291 -15 lv
283 0 lv
0.8 fp
0 88 mv
11 0 fc
0 -88 mv
11 1 fc
11 cr
302 -88 mv
11 0 fc
302 88 mv
11 1 fc
11 cr
152 59 mv
11 1 fc
11 cr
es
bs
340 0 mv
348 15 lv
365 15 lv
373 0 lv
365 -15 lv
348 -15 lv
340 0 lv
0.8 fp
365 15 mv
373 30 lv
390 30 lv
398 15 lv
390 0 lv
373 0 lv
365 15 lv
0.8 fp
390 30 mv
398 45 lv
415 45 lv
423 30 lv
415 15 lv
398 15 lv
390 30 lv
0.8 fp
415 45 mv
423 60 lv
440 60 lv
448 45 lv
440 30 lv
423 30 lv
415 45 lv
0.8 fp
440 60 mv
448 75 lv
465 75 lv
473 60 lv
465 45 lv
448 45 lv
440 60 lv
0.8 fp
465 75 mv
473 90 lv
490 90 lv
498 75 lv
490 60 lv
473 60 lv
465 75 lv
0.8 fp
490 90 mv
498 105 lv
515 105 lv
523 90 lv
515 75 lv
498 75 lv
490 90 lv
0.8 fp
365 -15 mv
373 0 lv
390 0 lv
398 -15 lv
390 -30 lv
373 -30 lv
365 -15 lv
0.8 fp
390 0 mv
398 15 lv
415 15 lv
423 0 lv
415 -15 lv
398 -15 lv
390 0 lv
0.8 fp
415 15 mv
423 30 lv
440 30 lv
448 15 lv
440 0 lv
423 0 lv
415 15 lv
0.8 fp
440 30 mv
448 45 lv
465 45 lv
473 30 lv
465 15 lv
448 15 lv
440 30 lv
0.8 fp
465 45 mv
473 60 lv
490 60 lv
498 45 lv
490 30 lv
473 30 lv
465 45 lv
0.8 fp
490 60 mv
498 75 lv
515 75 lv
523 60 lv
515 45 lv
498 45 lv
490 60 lv
0.8 fp
515 75 mv
523 90 lv
540 90 lv
548 75 lv
540 60 lv
523 60 lv
515 75 lv
0.8 fp
390 -30 mv
398 -15 lv
415 -15 lv
423 -30 lv
415 -45 lv
398 -45 lv
390 -30 lv
0.8 fp
415 -15 mv
423 0 lv
440 0 lv
448 -15 lv
440 -30 lv
423 -30 lv
415 -15 lv
0.8 fp
440 0 mv
448 15 lv
465 15 lv
473 0 lv
465 -15 lv
448 -15 lv
440 0 lv
0.8 fp
465 15 mv
473 30 lv
490 30 lv
498 15 lv
490 0 lv
473 0 lv
465 15 lv
0.8 fp
490 30 mv
498 45 lv
515 45 lv
523 30 lv
515 15 lv
498 15 lv
490 30 lv
0.8 fp
515 45 mv
523 60 lv
540 60 lv
548 45 lv
540 30 lv
523 30 lv
515 45 lv
0.8 fp
540 60 mv
548 75 lv
565 75 lv
573 60 lv
565 45 lv
548 45 lv
540 60 lv
0.8 fp
415 -45 mv
423 -30 lv
440 -30 lv
448 -45 lv
440 -60 lv
423 -60 lv
415 -45 lv
0.8 fp
440 -30 mv
448 -15 lv
465 -15 lv
473 -30 lv
465 -45 lv
448 -45 lv
440 -30 lv
0.8 fp
465 -15 mv
473 0 lv
490 0 lv
498 -15 lv
490 -30 lv
473 -30 lv
465 -15 lv
0.8 fp
490 0 mv
498 15 lv
515 15 lv
523 0 lv
515 -15 lv
498 -15 lv
490 0 lv
0.8 fp
515 15 mv
523 30 lv
540 30 lv
548 15 lv
540 0 lv
523 0 lv
515 15 lv
0.8 fp
540 30 mv
548 45 lv
565 45 lv
573 30 lv
565 15 lv
548 15 lv
540 30 lv
0.8 fp
565 45 mv
573 60 lv
590 60 lv
598 45 lv
590 30 lv
573 30 lv
565 45 lv
0.8 fp
440 -60 mv
448 -45 lv
465 -45 lv
473 -60 lv
465 -75 lv
448 -75 lv
440 -60 lv
0.8 fp
465 -45 mv
473 -30 lv
490 -30 lv
498 -45 lv
490 -60 lv
473 -60 lv
465 -45 lv
0.8 fp
490 -30 mv
498 -15 lv
515 -15 lv
523 -30 lv
515 -45 lv
498 -45 lv
490 -30 lv
0.8 fp
515 -15 mv
523 0 lv
540 0 lv
548 -15 lv
540 -30 lv
523 -30 lv
515 -15 lv
0.8 fp
540 0 mv
548 15 lv
565 15 lv
573 0 lv
565 -15 lv
548 -15 lv
540 0 lv
0.8 fp
565 15 mv
573 30 lv
590 30 lv
598 15 lv
590 0 lv
573 0 lv
565 15 lv
0.8 fp
590 30 mv
598 45 lv
615 45 lv
623 30 lv
615 15 lv
598 15 lv
590 30 lv
0.8 fp
465 -75 mv
473 -60 lv
490 -60 lv
498 -75 lv
490 -90 lv
473 -90 lv
465 -75 lv
0.8 fp
490 -60 mv
498 -45 lv
515 -45 lv
523 -60 lv
515 -75 lv
498 -75 lv
490 -60 lv
0.8 fp
515 -45 mv
523 -30 lv
540 -30 lv
548 -45 lv
540 -60 lv
523 -60 lv
515 -45 lv
0.8 fp
540 -30 mv
548 -15 lv
565 -15 lv
573 -30 lv
565 -45 lv
548 -45 lv
540 -30 lv
0.8 fp
565 -15 mv
573 0 lv
590 0 lv
598 -15 lv
590 -30 lv
573 -30 lv
565 -15 lv
0.8 fp
590 0 mv
598 15 lv
615 15 lv
623 0 lv
615 -15 lv
598 -15 lv
590 0 lv
0.8 fp
615 15 mv
623 30 lv
640 30 lv
648 15 lv
640 0 lv
623 0 lv
615 15 lv
0.8 fp
490 -90 mv
498 -75 lv
515 -75 lv
523 -90 lv
515 -105 lv
498 -105 lv
490 -90 lv
0.8 fp
515 -75 mv
523 -60 lv
540 -60 lv
548 -75 lv
540 -90 lv
523 -90 lv
515 -75 lv
0.8 fp
540 -60 mv
548 -45 lv
565 -45 lv
573 -60 lv
565 -75 lv
548 -75 lv
540 -60 lv
0.8 fp
565 -45 mv
573 -30 lv
590 -30 lv
598 -45 lv
590 -60 lv
573 -60 lv
565 -45 lv
0.8 fp
590 -30 mv
598 -15 lv
615 -15 lv
623 -30 lv
615 -45 lv
598 -45 lv
590 -30 lv
0.8 fp
615 -15 mv
623 0 lv
640 0 lv
648 -15 lv
640 -30 lv
623 -30 lv
615 -15 lv
0.8 fp
640 0 mv
648 15 lv
665 15 lv
673 0 lv
665 -15 lv
648 -15 lv
640 0 lv
0.8 fp
509 59 mv
11 1 fc
11 cr
509 88 mv
11 1 fc
11 cr
533 74 mv
11 1 fc
11 cr
357 0 mv
4 0 fc
383 15 mv
4 0 fc
407 29 mv
4 0 fc
383 -15 mv
4 0 fc
407 0 mv
4 0 fc
433 15 mv
4 0 fc
457 29 mv
4 0 fc
483 44 mv
4 0 fc
407 -29 mv
4 0 fc
433 -15 mv
4 0 fc
457 0 mv
4 0 fc
483 15 mv
4 1 fc
4 cr
509 29 mv
4 0 fc
433 -44 mv
4 0 fc
457 -29 mv
4 0 fc
483 -15 mv
4 0 fc
457 -59 mv
4 0 fc
483 -44 mv
4 0 fc
509 -29 mv
4 0 fc
483 -74 mv
4 0 fc
509 -59 mv
4 0 fc
509 -88 mv
4 0 fc
es
bs
697 0 mv
705 15 lv
722 15 lv
730 0 lv
722 -15 lv
705 -15 lv
697 0 lv
0.8 fp
722 15 mv
730 30 lv
747 30 lv
755 15 lv
747 0 lv
730 0 lv
722 15 lv
0.8 fp
747 30 mv
755 45 lv
772 45 lv
780 30 lv
772 15 lv
755 15 lv
747 30 lv
0.8 fp
772 45 mv
780 60 lv
797 60 lv
805 45 lv
797 30 lv
780 30 lv
772 45 lv
0.8 fp
797 60 mv
805 75 lv
822 75 lv
830 60 lv
822 45 lv
805 45 lv
797 60 lv
0.8 fp
822 75 mv
830 90 lv
847 90 lv
855 75 lv
847 60 lv
830 60 lv
822 75 lv
0.8 fp
847 90 mv
855 105 lv
872 105 lv
880 90 lv
872 75 lv
855 75 lv
847 90 lv
0.8 fp
722 -15 mv
730 0 lv
747 0 lv
755 -15 lv
747 -30 lv
730 -30 lv
722 -15 lv
0.8 fp
747 0 mv
755 15 lv
772 15 lv
780 0 lv
772 -15 lv
755 -15 lv
747 0 lv
0.8 fp
772 15 mv
780 30 lv
797 30 lv
805 15 lv
797 0 lv
780 0 lv
772 15 lv
0.8 fp
797 30 mv
805 45 lv
822 45 lv
830 30 lv
822 15 lv
805 15 lv
797 30 lv
0.8 fp
822 45 mv
830 60 lv
847 60 lv
855 45 lv
847 30 lv
830 30 lv
822 45 lv
0.8 fp
847 60 mv
855 75 lv
872 75 lv
880 60 lv
872 45 lv
855 45 lv
847 60 lv
0.8 fp
872 75 mv
880 90 lv
897 90 lv
905 75 lv
897 60 lv
880 60 lv
872 75 lv
0.8 fp
747 -30 mv
755 -15 lv
772 -15 lv
780 -30 lv
772 -45 lv
755 -45 lv
747 -30 lv
0.8 fp
772 -15 mv
780 0 lv
797 0 lv
805 -15 lv
797 -30 lv
780 -30 lv
772 -15 lv
0.8 fp
797 0 mv
805 15 lv
822 15 lv
830 0 lv
822 -15 lv
805 -15 lv
797 0 lv
0.8 fp
822 15 mv
830 30 lv
847 30 lv
855 15 lv
847 0 lv
830 0 lv
822 15 lv
0.8 fp
847 30 mv
855 45 lv
872 45 lv
880 30 lv
872 15 lv
855 15 lv
847 30 lv
0.8 fp
872 45 mv
880 60 lv
897 60 lv
905 45 lv
897 30 lv
880 30 lv
872 45 lv
0.8 fp
897 60 mv
905 75 lv
922 75 lv
930 60 lv
922 45 lv
905 45 lv
897 60 lv
0.8 fp
772 -45 mv
780 -30 lv
797 -30 lv
805 -45 lv
797 -60 lv
780 -60 lv
772 -45 lv
0.8 fp
797 -30 mv
805 -15 lv
822 -15 lv
830 -30 lv
822 -45 lv
805 -45 lv
797 -30 lv
0.8 fp
822 -15 mv
830 0 lv
847 0 lv
855 -15 lv
847 -30 lv
830 -30 lv
822 -15 lv
0.8 fp
847 0 mv
855 15 lv
872 15 lv
880 0 lv
872 -15 lv
855 -15 lv
847 0 lv
0.8 fp
872 15 mv
880 30 lv
897 30 lv
905 15 lv
897 0 lv
880 0 lv
872 15 lv
0.8 fp
897 30 mv
905 45 lv
922 45 lv
930 30 lv
922 15 lv
905 15 lv
897 30 lv
0.8 fp
922 45 mv
930 60 lv
947 60 lv
955 45 lv
947 30 lv
930 30 lv
922 45 lv
0.8 fp
797 -60 mv
805 -45 lv
822 -45 lv
830 -60 lv
822 -75 lv
805 -75 lv
797 -60 lv
0.8 fp
822 -45 mv
830 -30 lv
847 -30 lv
855 -45 lv
847 -60 lv
830 -60 lv
822 -45 lv
0.8 fp
847 -30 mv
855 -15 lv
872 -15 lv
880 -30 lv
872 -45 lv
855 -45 lv
847 -30 lv
0.8 fp
872 -15 mv
880 0 lv
897 0 lv
905 -15 lv
897 -30 lv
880 -30 lv
872 -15 lv
0.8 fp
897 0 mv
905 15 lv
922 15 lv
930 0 lv
922 -15 lv
905 -15 lv
897 0 lv
0.8 fp
922 15 mv
930 30 lv
947 30 lv
955 15 lv
947 0 lv
930 0 lv
922 15 lv
0.8 fp
947 30 mv
955 45 lv
972 45 lv
980 30 lv
972 15 lv
955 15 lv
947 30 lv
0.8 fp
822 -75 mv
830 -60 lv
847 -60 lv
855 -75 lv
847 -90 lv
830 -90 lv
822 -75 lv
0.8 fp
847 -60 mv
855 -45 lv
872 -45 lv
880 -60 lv
872 -75 lv
855 -75 lv
847 -60 lv
0.8 fp
872 -45 mv
880 -30 lv
897 -30 lv
905 -45 lv
897 -60 lv
880 -60 lv
872 -45 lv
0.8 fp
897 -30 mv
905 -15 lv
922 -15 lv
930 -30 lv
922 -45 lv
905 -45 lv
897 -30 lv
0.8 fp
922 -15 mv
930 0 lv
947 0 lv
955 -15 lv
947 -30 lv
930 -30 lv
922 -15 lv
0.8 fp
947 0 mv
955 15 lv
972 15 lv
980 0 lv
972 -15 lv
955 -15 lv
947 0 lv
0.8 fp
972 15 mv
980 30 lv
997 30 lv
1005 15 lv
997 0 lv
980 0 lv
972 15 lv
0.8 fp
847 -90 mv
855 -75 lv
872 -75 lv
880 -90 lv
872 -105 lv
855 -105 lv
847 -90 lv
0.8 fp
872 -75 mv
880 -60 lv
897 -60 lv
905 -75 lv
897 -90 lv
880 -90 lv
872 -75 lv
0.8 fp
897 -60 mv
905 -45 lv
922 -45 lv
930 -60 lv
922 -75 lv
905 -75 lv
897 -60 lv
0.8 fp
922 -45 mv
930 -30 lv
947 -30 lv
955 -45 lv
947 -60 lv
930 -60 lv
922 -45 lv
0.8 fp
947 -30 mv
955 -15 lv
972 -15 lv
980 -30 lv
972 -45 lv
955 -45 lv
947 -30 lv
0.8 fp
972 -15 mv
980 0 lv
997 0 lv
1005 -15 lv
997 -30 lv
980 -30 lv
972 -15 lv
0.8 fp
997 0 mv
1005 15 lv
1022 15 lv
1030 0 lv
1022 -15 lv
1005 -15 lv
997 0 lv
0.8 fp
866 59 mv
11 1 fc
11 cr
866 88 mv
11 1 fc
11 cr
890 74 mv
11 1 fc
11 cr
840 44 mv
4 0 fc
764 -29 mv
4 0 fc
790 -15 mv
4 0 fc
814 0 mv
4 0 fc
840 15 mv
4 0 fc
866 29 mv
4 0 fc
890 44 mv
4 0 fc
916 59 mv
4 0 fc
790 -44 mv
4 0 fc
814 -29 mv
4 0 fc
840 -15 mv
4 1 fc
4 cr
866 0 mv
4 0 fc
890 15 mv
4 0 fc
916 29 mv
4 0 fc
940 44 mv
4 0 fc
814 -59 mv
4 0 fc
840 -44 mv
4 0 fc
866 -29 mv
4 0 fc
890 -15 mv
4 0 fc
916 0 mv
4 0 fc
940 15 mv
4 0 fc
966 29 mv
4 0 fc
840 -74 mv
4 0 fc
916 -29 mv
4 0 fc
940 -15 mv
4 0 fc
966 0 mv
4 0 fc
992 15 mv
4 0 fc
966 -29 mv
4 0 fc
992 -15 mv
4 0 fc
1016 0 mv
4 0 fc
es
bs
1054 0 mv
1062 15 lv
1079 15 lv
1087 0 lv
1079 -15 lv
1062 -15 lv
1054 0 lv
0.8 fp
1079 15 mv
1087 30 lv
1104 30 lv
1112 15 lv
1104 0 lv
1087 0 lv
1079 15 lv
0.8 fp
1104 30 mv
1112 45 lv
1129 45 lv
1137 30 lv
1129 15 lv
1112 15 lv
1104 30 lv
0.8 fp
1129 45 mv
1137 60 lv
1154 60 lv
1162 45 lv
1154 30 lv
1137 30 lv
1129 45 lv
0.8 fp
1154 60 mv
1162 75 lv
1179 75 lv
1187 60 lv
1179 45 lv
1162 45 lv
1154 60 lv
0.8 fp
1179 75 mv
1187 90 lv
1204 90 lv
1212 75 lv
1204 60 lv
1187 60 lv
1179 75 lv
0.8 fp
1204 90 mv
1212 105 lv
1229 105 lv
1237 90 lv
1229 75 lv
1212 75 lv
1204 90 lv
0.8 fp
1079 -15 mv
1087 0 lv
1104 0 lv
1112 -15 lv
1104 -30 lv
1087 -30 lv
1079 -15 lv
0.8 fp
1104 0 mv
1112 15 lv
1129 15 lv
1137 0 lv
1129 -15 lv
1112 -15 lv
1104 0 lv
0.8 fp
1129 15 mv
1137 30 lv
1154 30 lv
1162 15 lv
1154 0 lv
1137 0 lv
1129 15 lv
0.8 fp
1154 30 mv
1162 45 lv
1179 45 lv
1187 30 lv
1179 15 lv
1162 15 lv
1154 30 lv
0.8 fp
1179 45 mv
1187 60 lv
1204 60 lv
1212 45 lv
1204 30 lv
1187 30 lv
1179 45 lv
0.8 fp
1204 60 mv
1212 75 lv
1229 75 lv
1237 60 lv
1229 45 lv
1212 45 lv
1204 60 lv
0.8 fp
1229 75 mv
1237 90 lv
1254 90 lv
1262 75 lv
1254 60 lv
1237 60 lv
1229 75 lv
0.8 fp
1104 -30 mv
1112 -15 lv
1129 -15 lv
1137 -30 lv
1129 -45 lv
1112 -45 lv
1104 -30 lv
0.8 fp
1129 -15 mv
1137 0 lv
1154 0 lv
1162 -15 lv
1154 -30 lv
1137 -30 lv
1129 -15 lv
0.8 fp
1154 0 mv
1162 15 lv
1179 15 lv
1187 0 lv
1179 -15 lv
1162 -15 lv
1154 0 lv
0.8 fp
1179 15 mv
1187 30 lv
1204 30 lv
1212 15 lv
1204 0 lv
1187 0 lv
1179 15 lv
0.8 fp
1204 30 mv
1212 45 lv
1229 45 lv
1237 30 lv
1229 15 lv
1212 15 lv
1204 30 lv
0.8 fp
1229 45 mv
1237 60 lv
1254 60 lv
1262 45 lv
1254 30 lv
1237 30 lv
1229 45 lv
0.8 fp
1254 60 mv
1262 75 lv
1279 75 lv
1287 60 lv
1279 45 lv
1262 45 lv
1254 60 lv
0.8 fp
1129 -45 mv
1137 -30 lv
1154 -30 lv
1162 -45 lv
1154 -60 lv
1137 -60 lv
1129 -45 lv
0.8 fp
1154 -30 mv
1162 -15 lv
1179 -15 lv
1187 -30 lv
1179 -45 lv
1162 -45 lv
1154 -30 lv
0.8 fp
1179 -15 mv
1187 0 lv
1204 0 lv
1212 -15 lv
1204 -30 lv
1187 -30 lv
1179 -15 lv
0.8 fp
1204 0 mv
1212 15 lv
1229 15 lv
1237 0 lv
1229 -15 lv
1212 -15 lv
1204 0 lv
0.8 fp
1229 15 mv
1237 30 lv
1254 30 lv
1262 15 lv
1254 0 lv
1237 0 lv
1229 15 lv
0.8 fp
1254 30 mv
1262 45 lv
1279 45 lv
1287 30 lv
1279 15 lv
1262 15 lv
1254 30 lv
0.8 fp
1279 45 mv
1287 60 lv
1304 60 lv
1312 45 lv
1304 30 lv
1287 30 lv
1279 45 lv
0.8 fp
1154 -60 mv
1162 -45 lv
1179 -45 lv
1187 -60 lv
1179 -75 lv
1162 -75 lv
1154 -60 lv
0.8 fp
1179 -45 mv
1187 -30 lv
1204 -30 lv
1212 -45 lv
1204 -60 lv
1187 -60 lv
1179 -45 lv
0.8 fp
1204 -30 mv
1212 -15 lv
1229 -15 lv
1237 -30 lv
1229 -45 lv
1212 -45 lv
1204 -30 lv
0.8 fp
1229 -15 mv
1237 0 lv
1254 0 lv
1262 -15 lv
1254 -30 lv
1237 -30 lv
1229 -15 lv
0.8 fp
1254 0 mv
1262 15 lv
1279 15 lv
1287 0 lv
1279 -15 lv
1262 -15 lv
1254 0 lv
0.8 fp
1279 15 mv
1287 30 lv
1304 30 lv
1312 15 lv
1304 0 lv
1287 0 lv
1279 15 lv
0.8 fp
1304 30 mv
1312 45 lv
1329 45 lv
1337 30 lv
1329 15 lv
1312 15 lv
1304 30 lv
0.8 fp
1179 -75 mv
1187 -60 lv
1204 -60 lv
1212 -75 lv
1204 -90 lv
1187 -90 lv
1179 -75 lv
0.8 fp
1204 -60 mv
1212 -45 lv
1229 -45 lv
1237 -60 lv
1229 -75 lv
1212 -75 lv
1204 -60 lv
0.8 fp
1229 -45 mv
1237 -30 lv
1254 -30 lv
1262 -45 lv
1254 -60 lv
1237 -60 lv
1229 -45 lv
0.8 fp
1254 -30 mv
1262 -15 lv
1279 -15 lv
1287 -30 lv
1279 -45 lv
1262 -45 lv
1254 -30 lv
0.8 fp
1279 -15 mv
1287 0 lv
1304 0 lv
1312 -15 lv
1304 -30 lv
1287 -30 lv
1279 -15 lv
0.8 fp
1304 0 mv
1312 15 lv
1329 15 lv
1337 0 lv
1329 -15 lv
1312 -15 lv
1304 0 lv
0.8 fp
1329 15 mv
1337 30 lv
1354 30 lv
1362 15 lv
1354 0 lv
1337 0 lv
1329 15 lv
0.8 fp
1204 -90 mv
1212 -75 lv
1229 -75 lv
1237 -90 lv
1229 -105 lv
1212 -105 lv
1204 -90 lv
0.8 fp
1229 -75 mv
1237 -60 lv
1254 -60 lv
1262 -75 lv
1254 -90 lv
1237 -90 lv
1229 -75 lv
0.8 fp
1254 -60 mv
1262 -45 lv
1279 -45 lv
1287 -60 lv
1279 -75 lv
1262 -75 lv
1254 -60 lv
0.8 fp
1279 -45 mv
1287 -30 lv
1304 -30 lv
1312 -45 lv
1304 -60 lv
1287 -60 lv
1279 -45 lv
0.8 fp
1304 -30 mv
1312 -15 lv
1329 -15 lv
1337 -30 lv
1329 -45 lv
1312 -45 lv
1304 -30 lv
0.8 fp
1329 -15 mv
1337 0 lv
1354 0 lv
1362 -15 lv
1354 -30 lv
1337 -30 lv
1329 -15 lv
0.8 fp
1354 0 mv
1362 15 lv
1379 15 lv
1387 0 lv
1379 -15 lv
1362 -15 lv
1354 0 lv
0.8 fp
1223 59 mv
11 1 fc
11 cr
1223 88 mv
11 1 fc
11 cr
1247 74 mv
11 1 fc
11 cr
1197 44 mv
4 0 fc
1121 -29 mv
4 0 fc
1147 -15 mv
4 0 fc
1171 0 mv
4 0 fc
1197 15 mv
4 0 fc
1223 29 mv
4 0 fc
1147 -44 mv
4 0 fc
1171 -29 mv
4 0 fc
1197 -15 mv
4 0 fc
1171 -59 mv
4 0 fc
1197 -44 mv
4 0 fc
1223 -29 mv
4 0 fc
1197 -74 mv
4 0 fc
es
stroke end showpage
%%Trailer:
%%BoundingBox: -6 -26 333 25
%%EOF

%%EndDocument
 @endspecial 501 1861 a Fw(A)510 1801 y(1)555 1889 y(B)562
1773 y(2)606 1919 y(C)614 1743 y(3)653 1949 y(D)662 1713
y(4)708 1979 y(E)714 1683 y(5)757 2007 y(F)762 1655 y(6)804
2037 y(G)814 1625 y(7)0 2216 y Fs(Fig.)f(7.)g Ff(Sol)-8
b(ver)29 b Fs(solv)m(es)j(b6:)f(initialization.)e(After)i(the)h
(initial)c(mo)m(v)m(e)33 b(\(left\),)f(the)g(game-state)i(is)c(reduced)
h(b)m(y)0 2329 y(applying)h(Theorem)h(5)i(and)e(adding)g(white)g
(stones)h(to)h(the)f(t)m(w)m(o)h(side-cells)d(of)j(the)f(white)f
(side-triangle)f(with)0 2442 y(tip)38 b(b6.)i(In)e(the)i(resulting)d
(state,)k(White)e(has)g(t)m(w)m(o)i(win-w)m(eaklinks)c(\(cen)m
(ter-left)k(and)d(cen)m(ter-righ)m(t\))j(whose)0 2555
y(resulting)32 b(in)m(tersection)i(yields)e(a)j(13-cell)f(blac)m(k)g(m)
m(ustpla)m(y)g(region)g(\(righ)m(t\).)g(If)g(Blac)m(k)h(has)f(a)g
(winning)d(mo)m(v)m(e,)0 2668 y(it)f(has)g(a)h(winning)c(mo)m(v)m(e)32
b(to)f(one)g(of)f(these)h(13)g(cells.)526 3352 y @beginspecial
-8 @llx -34 @lly 331 @urx 32 @ury 3390 @rwi @setspecial
%%BeginDocument: ppr.ps8
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: (atend)
%%Title: TeXdraw drawing: ppr.ps8
%%Pages: 1
%%Creator: 1995/12/19 TeXdraw V2R0
%%CreationDate: 2006/4/25
50 dict begin
/mv {stroke moveto} def
/lv {lineto} def
/st {currentpoint stroke moveto} def
/sl {st setlinewidth} def
/sd {st 0 setdash} def
/sg {st setgray} def
/bs {gsave} def /es {stroke grestore} def
/fl {gsave setgray fill grestore
 currentpoint newpath moveto} def
/fp {gsave setgray fill grestore st} def
/cv {curveto} def
/cr {gsave currentpoint newpath 3 -1 roll 0 360 arc
 stroke grestore} def
/fc {gsave setgray currentpoint newpath
 3 -1 roll 0 360 arc fill grestore} def
/ar {gsave currentpoint newpath 5 2 roll arc stroke grestore} def
/el {gsave /svm matrix currentmatrix def
 currentpoint translate scale newpath 0 0 1 0 360 arc
 svm setmatrix stroke grestore} def
/fe {gsave setgray currentpoint translate scale newpath
 0 0 1 0 360 arc fill grestore} def
/av {/hhwid exch 2 div def /hlen exch def
 /ah exch def /tipy exch def /tipx exch def
 currentpoint /taily exch def /tailx exch def
 /dx tipx tailx sub def /dy tipy taily sub def
 /alen dx dx mul dy dy mul add sqrt def
 /blen alen hlen sub def
 gsave tailx taily translate dy dx atan rotate
 (V) ah ne {blen 0 gt {blen 0 lineto} if} {alen 0 lineto} ifelse
 stroke blen hhwid neg moveto alen 0 lineto blen hhwid lineto
 (T) ah eq {closepath} if
 (W) ah eq {gsave 1 setgray fill grestore closepath} if
 (F) ah eq {fill} {stroke} ifelse
 grestore tipx tipy moveto} def
0.24 0.24 scale
1 setlinecap 1 setlinejoin
3 setlinewidth [] 0 setdash
0 0 moveto
0 sl
bs
-22 0 mv
-11 19 lv
11 19 lv
22 0 lv
11 -19 lv
-11 -19 lv
-22 0 lv
0.8 fp
10 19 mv
21 38 lv
43 38 lv
54 19 lv
43 0 lv
21 0 lv
10 19 lv
0.8 fp
42 38 mv
53 57 lv
75 57 lv
86 38 lv
75 19 lv
53 19 lv
42 38 lv
0.8 fp
74 57 mv
85 76 lv
107 76 lv
118 57 lv
107 38 lv
85 38 lv
74 57 lv
0.8 fp
106 76 mv
117 95 lv
139 95 lv
150 76 lv
139 57 lv
117 57 lv
106 76 lv
0.8 fp
138 95 mv
149 114 lv
171 114 lv
182 95 lv
171 76 lv
149 76 lv
138 95 lv
0.8 fp
170 114 mv
181 133 lv
203 133 lv
214 114 lv
203 95 lv
181 95 lv
170 114 lv
0.8 fp
10 -19 mv
21 0 lv
43 0 lv
54 -19 lv
43 -38 lv
21 -38 lv
10 -19 lv
0.8 fp
42 0 mv
53 19 lv
75 19 lv
86 0 lv
75 -19 lv
53 -19 lv
42 0 lv
0.8 fp
74 19 mv
85 38 lv
107 38 lv
118 19 lv
107 0 lv
85 0 lv
74 19 lv
0.8 fp
106 38 mv
117 57 lv
139 57 lv
150 38 lv
139 19 lv
117 19 lv
106 38 lv
0.8 fp
138 57 mv
149 76 lv
171 76 lv
182 57 lv
171 38 lv
149 38 lv
138 57 lv
0.8 fp
170 76 mv
181 95 lv
203 95 lv
214 76 lv
203 57 lv
181 57 lv
170 76 lv
0.8 fp
202 95 mv
213 114 lv
235 114 lv
246 95 lv
235 76 lv
213 76 lv
202 95 lv
0.8 fp
42 -38 mv
53 -19 lv
75 -19 lv
86 -38 lv
75 -57 lv
53 -57 lv
42 -38 lv
0.8 fp
74 -19 mv
85 0 lv
107 0 lv
118 -19 lv
107 -38 lv
85 -38 lv
74 -19 lv
0.8 fp
106 0 mv
117 19 lv
139 19 lv
150 0 lv
139 -19 lv
117 -19 lv
106 0 lv
0.8 fp
138 19 mv
149 38 lv
171 38 lv
182 19 lv
171 0 lv
149 0 lv
138 19 lv
0.8 fp
170 38 mv
181 57 lv
203 57 lv
214 38 lv
203 19 lv
181 19 lv
170 38 lv
0.8 fp
202 57 mv
213 76 lv
235 76 lv
246 57 lv
235 38 lv
213 38 lv
202 57 lv
0.8 fp
234 76 mv
245 95 lv
267 95 lv
278 76 lv
267 57 lv
245 57 lv
234 76 lv
0.8 fp
74 -57 mv
85 -38 lv
107 -38 lv
118 -57 lv
107 -76 lv
85 -76 lv
74 -57 lv
0.8 fp
106 -38 mv
117 -19 lv
139 -19 lv
150 -38 lv
139 -57 lv
117 -57 lv
106 -38 lv
0.8 fp
138 -19 mv
149 0 lv
171 0 lv
182 -19 lv
171 -38 lv
149 -38 lv
138 -19 lv
0.8 fp
170 0 mv
181 19 lv
203 19 lv
214 0 lv
203 -19 lv
181 -19 lv
170 0 lv
0.8 fp
202 19 mv
213 38 lv
235 38 lv
246 19 lv
235 0 lv
213 0 lv
202 19 lv
0.8 fp
234 38 mv
245 57 lv
267 57 lv
278 38 lv
267 19 lv
245 19 lv
234 38 lv
0.8 fp
266 57 mv
277 76 lv
299 76 lv
310 57 lv
299 38 lv
277 38 lv
266 57 lv
0.8 fp
106 -76 mv
117 -57 lv
139 -57 lv
150 -76 lv
139 -95 lv
117 -95 lv
106 -76 lv
0.8 fp
138 -57 mv
149 -38 lv
171 -38 lv
182 -57 lv
171 -76 lv
149 -76 lv
138 -57 lv
0.8 fp
170 -38 mv
181 -19 lv
203 -19 lv
214 -38 lv
203 -57 lv
181 -57 lv
170 -38 lv
0.8 fp
202 -19 mv
213 0 lv
235 0 lv
246 -19 lv
235 -38 lv
213 -38 lv
202 -19 lv
0.8 fp
234 0 mv
245 19 lv
267 19 lv
278 0 lv
267 -19 lv
245 -19 lv
234 0 lv
0.8 fp
266 19 mv
277 38 lv
299 38 lv
310 19 lv
299 0 lv
277 0 lv
266 19 lv
0.8 fp
298 38 mv
309 57 lv
331 57 lv
342 38 lv
331 19 lv
309 19 lv
298 38 lv
0.8 fp
138 -95 mv
149 -76 lv
171 -76 lv
182 -95 lv
171 -114 lv
149 -114 lv
138 -95 lv
0.8 fp
170 -76 mv
181 -57 lv
203 -57 lv
214 -76 lv
203 -95 lv
181 -95 lv
170 -76 lv
0.8 fp
202 -57 mv
213 -38 lv
235 -38 lv
246 -57 lv
235 -76 lv
213 -76 lv
202 -57 lv
0.8 fp
234 -38 mv
245 -19 lv
267 -19 lv
278 -38 lv
267 -57 lv
245 -57 lv
234 -38 lv
0.8 fp
266 -19 mv
277 0 lv
299 0 lv
310 -19 lv
299 -38 lv
277 -38 lv
266 -19 lv
0.8 fp
298 0 mv
309 19 lv
331 19 lv
342 0 lv
331 -19 lv
309 -19 lv
298 0 lv
0.8 fp
330 19 mv
341 38 lv
363 38 lv
374 19 lv
363 0 lv
341 0 lv
330 19 lv
0.8 fp
170 -114 mv
181 -95 lv
203 -95 lv
214 -114 lv
203 -133 lv
181 -133 lv
170 -114 lv
0.8 fp
202 -95 mv
213 -76 lv
235 -76 lv
246 -95 lv
235 -114 lv
213 -114 lv
202 -95 lv
0.8 fp
234 -76 mv
245 -57 lv
267 -57 lv
278 -76 lv
267 -95 lv
245 -95 lv
234 -76 lv
0.8 fp
266 -57 mv
277 -38 lv
299 -38 lv
310 -57 lv
299 -76 lv
277 -76 lv
266 -57 lv
0.8 fp
298 -38 mv
309 -19 lv
331 -19 lv
342 -38 lv
331 -57 lv
309 -57 lv
298 -38 lv
0.8 fp
330 -19 mv
341 0 lv
363 0 lv
374 -19 lv
363 -38 lv
341 -38 lv
330 -19 lv
0.8 fp
362 0 mv
373 19 lv
395 19 lv
406 0 lv
395 -19 lv
373 -19 lv
362 0 lv
0.8 fp
0 113 mv
14 0 fc
0 -113 mv
14 1 fc
14 cr
388 -113 mv
14 0 fc
388 113 mv
14 1 fc
14 cr
194 76 mv
14 1 fc
14 cr
226 95 mv
14 1 fc
14 cr
194 113 mv
14 1 fc
14 cr
162 19 mv
14 0 fc
es
bs
464 0 mv
475 19 lv
497 19 lv
508 0 lv
497 -19 lv
475 -19 lv
464 0 lv
0.8 fp
496 19 mv
507 38 lv
529 38 lv
540 19 lv
529 0 lv
507 0 lv
496 19 lv
0.8 fp
528 38 mv
539 57 lv
561 57 lv
572 38 lv
561 19 lv
539 19 lv
528 38 lv
0.8 fp
560 57 mv
571 76 lv
593 76 lv
604 57 lv
593 38 lv
571 38 lv
560 57 lv
0.8 fp
592 76 mv
603 95 lv
625 95 lv
636 76 lv
625 57 lv
603 57 lv
592 76 lv
0.8 fp
624 95 mv
635 114 lv
657 114 lv
668 95 lv
657 76 lv
635 76 lv
624 95 lv
0.8 fp
656 114 mv
667 133 lv
689 133 lv
700 114 lv
689 95 lv
667 95 lv
656 114 lv
0.8 fp
496 -19 mv
507 0 lv
529 0 lv
540 -19 lv
529 -38 lv
507 -38 lv
496 -19 lv
0.8 fp
528 0 mv
539 19 lv
561 19 lv
572 0 lv
561 -19 lv
539 -19 lv
528 0 lv
0.8 fp
560 19 mv
571 38 lv
593 38 lv
604 19 lv
593 0 lv
571 0 lv
560 19 lv
0.8 fp
592 38 mv
603 57 lv
625 57 lv
636 38 lv
625 19 lv
603 19 lv
592 38 lv
0.8 fp
624 57 mv
635 76 lv
657 76 lv
668 57 lv
657 38 lv
635 38 lv
624 57 lv
0.8 fp
656 76 mv
667 95 lv
689 95 lv
700 76 lv
689 57 lv
667 57 lv
656 76 lv
0.8 fp
688 95 mv
699 114 lv
721 114 lv
732 95 lv
721 76 lv
699 76 lv
688 95 lv
0.8 fp
528 -38 mv
539 -19 lv
561 -19 lv
572 -38 lv
561 -57 lv
539 -57 lv
528 -38 lv
0.8 fp
560 -19 mv
571 0 lv
593 0 lv
604 -19 lv
593 -38 lv
571 -38 lv
560 -19 lv
0.8 fp
592 0 mv
603 19 lv
625 19 lv
636 0 lv
625 -19 lv
603 -19 lv
592 0 lv
0.8 fp
624 19 mv
635 38 lv
657 38 lv
668 19 lv
657 0 lv
635 0 lv
624 19 lv
0.8 fp
656 38 mv
667 57 lv
689 57 lv
700 38 lv
689 19 lv
667 19 lv
656 38 lv
0.8 fp
688 57 mv
699 76 lv
721 76 lv
732 57 lv
721 38 lv
699 38 lv
688 57 lv
0.8 fp
720 76 mv
731 95 lv
753 95 lv
764 76 lv
753 57 lv
731 57 lv
720 76 lv
0.8 fp
560 -57 mv
571 -38 lv
593 -38 lv
604 -57 lv
593 -76 lv
571 -76 lv
560 -57 lv
0.8 fp
592 -38 mv
603 -19 lv
625 -19 lv
636 -38 lv
625 -57 lv
603 -57 lv
592 -38 lv
0.8 fp
624 -19 mv
635 0 lv
657 0 lv
668 -19 lv
657 -38 lv
635 -38 lv
624 -19 lv
0.8 fp
656 0 mv
667 19 lv
689 19 lv
700 0 lv
689 -19 lv
667 -19 lv
656 0 lv
0.8 fp
688 19 mv
699 38 lv
721 38 lv
732 19 lv
721 0 lv
699 0 lv
688 19 lv
0.8 fp
720 38 mv
731 57 lv
753 57 lv
764 38 lv
753 19 lv
731 19 lv
720 38 lv
0.8 fp
752 57 mv
763 76 lv
785 76 lv
796 57 lv
785 38 lv
763 38 lv
752 57 lv
0.8 fp
592 -76 mv
603 -57 lv
625 -57 lv
636 -76 lv
625 -95 lv
603 -95 lv
592 -76 lv
0.8 fp
624 -57 mv
635 -38 lv
657 -38 lv
668 -57 lv
657 -76 lv
635 -76 lv
624 -57 lv
0.8 fp
656 -38 mv
667 -19 lv
689 -19 lv
700 -38 lv
689 -57 lv
667 -57 lv
656 -38 lv
0.8 fp
688 -19 mv
699 0 lv
721 0 lv
732 -19 lv
721 -38 lv
699 -38 lv
688 -19 lv
0.8 fp
720 0 mv
731 19 lv
753 19 lv
764 0 lv
753 -19 lv
731 -19 lv
720 0 lv
0.8 fp
752 19 mv
763 38 lv
785 38 lv
796 19 lv
785 0 lv
763 0 lv
752 19 lv
0.8 fp
784 38 mv
795 57 lv
817 57 lv
828 38 lv
817 19 lv
795 19 lv
784 38 lv
0.8 fp
624 -95 mv
635 -76 lv
657 -76 lv
668 -95 lv
657 -114 lv
635 -114 lv
624 -95 lv
0.8 fp
656 -76 mv
667 -57 lv
689 -57 lv
700 -76 lv
689 -95 lv
667 -95 lv
656 -76 lv
0.8 fp
688 -57 mv
699 -38 lv
721 -38 lv
732 -57 lv
721 -76 lv
699 -76 lv
688 -57 lv
0.8 fp
720 -38 mv
731 -19 lv
753 -19 lv
764 -38 lv
753 -57 lv
731 -57 lv
720 -38 lv
0.8 fp
752 -19 mv
763 0 lv
785 0 lv
796 -19 lv
785 -38 lv
763 -38 lv
752 -19 lv
0.8 fp
784 0 mv
795 19 lv
817 19 lv
828 0 lv
817 -19 lv
795 -19 lv
784 0 lv
0.8 fp
816 19 mv
827 38 lv
849 38 lv
860 19 lv
849 0 lv
827 0 lv
816 19 lv
0.8 fp
656 -114 mv
667 -95 lv
689 -95 lv
700 -114 lv
689 -133 lv
667 -133 lv
656 -114 lv
0.8 fp
688 -95 mv
699 -76 lv
721 -76 lv
732 -95 lv
721 -114 lv
699 -114 lv
688 -95 lv
0.8 fp
720 -76 mv
731 -57 lv
753 -57 lv
764 -76 lv
753 -95 lv
731 -95 lv
720 -76 lv
0.8 fp
752 -57 mv
763 -38 lv
785 -38 lv
796 -57 lv
785 -76 lv
763 -76 lv
752 -57 lv
0.8 fp
784 -38 mv
795 -19 lv
817 -19 lv
828 -38 lv
817 -57 lv
795 -57 lv
784 -38 lv
0.8 fp
816 -19 mv
827 0 lv
849 0 lv
860 -19 lv
849 -38 lv
827 -38 lv
816 -19 lv
0.8 fp
848 0 mv
859 19 lv
881 19 lv
892 0 lv
881 -19 lv
859 -19 lv
848 0 lv
0.8 fp
680 76 mv
14 1 fc
14 cr
680 113 mv
14 1 fc
14 cr
712 95 mv
14 1 fc
14 cr
648 19 mv
14 0 fc
712 19 mv
14 0 fc
680 38 mv
14 0 fc
712 -19 mv
14 0 fc
712 -57 mv
14 0 fc
746 -38 mv
14 0 fc
680 -76 mv
14 1 fc
14 cr
648 -95 mv
14 1 fc
14 cr
680 -113 mv
14 1 fc
14 cr
680 0 mv
14 1 fc
14 cr
746 0 mv
14 1 fc
14 cr
746 -76 mv
14 1 fc
14 cr
712 -95 mv
14 1 fc
14 cr
746 76 mv
5 0 fc
778 57 mv
5 0 fc
810 38 mv
5 0 fc
842 19 mv
5 0 fc
874 0 mv
5 0 fc
712 57 mv
5 0 fc
746 38 mv
5 0 fc
778 19 mv
5 0 fc
810 0 mv
5 0 fc
842 -19 mv
5 0 fc
778 -19 mv
5 0 fc
810 -38 mv
5 0 fc
778 -57 mv
5 1 fc
5 cr
es
bs
950 0 mv
961 19 lv
983 19 lv
994 0 lv
983 -19 lv
961 -19 lv
950 0 lv
0.8 fp
982 19 mv
993 38 lv
1015 38 lv
1026 19 lv
1015 0 lv
993 0 lv
982 19 lv
0.8 fp
1014 38 mv
1025 57 lv
1047 57 lv
1058 38 lv
1047 19 lv
1025 19 lv
1014 38 lv
0.8 fp
1046 57 mv
1057 76 lv
1079 76 lv
1090 57 lv
1079 38 lv
1057 38 lv
1046 57 lv
0.8 fp
1078 76 mv
1089 95 lv
1111 95 lv
1122 76 lv
1111 57 lv
1089 57 lv
1078 76 lv
0.8 fp
1110 95 mv
1121 114 lv
1143 114 lv
1154 95 lv
1143 76 lv
1121 76 lv
1110 95 lv
0.8 fp
1142 114 mv
1153 133 lv
1175 133 lv
1186 114 lv
1175 95 lv
1153 95 lv
1142 114 lv
0.8 fp
982 -19 mv
993 0 lv
1015 0 lv
1026 -19 lv
1015 -38 lv
993 -38 lv
982 -19 lv
0.8 fp
1014 0 mv
1025 19 lv
1047 19 lv
1058 0 lv
1047 -19 lv
1025 -19 lv
1014 0 lv
0.8 fp
1046 19 mv
1057 38 lv
1079 38 lv
1090 19 lv
1079 0 lv
1057 0 lv
1046 19 lv
0.8 fp
1078 38 mv
1089 57 lv
1111 57 lv
1122 38 lv
1111 19 lv
1089 19 lv
1078 38 lv
0.8 fp
1110 57 mv
1121 76 lv
1143 76 lv
1154 57 lv
1143 38 lv
1121 38 lv
1110 57 lv
0.8 fp
1142 76 mv
1153 95 lv
1175 95 lv
1186 76 lv
1175 57 lv
1153 57 lv
1142 76 lv
0.8 fp
1174 95 mv
1185 114 lv
1207 114 lv
1218 95 lv
1207 76 lv
1185 76 lv
1174 95 lv
0.8 fp
1014 -38 mv
1025 -19 lv
1047 -19 lv
1058 -38 lv
1047 -57 lv
1025 -57 lv
1014 -38 lv
0.8 fp
1046 -19 mv
1057 0 lv
1079 0 lv
1090 -19 lv
1079 -38 lv
1057 -38 lv
1046 -19 lv
0.8 fp
1078 0 mv
1089 19 lv
1111 19 lv
1122 0 lv
1111 -19 lv
1089 -19 lv
1078 0 lv
0.8 fp
1110 19 mv
1121 38 lv
1143 38 lv
1154 19 lv
1143 0 lv
1121 0 lv
1110 19 lv
0.8 fp
1142 38 mv
1153 57 lv
1175 57 lv
1186 38 lv
1175 19 lv
1153 19 lv
1142 38 lv
0.8 fp
1174 57 mv
1185 76 lv
1207 76 lv
1218 57 lv
1207 38 lv
1185 38 lv
1174 57 lv
0.8 fp
1206 76 mv
1217 95 lv
1239 95 lv
1250 76 lv
1239 57 lv
1217 57 lv
1206 76 lv
0.8 fp
1046 -57 mv
1057 -38 lv
1079 -38 lv
1090 -57 lv
1079 -76 lv
1057 -76 lv
1046 -57 lv
0.8 fp
1078 -38 mv
1089 -19 lv
1111 -19 lv
1122 -38 lv
1111 -57 lv
1089 -57 lv
1078 -38 lv
0.8 fp
1110 -19 mv
1121 0 lv
1143 0 lv
1154 -19 lv
1143 -38 lv
1121 -38 lv
1110 -19 lv
0.8 fp
1142 0 mv
1153 19 lv
1175 19 lv
1186 0 lv
1175 -19 lv
1153 -19 lv
1142 0 lv
0.8 fp
1174 19 mv
1185 38 lv
1207 38 lv
1218 19 lv
1207 0 lv
1185 0 lv
1174 19 lv
0.8 fp
1206 38 mv
1217 57 lv
1239 57 lv
1250 38 lv
1239 19 lv
1217 19 lv
1206 38 lv
0.8 fp
1238 57 mv
1249 76 lv
1271 76 lv
1282 57 lv
1271 38 lv
1249 38 lv
1238 57 lv
0.8 fp
1078 -76 mv
1089 -57 lv
1111 -57 lv
1122 -76 lv
1111 -95 lv
1089 -95 lv
1078 -76 lv
0.8 fp
1110 -57 mv
1121 -38 lv
1143 -38 lv
1154 -57 lv
1143 -76 lv
1121 -76 lv
1110 -57 lv
0.8 fp
1142 -38 mv
1153 -19 lv
1175 -19 lv
1186 -38 lv
1175 -57 lv
1153 -57 lv
1142 -38 lv
0.8 fp
1174 -19 mv
1185 0 lv
1207 0 lv
1218 -19 lv
1207 -38 lv
1185 -38 lv
1174 -19 lv
0.8 fp
1206 0 mv
1217 19 lv
1239 19 lv
1250 0 lv
1239 -19 lv
1217 -19 lv
1206 0 lv
0.8 fp
1238 19 mv
1249 38 lv
1271 38 lv
1282 19 lv
1271 0 lv
1249 0 lv
1238 19 lv
0.8 fp
1270 38 mv
1281 57 lv
1303 57 lv
1314 38 lv
1303 19 lv
1281 19 lv
1270 38 lv
0.8 fp
1110 -95 mv
1121 -76 lv
1143 -76 lv
1154 -95 lv
1143 -114 lv
1121 -114 lv
1110 -95 lv
0.8 fp
1142 -76 mv
1153 -57 lv
1175 -57 lv
1186 -76 lv
1175 -95 lv
1153 -95 lv
1142 -76 lv
0.8 fp
1174 -57 mv
1185 -38 lv
1207 -38 lv
1218 -57 lv
1207 -76 lv
1185 -76 lv
1174 -57 lv
0.8 fp
1206 -38 mv
1217 -19 lv
1239 -19 lv
1250 -38 lv
1239 -57 lv
1217 -57 lv
1206 -38 lv
0.8 fp
1238 -19 mv
1249 0 lv
1271 0 lv
1282 -19 lv
1271 -38 lv
1249 -38 lv
1238 -19 lv
0.8 fp
1270 0 mv
1281 19 lv
1303 19 lv
1314 0 lv
1303 -19 lv
1281 -19 lv
1270 0 lv
0.8 fp
1302 19 mv
1313 38 lv
1335 38 lv
1346 19 lv
1335 0 lv
1313 0 lv
1302 19 lv
0.8 fp
1142 -114 mv
1153 -95 lv
1175 -95 lv
1186 -114 lv
1175 -133 lv
1153 -133 lv
1142 -114 lv
0.8 fp
1174 -95 mv
1185 -76 lv
1207 -76 lv
1218 -95 lv
1207 -114 lv
1185 -114 lv
1174 -95 lv
0.8 fp
1206 -76 mv
1217 -57 lv
1239 -57 lv
1250 -76 lv
1239 -95 lv
1217 -95 lv
1206 -76 lv
0.8 fp
1238 -57 mv
1249 -38 lv
1271 -38 lv
1282 -57 lv
1271 -76 lv
1249 -76 lv
1238 -57 lv
0.8 fp
1270 -38 mv
1281 -19 lv
1303 -19 lv
1314 -38 lv
1303 -57 lv
1281 -57 lv
1270 -38 lv
0.8 fp
1302 -19 mv
1313 0 lv
1335 0 lv
1346 -19 lv
1335 -38 lv
1313 -38 lv
1302 -19 lv
0.8 fp
1334 0 mv
1345 19 lv
1367 19 lv
1378 0 lv
1367 -19 lv
1345 -19 lv
1334 0 lv
0.8 fp
1166 76 mv
14 1 fc
14 cr
1166 113 mv
14 1 fc
14 cr
1198 95 mv
14 1 fc
14 cr
1036 -38 mv
5 0 fc
1070 -19 mv
5 0 fc
1102 0 mv
5 0 fc
1166 38 mv
5 0 fc
1198 57 mv
5 0 fc
1232 76 mv
5 0 fc
1070 -57 mv
5 0 fc
1102 -38 mv
5 0 fc
1134 -19 mv
5 0 fc
1166 0 mv
5 0 fc
1198 19 mv
5 0 fc
1232 38 mv
5 0 fc
1264 57 mv
5 0 fc
1102 -76 mv
5 0 fc
1134 -57 mv
5 0 fc
1166 -38 mv
5 0 fc
1198 -19 mv
5 0 fc
1232 0 mv
5 0 fc
1264 19 mv
5 0 fc
1296 38 mv
5 0 fc
1134 -95 mv
5 0 fc
1166 -76 mv
5 1 fc
5 cr
1198 -57 mv
5 0 fc
1232 -38 mv
5 0 fc
1264 -19 mv
5 0 fc
1296 0 mv
5 0 fc
1328 19 mv
5 0 fc
1166 -113 mv
5 0 fc
1198 -95 mv
5 0 fc
1232 -76 mv
5 0 fc
1264 -57 mv
5 0 fc
1296 -38 mv
5 0 fc
1328 -19 mv
5 0 fc
1360 0 mv
5 0 fc
es
stroke end showpage
%%Trailer:
%%BoundingBox: -8 -34 331 32
%%EOF

%%EndDocument
 @endspecial 501 3126 a Fw(A)510 3050 y(1)567 3164 y(B)574
3012 y(2)630 3202 y(C)638 2974 y(3)693 3240 y(D)702 2936
y(4)764 3278 y(E)770 2898 y(5)829 3314 y(F)834 2862 y(6)888
3352 y(G)898 2824 y(7)0 3531 y Fs(Fig.)48 b(8.)g Ff(Sol)-8
b(ver)46 b Fs(solv)m(es)h(b6-c4.)i(As)f(sho)m(wn)f(b)m(y)g(the)h
Ff(Sol)-8 b(ver)46 b Fs(b6)h(recursion)f(tree)j(in)d(Figure)h(13,)i(c4)
f(is)0 3644 y(the)43 b(\014rst)e(blac)m(k)i(resp)s(onse)e(considered)g
(to)i(the)g(white)e(b6)i(op)s(ening)e(\(left\).)i(F)-8
b(ollo)m(wing)42 b(the)g(topmost)h(path)0 3757 y
(b6-c4-f2-d5-d4-c5-e5-e4-g3)q(-f3-)q(g2)q(-f4)c(in)32
b(the)i(recursion)d(tree)j(and)f(applying)e(Theorem)i(5)g(after)h(f2)g
(leads)e(to)0 3870 y(the)g(\014rst)e(solv)m(ed)i(state)h(\(cen)m(ter,)g
(with)d(white)h(win-w)m(eaklink\);)e(since)i(f4)h(is)f(a)h(leaf)f(of)h
(the)f(recursion)f(tree,)j(the)0 3983 y(white)e(win-w)m(eaklink)e(here)
i(w)m(as)h(disco)m(v)m(ered)g(statically)-8 b(.)31 b
Ff(Sol)-8 b(ver)30 b Fs(con)m(tin)m(ues)i(solving)e(the)h(c4-subtree,)i
(ev)m(en-)0 4096 y(tually)27 b(determining)f(that)j(c4)g(is)e(a)i(blac)
m(k)f(loss)g(\(righ)m(t,)g(with)f(white)g(win-w)m(eaklink\).)g(This)f
(win-w)m(eaklink)g(do)s(es)0 4209 y(not)h(con)m(tain)f(c4)h(or)g(b5,)f
(so,)h(of)f(the)h(13)g(p)s(ossible)d(b6-resp)s(onses)i(corresp)s
(onding)e(to)j(the)f(initial)e(blac)m(k)i(m)m(ustpla)m(y)0
4322 y(region)k(describ)s(ed)e(in)h(Figure)h(7,)h(11)g(mo)m(v)m(es)h
(remain)d(to)j(b)s(e)d(c)m(hec)m(k)m(ed.)1013 5006 y
@beginspecial -8 @llx -34 @lly 214 @urx 32 @ury 2220
@rwi @setspecial
%%BeginDocument: ppr.ps9
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: (atend)
%%Title: TeXdraw drawing: ppr.ps9
%%Pages: 1
%%Creator: 1995/12/19 TeXdraw V2R0
%%CreationDate: 2006/4/25
50 dict begin
/mv {stroke moveto} def
/lv {lineto} def
/st {currentpoint stroke moveto} def
/sl {st setlinewidth} def
/sd {st 0 setdash} def
/sg {st setgray} def
/bs {gsave} def /es {stroke grestore} def
/fl {gsave setgray fill grestore
 currentpoint newpath moveto} def
/fp {gsave setgray fill grestore st} def
/cv {curveto} def
/cr {gsave currentpoint newpath 3 -1 roll 0 360 arc
 stroke grestore} def
/fc {gsave setgray currentpoint newpath
 3 -1 roll 0 360 arc fill grestore} def
/ar {gsave currentpoint newpath 5 2 roll arc stroke grestore} def
/el {gsave /svm matrix currentmatrix def
 currentpoint translate scale newpath 0 0 1 0 360 arc
 svm setmatrix stroke grestore} def
/fe {gsave setgray currentpoint translate scale newpath
 0 0 1 0 360 arc fill grestore} def
/av {/hhwid exch 2 div def /hlen exch def
 /ah exch def /tipy exch def /tipx exch def
 currentpoint /taily exch def /tailx exch def
 /dx tipx tailx sub def /dy tipy taily sub def
 /alen dx dx mul dy dy mul add sqrt def
 /blen alen hlen sub def
 gsave tailx taily translate dy dx atan rotate
 (V) ah ne {blen 0 gt {blen 0 lineto} if} {alen 0 lineto} ifelse
 stroke blen hhwid neg moveto alen 0 lineto blen hhwid lineto
 (T) ah eq {closepath} if
 (W) ah eq {gsave 1 setgray fill grestore closepath} if
 (F) ah eq {fill} {stroke} ifelse
 grestore tipx tipy moveto} def
0.24 0.24 scale
1 setlinecap 1 setlinejoin
3 setlinewidth [] 0 setdash
0 0 moveto
0 sl
bs
-22 0 mv
-11 19 lv
11 19 lv
22 0 lv
11 -19 lv
-11 -19 lv
-22 0 lv
0.8 fp
10 19 mv
21 38 lv
43 38 lv
54 19 lv
43 0 lv
21 0 lv
10 19 lv
0.8 fp
42 38 mv
53 57 lv
75 57 lv
86 38 lv
75 19 lv
53 19 lv
42 38 lv
0.8 fp
74 57 mv
85 76 lv
107 76 lv
118 57 lv
107 38 lv
85 38 lv
74 57 lv
0.8 fp
106 76 mv
117 95 lv
139 95 lv
150 76 lv
139 57 lv
117 57 lv
106 76 lv
0.8 fp
138 95 mv
149 114 lv
171 114 lv
182 95 lv
171 76 lv
149 76 lv
138 95 lv
0.8 fp
170 114 mv
181 133 lv
203 133 lv
214 114 lv
203 95 lv
181 95 lv
170 114 lv
0.8 fp
10 -19 mv
21 0 lv
43 0 lv
54 -19 lv
43 -38 lv
21 -38 lv
10 -19 lv
0.8 fp
42 0 mv
53 19 lv
75 19 lv
86 0 lv
75 -19 lv
53 -19 lv
42 0 lv
0.8 fp
74 19 mv
85 38 lv
107 38 lv
118 19 lv
107 0 lv
85 0 lv
74 19 lv
0.8 fp
106 38 mv
117 57 lv
139 57 lv
150 38 lv
139 19 lv
117 19 lv
106 38 lv
0.8 fp
138 57 mv
149 76 lv
171 76 lv
182 57 lv
171 38 lv
149 38 lv
138 57 lv
0.8 fp
170 76 mv
181 95 lv
203 95 lv
214 76 lv
203 57 lv
181 57 lv
170 76 lv
0.8 fp
202 95 mv
213 114 lv
235 114 lv
246 95 lv
235 76 lv
213 76 lv
202 95 lv
0.8 fp
42 -38 mv
53 -19 lv
75 -19 lv
86 -38 lv
75 -57 lv
53 -57 lv
42 -38 lv
0.8 fp
74 -19 mv
85 0 lv
107 0 lv
118 -19 lv
107 -38 lv
85 -38 lv
74 -19 lv
0.8 fp
106 0 mv
117 19 lv
139 19 lv
150 0 lv
139 -19 lv
117 -19 lv
106 0 lv
0.8 fp
138 19 mv
149 38 lv
171 38 lv
182 19 lv
171 0 lv
149 0 lv
138 19 lv
0.8 fp
170 38 mv
181 57 lv
203 57 lv
214 38 lv
203 19 lv
181 19 lv
170 38 lv
0.8 fp
202 57 mv
213 76 lv
235 76 lv
246 57 lv
235 38 lv
213 38 lv
202 57 lv
0.8 fp
234 76 mv
245 95 lv
267 95 lv
278 76 lv
267 57 lv
245 57 lv
234 76 lv
0.8 fp
74 -57 mv
85 -38 lv
107 -38 lv
118 -57 lv
107 -76 lv
85 -76 lv
74 -57 lv
0.8 fp
106 -38 mv
117 -19 lv
139 -19 lv
150 -38 lv
139 -57 lv
117 -57 lv
106 -38 lv
0.8 fp
138 -19 mv
149 0 lv
171 0 lv
182 -19 lv
171 -38 lv
149 -38 lv
138 -19 lv
0.8 fp
170 0 mv
181 19 lv
203 19 lv
214 0 lv
203 -19 lv
181 -19 lv
170 0 lv
0.8 fp
202 19 mv
213 38 lv
235 38 lv
246 19 lv
235 0 lv
213 0 lv
202 19 lv
0.8 fp
234 38 mv
245 57 lv
267 57 lv
278 38 lv
267 19 lv
245 19 lv
234 38 lv
0.8 fp
266 57 mv
277 76 lv
299 76 lv
310 57 lv
299 38 lv
277 38 lv
266 57 lv
0.8 fp
106 -76 mv
117 -57 lv
139 -57 lv
150 -76 lv
139 -95 lv
117 -95 lv
106 -76 lv
0.8 fp
138 -57 mv
149 -38 lv
171 -38 lv
182 -57 lv
171 -76 lv
149 -76 lv
138 -57 lv
0.8 fp
170 -38 mv
181 -19 lv
203 -19 lv
214 -38 lv
203 -57 lv
181 -57 lv
170 -38 lv
0.8 fp
202 -19 mv
213 0 lv
235 0 lv
246 -19 lv
235 -38 lv
213 -38 lv
202 -19 lv
0.8 fp
234 0 mv
245 19 lv
267 19 lv
278 0 lv
267 -19 lv
245 -19 lv
234 0 lv
0.8 fp
266 19 mv
277 38 lv
299 38 lv
310 19 lv
299 0 lv
277 0 lv
266 19 lv
0.8 fp
298 38 mv
309 57 lv
331 57 lv
342 38 lv
331 19 lv
309 19 lv
298 38 lv
0.8 fp
138 -95 mv
149 -76 lv
171 -76 lv
182 -95 lv
171 -114 lv
149 -114 lv
138 -95 lv
0.8 fp
170 -76 mv
181 -57 lv
203 -57 lv
214 -76 lv
203 -95 lv
181 -95 lv
170 -76 lv
0.8 fp
202 -57 mv
213 -38 lv
235 -38 lv
246 -57 lv
235 -76 lv
213 -76 lv
202 -57 lv
0.8 fp
234 -38 mv
245 -19 lv
267 -19 lv
278 -38 lv
267 -57 lv
245 -57 lv
234 -38 lv
0.8 fp
266 -19 mv
277 0 lv
299 0 lv
310 -19 lv
299 -38 lv
277 -38 lv
266 -19 lv
0.8 fp
298 0 mv
309 19 lv
331 19 lv
342 0 lv
331 -19 lv
309 -19 lv
298 0 lv
0.8 fp
330 19 mv
341 38 lv
363 38 lv
374 19 lv
363 0 lv
341 0 lv
330 19 lv
0.8 fp
170 -114 mv
181 -95 lv
203 -95 lv
214 -114 lv
203 -133 lv
181 -133 lv
170 -114 lv
0.8 fp
202 -95 mv
213 -76 lv
235 -76 lv
246 -95 lv
235 -114 lv
213 -114 lv
202 -95 lv
0.8 fp
234 -76 mv
245 -57 lv
267 -57 lv
278 -76 lv
267 -95 lv
245 -95 lv
234 -76 lv
0.8 fp
266 -57 mv
277 -38 lv
299 -38 lv
310 -57 lv
299 -76 lv
277 -76 lv
266 -57 lv
0.8 fp
298 -38 mv
309 -19 lv
331 -19 lv
342 -38 lv
331 -57 lv
309 -57 lv
298 -38 lv
0.8 fp
330 -19 mv
341 0 lv
363 0 lv
374 -19 lv
363 -38 lv
341 -38 lv
330 -19 lv
0.8 fp
362 0 mv
373 19 lv
395 19 lv
406 0 lv
395 -19 lv
373 -19 lv
362 0 lv
0.8 fp
0 113 mv
14 0 fc
0 -113 mv
14 1 fc
14 cr
388 -113 mv
14 0 fc
388 113 mv
14 1 fc
14 cr
194 76 mv
14 1 fc
14 cr
226 95 mv
14 1 fc
14 cr
194 113 mv
14 1 fc
14 cr
162 -95 mv
14 0 fc
0 0 mv
5 0 fc
32 19 mv
5 0 fc
64 38 mv
5 0 fc
98 57 mv
5 0 fc
130 76 mv
5 0 fc
162 95 mv
5 0 fc
32 -19 mv
5 0 fc
64 0 mv
5 0 fc
98 19 mv
5 0 fc
130 38 mv
5 0 fc
162 57 mv
5 0 fc
64 -38 mv
5 0 fc
98 -19 mv
5 0 fc
130 0 mv
5 1 fc
5 cr
162 19 mv
5 0 fc
194 38 mv
5 0 fc
226 57 mv
5 0 fc
260 76 mv
5 0 fc
98 -57 mv
5 0 fc
130 -38 mv
5 0 fc
162 -19 mv
5 0 fc
194 0 mv
5 0 fc
226 19 mv
5 0 fc
260 38 mv
5 0 fc
292 57 mv
5 0 fc
130 -76 mv
5 0 fc
162 -57 mv
5 0 fc
194 -38 mv
5 0 fc
226 -19 mv
5 0 fc
260 0 mv
5 0 fc
292 19 mv
5 0 fc
324 38 mv
5 0 fc
260 -38 mv
5 0 fc
292 -19 mv
5 0 fc
324 0 mv
5 0 fc
324 -38 mv
5 0 fc
356 -19 mv
5 0 fc
388 0 mv
5 0 fc
es
bs
464 0 mv
475 19 lv
497 19 lv
508 0 lv
497 -19 lv
475 -19 lv
464 0 lv
0.8 fp
496 19 mv
507 38 lv
529 38 lv
540 19 lv
529 0 lv
507 0 lv
496 19 lv
0.8 fp
528 38 mv
539 57 lv
561 57 lv
572 38 lv
561 19 lv
539 19 lv
528 38 lv
0.8 fp
560 57 mv
571 76 lv
593 76 lv
604 57 lv
593 38 lv
571 38 lv
560 57 lv
0.8 fp
592 76 mv
603 95 lv
625 95 lv
636 76 lv
625 57 lv
603 57 lv
592 76 lv
0.8 fp
624 95 mv
635 114 lv
657 114 lv
668 95 lv
657 76 lv
635 76 lv
624 95 lv
0.8 fp
656 114 mv
667 133 lv
689 133 lv
700 114 lv
689 95 lv
667 95 lv
656 114 lv
0.8 fp
496 -19 mv
507 0 lv
529 0 lv
540 -19 lv
529 -38 lv
507 -38 lv
496 -19 lv
0.8 fp
528 0 mv
539 19 lv
561 19 lv
572 0 lv
561 -19 lv
539 -19 lv
528 0 lv
0.8 fp
560 19 mv
571 38 lv
593 38 lv
604 19 lv
593 0 lv
571 0 lv
560 19 lv
0.8 fp
592 38 mv
603 57 lv
625 57 lv
636 38 lv
625 19 lv
603 19 lv
592 38 lv
0.8 fp
624 57 mv
635 76 lv
657 76 lv
668 57 lv
657 38 lv
635 38 lv
624 57 lv
0.8 fp
656 76 mv
667 95 lv
689 95 lv
700 76 lv
689 57 lv
667 57 lv
656 76 lv
0.8 fp
688 95 mv
699 114 lv
721 114 lv
732 95 lv
721 76 lv
699 76 lv
688 95 lv
0.8 fp
528 -38 mv
539 -19 lv
561 -19 lv
572 -38 lv
561 -57 lv
539 -57 lv
528 -38 lv
0.8 fp
560 -19 mv
571 0 lv
593 0 lv
604 -19 lv
593 -38 lv
571 -38 lv
560 -19 lv
0.8 fp
592 0 mv
603 19 lv
625 19 lv
636 0 lv
625 -19 lv
603 -19 lv
592 0 lv
0.8 fp
624 19 mv
635 38 lv
657 38 lv
668 19 lv
657 0 lv
635 0 lv
624 19 lv
0.8 fp
656 38 mv
667 57 lv
689 57 lv
700 38 lv
689 19 lv
667 19 lv
656 38 lv
0.8 fp
688 57 mv
699 76 lv
721 76 lv
732 57 lv
721 38 lv
699 38 lv
688 57 lv
0.8 fp
720 76 mv
731 95 lv
753 95 lv
764 76 lv
753 57 lv
731 57 lv
720 76 lv
0.8 fp
560 -57 mv
571 -38 lv
593 -38 lv
604 -57 lv
593 -76 lv
571 -76 lv
560 -57 lv
0.8 fp
592 -38 mv
603 -19 lv
625 -19 lv
636 -38 lv
625 -57 lv
603 -57 lv
592 -38 lv
0.8 fp
624 -19 mv
635 0 lv
657 0 lv
668 -19 lv
657 -38 lv
635 -38 lv
624 -19 lv
0.8 fp
656 0 mv
667 19 lv
689 19 lv
700 0 lv
689 -19 lv
667 -19 lv
656 0 lv
0.8 fp
688 19 mv
699 38 lv
721 38 lv
732 19 lv
721 0 lv
699 0 lv
688 19 lv
0.8 fp
720 38 mv
731 57 lv
753 57 lv
764 38 lv
753 19 lv
731 19 lv
720 38 lv
0.8 fp
752 57 mv
763 76 lv
785 76 lv
796 57 lv
785 38 lv
763 38 lv
752 57 lv
0.8 fp
592 -76 mv
603 -57 lv
625 -57 lv
636 -76 lv
625 -95 lv
603 -95 lv
592 -76 lv
0.8 fp
624 -57 mv
635 -38 lv
657 -38 lv
668 -57 lv
657 -76 lv
635 -76 lv
624 -57 lv
0.8 fp
656 -38 mv
667 -19 lv
689 -19 lv
700 -38 lv
689 -57 lv
667 -57 lv
656 -38 lv
0.8 fp
688 -19 mv
699 0 lv
721 0 lv
732 -19 lv
721 -38 lv
699 -38 lv
688 -19 lv
0.8 fp
720 0 mv
731 19 lv
753 19 lv
764 0 lv
753 -19 lv
731 -19 lv
720 0 lv
0.8 fp
752 19 mv
763 38 lv
785 38 lv
796 19 lv
785 0 lv
763 0 lv
752 19 lv
0.8 fp
784 38 mv
795 57 lv
817 57 lv
828 38 lv
817 19 lv
795 19 lv
784 38 lv
0.8 fp
624 -95 mv
635 -76 lv
657 -76 lv
668 -95 lv
657 -114 lv
635 -114 lv
624 -95 lv
0.8 fp
656 -76 mv
667 -57 lv
689 -57 lv
700 -76 lv
689 -95 lv
667 -95 lv
656 -76 lv
0.8 fp
688 -57 mv
699 -38 lv
721 -38 lv
732 -57 lv
721 -76 lv
699 -76 lv
688 -57 lv
0.8 fp
720 -38 mv
731 -19 lv
753 -19 lv
764 -38 lv
753 -57 lv
731 -57 lv
720 -38 lv
0.8 fp
752 -19 mv
763 0 lv
785 0 lv
796 -19 lv
785 -38 lv
763 -38 lv
752 -19 lv
0.8 fp
784 0 mv
795 19 lv
817 19 lv
828 0 lv
817 -19 lv
795 -19 lv
784 0 lv
0.8 fp
816 19 mv
827 38 lv
849 38 lv
860 19 lv
849 0 lv
827 0 lv
816 19 lv
0.8 fp
656 -114 mv
667 -95 lv
689 -95 lv
700 -114 lv
689 -133 lv
667 -133 lv
656 -114 lv
0.8 fp
688 -95 mv
699 -76 lv
721 -76 lv
732 -95 lv
721 -114 lv
699 -114 lv
688 -95 lv
0.8 fp
720 -76 mv
731 -57 lv
753 -57 lv
764 -76 lv
753 -95 lv
731 -95 lv
720 -76 lv
0.8 fp
752 -57 mv
763 -38 lv
785 -38 lv
796 -57 lv
785 -76 lv
763 -76 lv
752 -57 lv
0.8 fp
784 -38 mv
795 -19 lv
817 -19 lv
828 -38 lv
817 -57 lv
795 -57 lv
784 -38 lv
0.8 fp
816 -19 mv
827 0 lv
849 0 lv
860 -19 lv
849 -38 lv
827 -38 lv
816 -19 lv
0.8 fp
848 0 mv
859 19 lv
881 19 lv
892 0 lv
881 -19 lv
859 -19 lv
848 0 lv
0.8 fp
680 76 mv
14 1 fc
14 cr
486 0 mv
5 0 fc
518 19 mv
5 0 fc
550 38 mv
5 0 fc
584 57 mv
5 0 fc
616 76 mv
5 0 fc
648 95 mv
5 0 fc
680 113 mv
5 0 fc
518 -19 mv
5 0 fc
550 0 mv
5 0 fc
584 19 mv
5 0 fc
616 38 mv
5 0 fc
648 57 mv
5 0 fc
712 95 mv
5 0 fc
550 -38 mv
5 0 fc
584 -19 mv
5 0 fc
616 0 mv
5 0 fc
648 19 mv
5 0 fc
680 38 mv
5 0 fc
712 57 mv
5 0 fc
746 76 mv
5 0 fc
584 -57 mv
5 0 fc
616 -38 mv
5 0 fc
648 -19 mv
5 0 fc
680 0 mv
5 0 fc
712 19 mv
5 0 fc
746 38 mv
5 0 fc
778 57 mv
5 0 fc
616 -76 mv
5 0 fc
648 -57 mv
5 0 fc
680 -38 mv
5 0 fc
712 -19 mv
5 0 fc
746 0 mv
5 0 fc
778 19 mv
5 0 fc
810 38 mv
5 0 fc
648 -95 mv
5 0 fc
680 -76 mv
5 0 fc
712 -57 mv
5 0 fc
746 -38 mv
5 0 fc
778 -19 mv
5 0 fc
810 0 mv
5 0 fc
842 19 mv
5 0 fc
680 -113 mv
5 0 fc
712 -95 mv
5 0 fc
746 -76 mv
5 0 fc
778 -57 mv
5 0 fc
810 -38 mv
5 0 fc
842 -19 mv
5 0 fc
874 0 mv
5 0 fc
es
stroke end showpage
%%Trailer:
%%BoundingBox: -8 -34 214 32
%%EOF

%%EndDocument
 @endspecial 989 4780 a Fw(A)998 4704 y(1)1054 4818 y(B)1062
4666 y(2)1118 4856 y(C)1126 4628 y(3)1180 4894 y(D)1190
4590 y(4)1251 4932 y(E)1258 4552 y(5)1316 4968 y(F)1322
4516 y(6)1376 5006 y(G)1386 4478 y(7)0 5185 y Fs(Fig.)h(9.)g
Ff(Sol)-8 b(ver)27 b Fs(solv)m(es)i(b6:)h(conclusion.)e(The)h(mo)m(v)m
(e)i(to)f(f1)f(is)g(the)g(last)g(blac)m(k)h(reply)e(considered)g(in)g
(resp)s(onse)0 5298 y(to)i(the)f(white)f(b6)g(op)s(ening)g(\(left,)h
(with)e(white)h(win-w)m(eaklink\),)g(since)g(after)h(the)g(disco)m(v)m
(ery)g(of)g(this)f(last)h(white)0 5411 y(win-w)m(eaklink,)k(the)j(set)f
(of)h(suc)m(h)f(win-w)m(eaklinks)d(has)j(empt)m(y)h(in)m(tersection.)f
(The)g(union)f(of)h(these)h(11)g(white)0 5524 y(win-w)m(eaklinks)28
b(giv)m(es)j(the)f(\014nal)f(win-link)e(for)j(White)h(\(righ)m(t\).)
1885 5912 y Fr(12)p eop
%%Page: 13 13
13 12 bop 0 323 a Fp(5)112 b(SOL)-12 b(VER)37 b(7)p Fn(\002)p
Fp(7)h(1-Op)s(ening)g(Solutions)0 614 y Fr(As)28 b(men)m(tioned)f
(earlier,)f Fi(Sol)-9 b(ver)28 b Fr(is)f(strong)h(enough)g(to)f(solv)m
(e)h(arbitrary)f(7)p Fn(\002)p Fr(7)g(states.)i(Figures)e(10)g(and)0
734 y(11)i(summarize)g(the)h(results)h(obtained)e(b)m(y)i(running)f
Fi(Sol)-9 b(ver)30 b Fr(on)g(all)e(49)h(7)p Fn(\002)p
Fr(7)h(1-op)s(enings.)f(Figures)g(13)0 854 y(and)f(14)f(sho)m(w)i(the)f
Fi(Sol)-9 b(ver)27 b Fr(recursion)h(trees)h(from)d(t)m(w)m(o)j(of)e
(these)i(executions,)g(while)e(Figure)f(15)h(sho)m(ws)0
975 y(a)f(longest)h(line)e(of)h(pla)m(y)g(from)g(eac)m(h)h(of)g(the)g
(49)f(solutions.)f(Eac)m(h)j(execution)f(w)m(as)h(p)s(erformed)e(on)h
(a)f(single)0 1095 y(pro)s(cesser)37 b(mac)m(hine)790
1059 y Fw(2)845 1095 y Fr(;)f(in)e(eac)m(h)i(case,)h(the)e(run)h(time)e
(w)m(as)i(roughly)f(prop)s(ortional)d(to)j(the)h(n)m(um)m(b)s(er)f(of)0
1216 y(no)s(des)27 b(in)e(the)i Fi(Sol)-9 b(ver)26 b
Fr(recursion)g(tree,)h(taking)e(ab)s(out)h(one)g(min)m(ute)f(for)h(the)
g(\014v)m(e)i(1-op)s(enings)d(with)h(the)0 1336 y(smallest)e(no)s
(de-coun)m(ts,)i(and)g(ab)s(out)e(110)h(hours)h(for)f(the)g(1-op)s
(ening)f(with)h(the)h(largest)f(no)s(de-coun)m(t;)h(the)0
1456 y(total)k(run)j(time)d(for)i(all)e(49)h(1-op)s(enings)g(w)m(as)i
(ab)s(out)f(615)f(hours.)h(A)g(listing)e(of)i(all)d(49)j(trees)h
(\(including)0 1577 y(a)f(tree)h(view)m(er\))h(is)e(a)m(v)-5
b(ailable)30 b(at)i Fe(http://www.cs.ualberta.c)q(a/~h)q(aywa)q(rd/h)q
(ex7)q(tree)q(s)p Fr(.)538 2505 y @beginspecial -8 @llx
-50 @lly 328 @urx 47 @ury 3360 @rwi @setspecial
%%BeginDocument: ppr.p10
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: (atend)
%%Title: TeXdraw drawing: ppr.p10
%%Pages: 1
%%Creator: 1995/12/19 TeXdraw V2R0
%%CreationDate: 2006/4/25
50 dict begin
/mv {stroke moveto} def
/lv {lineto} def
/st {currentpoint stroke moveto} def
/sl {st setlinewidth} def
/sd {st 0 setdash} def
/sg {st setgray} def
/bs {gsave} def /es {stroke grestore} def
/fl {gsave setgray fill grestore
 currentpoint newpath moveto} def
/fp {gsave setgray fill grestore st} def
/cv {curveto} def
/cr {gsave currentpoint newpath 3 -1 roll 0 360 arc
 stroke grestore} def
/fc {gsave setgray currentpoint newpath
 3 -1 roll 0 360 arc fill grestore} def
/ar {gsave currentpoint newpath 5 2 roll arc stroke grestore} def
/el {gsave /svm matrix currentmatrix def
 currentpoint translate scale newpath 0 0 1 0 360 arc
 svm setmatrix stroke grestore} def
/fe {gsave setgray currentpoint translate scale newpath
 0 0 1 0 360 arc fill grestore} def
/av {/hhwid exch 2 div def /hlen exch def
 /ah exch def /tipy exch def /tipx exch def
 currentpoint /taily exch def /tailx exch def
 /dx tipx tailx sub def /dy tipy taily sub def
 /alen dx dx mul dy dy mul add sqrt def
 /blen alen hlen sub def
 gsave tailx taily translate dy dx atan rotate
 (V) ah ne {blen 0 gt {blen 0 lineto} if} {alen 0 lineto} ifelse
 stroke blen hhwid neg moveto alen 0 lineto blen hhwid lineto
 (T) ah eq {closepath} if
 (W) ah eq {gsave 1 setgray fill grestore closepath} if
 (F) ah eq {fill} {stroke} ifelse
 grestore tipx tipy moveto} def
0.24 0.24 scale
1 setlinecap 1 setlinejoin
3 setlinewidth [] 0 setdash
0 0 moveto
0 sl
bs
-32 0 mv
-16 28 lv
16 28 lv
32 0 lv
16 -28 lv
-16 -28 lv
-32 0 lv
0.8 fp
16 28 mv
32 56 lv
64 56 lv
80 28 lv
64 0 lv
32 0 lv
16 28 lv
0.8 fp
64 56 mv
80 84 lv
112 84 lv
128 56 lv
112 28 lv
80 28 lv
64 56 lv
0.8 fp
112 84 mv
128 112 lv
160 112 lv
176 84 lv
160 56 lv
128 56 lv
112 84 lv
0.8 fp
160 112 mv
176 140 lv
208 140 lv
224 112 lv
208 84 lv
176 84 lv
160 112 lv
0.8 fp
208 140 mv
224 168 lv
256 168 lv
272 140 lv
256 112 lv
224 112 lv
208 140 lv
0.8 fp
256 168 mv
272 196 lv
304 196 lv
320 168 lv
304 140 lv
272 140 lv
256 168 lv
0.8 fp
16 -28 mv
32 0 lv
64 0 lv
80 -28 lv
64 -56 lv
32 -56 lv
16 -28 lv
0.8 fp
64 0 mv
80 28 lv
112 28 lv
128 0 lv
112 -28 lv
80 -28 lv
64 0 lv
0.8 fp
112 28 mv
128 56 lv
160 56 lv
176 28 lv
160 0 lv
128 0 lv
112 28 lv
0.8 fp
160 56 mv
176 84 lv
208 84 lv
224 56 lv
208 28 lv
176 28 lv
160 56 lv
0.8 fp
208 84 mv
224 112 lv
256 112 lv
272 84 lv
256 56 lv
224 56 lv
208 84 lv
0.8 fp
256 112 mv
272 140 lv
304 140 lv
320 112 lv
304 84 lv
272 84 lv
256 112 lv
0.8 fp
304 140 mv
320 168 lv
352 168 lv
368 140 lv
352 112 lv
320 112 lv
304 140 lv
0.8 fp
64 -56 mv
80 -28 lv
112 -28 lv
128 -56 lv
112 -84 lv
80 -84 lv
64 -56 lv
0.8 fp
112 -28 mv
128 0 lv
160 0 lv
176 -28 lv
160 -56 lv
128 -56 lv
112 -28 lv
0.8 fp
160 0 mv
176 28 lv
208 28 lv
224 0 lv
208 -28 lv
176 -28 lv
160 0 lv
0.8 fp
208 28 mv
224 56 lv
256 56 lv
272 28 lv
256 0 lv
224 0 lv
208 28 lv
0.8 fp
256 56 mv
272 84 lv
304 84 lv
320 56 lv
304 28 lv
272 28 lv
256 56 lv
0.8 fp
304 84 mv
320 112 lv
352 112 lv
368 84 lv
352 56 lv
320 56 lv
304 84 lv
0.8 fp
352 112 mv
368 140 lv
400 140 lv
416 112 lv
400 84 lv
368 84 lv
352 112 lv
0.8 fp
112 -84 mv
128 -56 lv
160 -56 lv
176 -84 lv
160 -112 lv
128 -112 lv
112 -84 lv
0.8 fp
160 -56 mv
176 -28 lv
208 -28 lv
224 -56 lv
208 -84 lv
176 -84 lv
160 -56 lv
0.8 fp
208 -28 mv
224 0 lv
256 0 lv
272 -28 lv
256 -56 lv
224 -56 lv
208 -28 lv
0.8 fp
256 0 mv
272 28 lv
304 28 lv
320 0 lv
304 -28 lv
272 -28 lv
256 0 lv
0.8 fp
304 28 mv
320 56 lv
352 56 lv
368 28 lv
352 0 lv
320 0 lv
304 28 lv
0.8 fp
352 56 mv
368 84 lv
400 84 lv
416 56 lv
400 28 lv
368 28 lv
352 56 lv
0.8 fp
400 84 mv
416 112 lv
448 112 lv
464 84 lv
448 56 lv
416 56 lv
400 84 lv
0.8 fp
160 -112 mv
176 -84 lv
208 -84 lv
224 -112 lv
208 -140 lv
176 -140 lv
160 -112 lv
0.8 fp
208 -84 mv
224 -56 lv
256 -56 lv
272 -84 lv
256 -112 lv
224 -112 lv
208 -84 lv
0.8 fp
256 -56 mv
272 -28 lv
304 -28 lv
320 -56 lv
304 -84 lv
272 -84 lv
256 -56 lv
0.8 fp
304 -28 mv
320 0 lv
352 0 lv
368 -28 lv
352 -56 lv
320 -56 lv
304 -28 lv
0.8 fp
352 0 mv
368 28 lv
400 28 lv
416 0 lv
400 -28 lv
368 -28 lv
352 0 lv
0.8 fp
400 28 mv
416 56 lv
448 56 lv
464 28 lv
448 0 lv
416 0 lv
400 28 lv
0.8 fp
448 56 mv
464 84 lv
496 84 lv
512 56 lv
496 28 lv
464 28 lv
448 56 lv
0.8 fp
208 -140 mv
224 -112 lv
256 -112 lv
272 -140 lv
256 -168 lv
224 -168 lv
208 -140 lv
0.8 fp
256 -112 mv
272 -84 lv
304 -84 lv
320 -112 lv
304 -140 lv
272 -140 lv
256 -112 lv
0.8 fp
304 -84 mv
320 -56 lv
352 -56 lv
368 -84 lv
352 -112 lv
320 -112 lv
304 -84 lv
0.8 fp
352 -56 mv
368 -28 lv
400 -28 lv
416 -56 lv
400 -84 lv
368 -84 lv
352 -56 lv
0.8 fp
400 -28 mv
416 0 lv
448 0 lv
464 -28 lv
448 -56 lv
416 -56 lv
400 -28 lv
0.8 fp
448 0 mv
464 28 lv
496 28 lv
512 0 lv
496 -28 lv
464 -28 lv
448 0 lv
0.8 fp
496 28 mv
512 56 lv
544 56 lv
560 28 lv
544 0 lv
512 0 lv
496 28 lv
0.8 fp
256 -168 mv
272 -140 lv
304 -140 lv
320 -168 lv
304 -196 lv
272 -196 lv
256 -168 lv
0.8 fp
304 -140 mv
320 -112 lv
352 -112 lv
368 -140 lv
352 -168 lv
320 -168 lv
304 -140 lv
0.8 fp
352 -112 mv
368 -84 lv
400 -84 lv
416 -112 lv
400 -140 lv
368 -140 lv
352 -112 lv
0.8 fp
400 -84 mv
416 -56 lv
448 -56 lv
464 -84 lv
448 -112 lv
416 -112 lv
400 -84 lv
0.8 fp
448 -56 mv
464 -28 lv
496 -28 lv
512 -56 lv
496 -84 lv
464 -84 lv
448 -56 lv
0.8 fp
496 -28 mv
512 0 lv
544 0 lv
560 -28 lv
544 -56 lv
512 -56 lv
496 -28 lv
0.8 fp
544 0 mv
560 28 lv
592 28 lv
608 0 lv
592 -28 lv
560 -28 lv
544 0 lv
0.8 fp
0 168 mv
20 0 fc
0 -168 mv
20 1 fc
20 cr
576 -168 mv
20 0 fc
576 168 mv
20 1 fc
20 cr
0 0 mv
20 0 fc
48 -28 mv
20 0 fc
96 -56 mv
20 0 fc
144 -84 mv
20 0 fc
192 -112 mv
20 0 fc
240 -140 mv
20 0 fc
288 -168 mv
20 1 fc
20 cr
48 28 mv
20 0 fc
96 0 mv
20 0 fc
144 -28 mv
20 1 fc
20 cr
192 -56 mv
20 0 fc
240 -84 mv
20 1 fc
20 cr
288 -112 mv
20 1 fc
20 cr
336 -140 mv
20 1 fc
20 cr
96 56 mv
20 0 fc
144 28 mv
20 1 fc
20 cr
192 0 mv
20 1 fc
20 cr
240 -28 mv
20 1 fc
20 cr
288 -56 mv
20 1 fc
20 cr
336 -84 mv
20 1 fc
20 cr
384 -112 mv
20 0 fc
144 84 mv
20 1 fc
20 cr
192 56 mv
20 1 fc
20 cr
240 28 mv
20 1 fc
20 cr
288 0 mv
20 1 fc
20 cr
336 -28 mv
20 1 fc
20 cr
384 -56 mv
20 1 fc
20 cr
432 -84 mv
20 1 fc
20 cr
192 112 mv
20 0 fc
240 84 mv
20 1 fc
20 cr
288 56 mv
20 1 fc
20 cr
336 28 mv
20 1 fc
20 cr
384 0 mv
20 1 fc
20 cr
432 -28 mv
20 1 fc
20 cr
480 -56 mv
20 0 fc
240 140 mv
20 1 fc
20 cr
288 112 mv
20 1 fc
20 cr
336 84 mv
20 1 fc
20 cr
384 56 mv
20 0 fc
432 28 mv
20 1 fc
20 cr
480 0 mv
20 0 fc
528 -28 mv
20 0 fc
288 168 mv
20 1 fc
20 cr
336 140 mv
20 0 fc
384 112 mv
20 0 fc
432 84 mv
20 0 fc
480 56 mv
20 0 fc
528 28 mv
20 0 fc
576 0 mv
20 0 fc
es
bs
728 0 mv
744 28 lv
776 28 lv
792 0 lv
776 -28 lv
744 -28 lv
728 0 lv
776 28 mv
792 56 lv
824 56 lv
840 28 lv
824 0 lv
792 0 lv
776 28 lv
824 56 mv
840 84 lv
872 84 lv
888 56 lv
872 28 lv
840 28 lv
824 56 lv
872 84 mv
888 112 lv
920 112 lv
936 84 lv
920 56 lv
888 56 lv
872 84 lv
920 112 mv
936 140 lv
968 140 lv
984 112 lv
968 84 lv
936 84 lv
920 112 lv
968 140 mv
984 168 lv
1016 168 lv
1032 140 lv
1016 112 lv
984 112 lv
968 140 lv
1016 168 mv
1032 196 lv
1064 196 lv
1080 168 lv
1064 140 lv
1032 140 lv
1016 168 lv
776 -28 mv
792 0 lv
824 0 lv
840 -28 lv
824 -56 lv
792 -56 lv
776 -28 lv
824 0 mv
840 28 lv
872 28 lv
888 0 lv
872 -28 lv
840 -28 lv
824 0 lv
872 28 mv
888 56 lv
920 56 lv
936 28 lv
920 0 lv
888 0 lv
872 28 lv
920 56 mv
936 84 lv
968 84 lv
984 56 lv
968 28 lv
936 28 lv
920 56 lv
968 84 mv
984 112 lv
1016 112 lv
1032 84 lv
1016 56 lv
984 56 lv
968 84 lv
1016 112 mv
1032 140 lv
1064 140 lv
1080 112 lv
1064 84 lv
1032 84 lv
1016 112 lv
1064 140 mv
1080 168 lv
1112 168 lv
1128 140 lv
1112 112 lv
1080 112 lv
1064 140 lv
824 -56 mv
840 -28 lv
872 -28 lv
888 -56 lv
872 -84 lv
840 -84 lv
824 -56 lv
872 -28 mv
888 0 lv
920 0 lv
936 -28 lv
920 -56 lv
888 -56 lv
872 -28 lv
920 0 mv
936 28 lv
968 28 lv
984 0 lv
968 -28 lv
936 -28 lv
920 0 lv
968 28 mv
984 56 lv
1016 56 lv
1032 28 lv
1016 0 lv
984 0 lv
968 28 lv
1016 56 mv
1032 84 lv
1064 84 lv
1080 56 lv
1064 28 lv
1032 28 lv
1016 56 lv
1064 84 mv
1080 112 lv
1112 112 lv
1128 84 lv
1112 56 lv
1080 56 lv
1064 84 lv
1112 112 mv
1128 140 lv
1160 140 lv
1176 112 lv
1160 84 lv
1128 84 lv
1112 112 lv
872 -84 mv
888 -56 lv
920 -56 lv
936 -84 lv
920 -112 lv
888 -112 lv
872 -84 lv
920 -56 mv
936 -28 lv
968 -28 lv
984 -56 lv
968 -84 lv
936 -84 lv
920 -56 lv
968 -28 mv
984 0 lv
1016 0 lv
1032 -28 lv
1016 -56 lv
984 -56 lv
968 -28 lv
1016 0 mv
1032 28 lv
1064 28 lv
1080 0 lv
1064 -28 lv
1032 -28 lv
1016 0 lv
1064 28 mv
1080 56 lv
1112 56 lv
1128 28 lv
1112 0 lv
1080 0 lv
1064 28 lv
1112 56 mv
1128 84 lv
1160 84 lv
1176 56 lv
1160 28 lv
1128 28 lv
1112 56 lv
1160 84 mv
1176 112 lv
1208 112 lv
1224 84 lv
1208 56 lv
1176 56 lv
1160 84 lv
920 -112 mv
936 -84 lv
968 -84 lv
984 -112 lv
968 -140 lv
936 -140 lv
920 -112 lv
968 -84 mv
984 -56 lv
1016 -56 lv
1032 -84 lv
1016 -112 lv
984 -112 lv
968 -84 lv
1016 -56 mv
1032 -28 lv
1064 -28 lv
1080 -56 lv
1064 -84 lv
1032 -84 lv
1016 -56 lv
1064 -28 mv
1080 0 lv
1112 0 lv
1128 -28 lv
1112 -56 lv
1080 -56 lv
1064 -28 lv
1112 0 mv
1128 28 lv
1160 28 lv
1176 0 lv
1160 -28 lv
1128 -28 lv
1112 0 lv
1160 28 mv
1176 56 lv
1208 56 lv
1224 28 lv
1208 0 lv
1176 0 lv
1160 28 lv
1208 56 mv
1224 84 lv
1256 84 lv
1272 56 lv
1256 28 lv
1224 28 lv
1208 56 lv
968 -140 mv
984 -112 lv
1016 -112 lv
1032 -140 lv
1016 -168 lv
984 -168 lv
968 -140 lv
1016 -112 mv
1032 -84 lv
1064 -84 lv
1080 -112 lv
1064 -140 lv
1032 -140 lv
1016 -112 lv
1064 -84 mv
1080 -56 lv
1112 -56 lv
1128 -84 lv
1112 -112 lv
1080 -112 lv
1064 -84 lv
1112 -56 mv
1128 -28 lv
1160 -28 lv
1176 -56 lv
1160 -84 lv
1128 -84 lv
1112 -56 lv
1160 -28 mv
1176 0 lv
1208 0 lv
1224 -28 lv
1208 -56 lv
1176 -56 lv
1160 -28 lv
1208 0 mv
1224 28 lv
1256 28 lv
1272 0 lv
1256 -28 lv
1224 -28 lv
1208 0 lv
1256 28 mv
1272 56 lv
1304 56 lv
1320 28 lv
1304 0 lv
1272 0 lv
1256 28 lv
1016 -168 mv
1032 -140 lv
1064 -140 lv
1080 -168 lv
1064 -196 lv
1032 -196 lv
1016 -168 lv
1064 -140 mv
1080 -112 lv
1112 -112 lv
1128 -140 lv
1112 -168 lv
1080 -168 lv
1064 -140 lv
1112 -112 mv
1128 -84 lv
1160 -84 lv
1176 -112 lv
1160 -140 lv
1128 -140 lv
1112 -112 lv
1160 -84 mv
1176 -56 lv
1208 -56 lv
1224 -84 lv
1208 -112 lv
1176 -112 lv
1160 -84 lv
1208 -56 mv
1224 -28 lv
1256 -28 lv
1272 -56 lv
1256 -84 lv
1224 -84 lv
1208 -56 lv
1256 -28 mv
1272 0 lv
1304 0 lv
1320 -28 lv
1304 -56 lv
1272 -56 lv
1256 -28 lv
1304 0 mv
1320 28 lv
1352 28 lv
1368 0 lv
1352 -28 lv
1320 -28 lv
1304 0 lv
es
stroke end showpage
%%Trailer:
%%BoundingBox: -8 -50 328 47
%%EOF

%%EndDocument
 @endspecial 2004 2169 a Fw(A)2013 2057 y(1)2101 2225
y(B)2109 2001 y(2)2197 2281 y(C)2205 1945 y(3)2291 2337
y(D)2301 1889 y(4)2390 2393 y(E)2397 1833 y(5)2487 2449
y(F)2493 1777 y(6)2579 2505 y(G)2589 1721 y(7)2083 2101
y(C4)2179 2157 y(C4)2275 2213 y(C4)2372 2269 y(B6)2468
2325 y(B6)2564 2381 y(B6)2181 2045 y(E3)2277 2101 y(E3)2467
2213 y(C5)2274 1989 y(D4)2854 2325 y(F2)2468 1877 y(B6)3042
2213 y(D4)2853 1989 y(E3)3043 2101 y(C5)3139 2157 y(C5)2756
1821 y(B6)2852 1877 y(B6)2948 1933 y(B6)3042 1989 y(D3)3138
2045 y(D3)3234 2101 y(D3)0 2684 y Fs(Fig.)25 b(10.)i(All)d(7)p
Fu(\002)p Fs(7)h(1-op)s(ening)g(results,)f(as)h(found)f(b)m(y)j
Ff(Sol)-8 b(ver)p Fs(.)23 b(The)i(stone)h(on)f(eac)m(h)h(cell)f
(indicates)f(the)h(winner)0 2797 y(with)j(p)s(erfect)h(pla)m(y)g(if)g
(White's)g(\014rst)f(mo)m(v)m(e)j(is)e(to)h(that)g(cell.)e(The)h(mo)m
(v)m(e)i(indicated)d(on)h(eac)m(h)i(losing)d(cell)g(is)h(the)0
2910 y(winning)e(coun)m(termo)m(v)m(e)33 b(disco)m(v)m(ered.)705
4585 y @beginspecial -22 @llx -94 @lly 274 @urx 88 @ury
2960 @rwi @setspecial
%%BeginDocument: ppr.p11
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: (atend)
%%Title: TeXdraw drawing: ppr.p11
%%Pages: 1
%%Creator: 1995/12/19 TeXdraw V2R0
%%CreationDate: 2006/4/25
50 dict begin
/mv {stroke moveto} def
/lv {lineto} def
/st {currentpoint stroke moveto} def
/sl {st setlinewidth} def
/sd {st 0 setdash} def
/sg {st setgray} def
/bs {gsave} def /es {stroke grestore} def
/fl {gsave setgray fill grestore
 currentpoint newpath moveto} def
/fp {gsave setgray fill grestore st} def
/cv {curveto} def
/cr {gsave currentpoint newpath 3 -1 roll 0 360 arc
 stroke grestore} def
/fc {gsave setgray currentpoint newpath
 3 -1 roll 0 360 arc fill grestore} def
/ar {gsave currentpoint newpath 5 2 roll arc stroke grestore} def
/el {gsave /svm matrix currentmatrix def
 currentpoint translate scale newpath 0 0 1 0 360 arc
 svm setmatrix stroke grestore} def
/fe {gsave setgray currentpoint translate scale newpath
 0 0 1 0 360 arc fill grestore} def
/av {/hhwid exch 2 div def /hlen exch def
 /ah exch def /tipy exch def /tipx exch def
 currentpoint /taily exch def /tailx exch def
 /dx tipx tailx sub def /dy tipy taily sub def
 /alen dx dx mul dy dy mul add sqrt def
 /blen alen hlen sub def
 gsave tailx taily translate dy dx atan rotate
 (V) ah ne {blen 0 gt {blen 0 lineto} if} {alen 0 lineto} ifelse
 stroke blen hhwid neg moveto alen 0 lineto blen hhwid lineto
 (T) ah eq {closepath} if
 (W) ah eq {gsave 1 setgray fill grestore closepath} if
 (F) ah eq {fill} {stroke} ifelse
 grestore tipx tipy moveto} def
0.24 0.24 scale
1 setlinecap 1 setlinejoin
3 setlinewidth [] 0 setdash
0 0 moveto
0 sl
bs
-60 0 mv
-30 52 lv
30 52 lv
60 0 lv
30 -52 lv
-30 -52 lv
-60 0 lv
30 52 mv
60 104 lv
120 104 lv
150 52 lv
120 0 lv
60 0 lv
30 52 lv
120 104 mv
150 156 lv
210 156 lv
240 104 lv
210 52 lv
150 52 lv
120 104 lv
210 156 mv
240 208 lv
300 208 lv
330 156 lv
300 104 lv
240 104 lv
210 156 lv
300 208 mv
330 260 lv
390 260 lv
420 208 lv
390 156 lv
330 156 lv
300 208 lv
390 260 mv
420 312 lv
480 312 lv
510 260 lv
480 208 lv
420 208 lv
390 260 lv
480 312 mv
510 364 lv
570 364 lv
600 312 lv
570 260 lv
510 260 lv
480 312 lv
30 -52 mv
60 0 lv
120 0 lv
150 -52 lv
120 -104 lv
60 -104 lv
30 -52 lv
120 0 mv
150 52 lv
210 52 lv
240 0 lv
210 -52 lv
150 -52 lv
120 0 lv
210 52 mv
240 104 lv
300 104 lv
330 52 lv
300 0 lv
240 0 lv
210 52 lv
300 104 mv
330 156 lv
390 156 lv
420 104 lv
390 52 lv
330 52 lv
300 104 lv
390 156 mv
420 208 lv
480 208 lv
510 156 lv
480 104 lv
420 104 lv
390 156 lv
480 208 mv
510 260 lv
570 260 lv
600 208 lv
570 156 lv
510 156 lv
480 208 lv
570 260 mv
600 312 lv
660 312 lv
690 260 lv
660 208 lv
600 208 lv
570 260 lv
120 -104 mv
150 -52 lv
210 -52 lv
240 -104 lv
210 -156 lv
150 -156 lv
120 -104 lv
210 -52 mv
240 0 lv
300 0 lv
330 -52 lv
300 -104 lv
240 -104 lv
210 -52 lv
300 0 mv
330 52 lv
390 52 lv
420 0 lv
390 -52 lv
330 -52 lv
300 0 lv
390 52 mv
420 104 lv
480 104 lv
510 52 lv
480 0 lv
420 0 lv
390 52 lv
480 104 mv
510 156 lv
570 156 lv
600 104 lv
570 52 lv
510 52 lv
480 104 lv
570 156 mv
600 208 lv
660 208 lv
690 156 lv
660 104 lv
600 104 lv
570 156 lv
660 208 mv
690 260 lv
750 260 lv
780 208 lv
750 156 lv
690 156 lv
660 208 lv
210 -156 mv
240 -104 lv
300 -104 lv
330 -156 lv
300 -208 lv
240 -208 lv
210 -156 lv
300 -104 mv
330 -52 lv
390 -52 lv
420 -104 lv
390 -156 lv
330 -156 lv
300 -104 lv
390 -52 mv
420 0 lv
480 0 lv
510 -52 lv
480 -104 lv
420 -104 lv
390 -52 lv
480 0 mv
510 52 lv
570 52 lv
600 0 lv
570 -52 lv
510 -52 lv
480 0 lv
570 52 mv
600 104 lv
660 104 lv
690 52 lv
660 0 lv
600 0 lv
570 52 lv
660 104 mv
690 156 lv
750 156 lv
780 104 lv
750 52 lv
690 52 lv
660 104 lv
750 156 mv
780 208 lv
840 208 lv
870 156 lv
840 104 lv
780 104 lv
750 156 lv
300 -208 mv
330 -156 lv
390 -156 lv
420 -208 lv
390 -260 lv
330 -260 lv
300 -208 lv
390 -156 mv
420 -104 lv
480 -104 lv
510 -156 lv
480 -208 lv
420 -208 lv
390 -156 lv
480 -104 mv
510 -52 lv
570 -52 lv
600 -104 lv
570 -156 lv
510 -156 lv
480 -104 lv
570 -52 mv
600 0 lv
660 0 lv
690 -52 lv
660 -104 lv
600 -104 lv
570 -52 lv
660 0 mv
690 52 lv
750 52 lv
780 0 lv
750 -52 lv
690 -52 lv
660 0 lv
750 52 mv
780 104 lv
840 104 lv
870 52 lv
840 0 lv
780 0 lv
750 52 lv
840 104 mv
870 156 lv
930 156 lv
960 104 lv
930 52 lv
870 52 lv
840 104 lv
390 -260 mv
420 -208 lv
480 -208 lv
510 -260 lv
480 -312 lv
420 -312 lv
390 -260 lv
480 -208 mv
510 -156 lv
570 -156 lv
600 -208 lv
570 -260 lv
510 -260 lv
480 -208 lv
570 -156 mv
600 -104 lv
660 -104 lv
690 -156 lv
660 -208 lv
600 -208 lv
570 -156 lv
660 -104 mv
690 -52 lv
750 -52 lv
780 -104 lv
750 -156 lv
690 -156 lv
660 -104 lv
750 -52 mv
780 0 lv
840 0 lv
870 -52 lv
840 -104 lv
780 -104 lv
750 -52 lv
840 0 mv
870 52 lv
930 52 lv
960 0 lv
930 -52 lv
870 -52 lv
840 0 lv
930 52 mv
960 104 lv
1020 104 lv
1050 52 lv
1020 0 lv
960 0 lv
930 52 lv
480 -312 mv
510 -260 lv
570 -260 lv
600 -312 lv
570 -364 lv
510 -364 lv
480 -312 lv
570 -260 mv
600 -208 lv
660 -208 lv
690 -260 lv
660 -312 lv
600 -312 lv
570 -260 lv
660 -208 mv
690 -156 lv
750 -156 lv
780 -208 lv
750 -260 lv
690 -260 lv
660 -208 lv
750 -156 mv
780 -104 lv
840 -104 lv
870 -156 lv
840 -208 lv
780 -208 lv
750 -156 lv
840 -104 mv
870 -52 lv
930 -52 lv
960 -104 lv
930 -156 lv
870 -156 lv
840 -104 lv
930 -52 mv
960 0 lv
1020 0 lv
1050 -52 lv
1020 -104 lv
960 -104 lv
930 -52 lv
1020 0 mv
1050 52 lv
1110 52 lv
1140 0 lv
1110 -52 lv
1050 -52 lv
1020 0 lv
es
stroke end showpage
%%Trailer:
%%BoundingBox: -22 -94 274 88
%%EOF

%%EndDocument
 @endspecial 689 3955 a Fd(A)697 3747 y(1)870 4061 y(B)877
3641 y(2)1050 4165 y(C)1057 3537 y(3)1229 4271 y(D)1237
3431 y(4)1411 4375 y(E)1417 3327 y(5)1592 4481 y(F)1597
3221 y(6)1768 4585 y(G)1777 3117 y(7)811 3829 y(71405)991
3933 y(61252)1171 4039 y(47688)1384 4143 y(164)1564 4249
y(136)1760 4353 y(89)1874 4459 y(502521)974 3725 y(304217)1154
3829 y(191105)1351 3933 y(13912)1547 4039 y(2804)1711
4143 y(48876)1940 4249 y(90)2038 4353 y(1084920)1138
3619 y(1609665)1367 3725 y(2703)1531 3829 y(14623)1727
3933 y(1941)1924 4039 y(991)2071 4143 y(42387)2234 4249
y(213929)1318 3515 y(2114653)1514 3619 y(407737)1727
3725 y(7364)1907 3829 y(1225)2087 3933 y(5613)2234 4039
y(405194)2398 4143 y(2564080)1514 3409 y(235797)1711
3515 y(36165)1907 3619 y(1285)2087 3725 y(2459)2251 3829
y(15612)2447 3933 y(2248)2578 4039 y(1718714)1678 3305
y(1145199)1924 3409 y(197)2054 3515 y(118119)2267 3619
y(4502)2431 3725 y(12448)2594 3829 y(200341)2774 3933
y(389754)1874 3199 y(453194)2087 3305 y(1196)2267 3409
y(1162)2447 3515 y(1192)2611 3619 y(26759)2791 3725 y(46823)2971
3829 y(76212)520 4765 y Fs(Fig.)e(11.)g(Num)m(b)s(er)e(of)i(no)s(des)f
(in)f(the)h Ff(Sol)-8 b(ver)29 b Fs(7)p Fu(\002)p Fs(7)h(1-op)s(ening)g
(recursion)f(trees.)0 4973 y Fr(F)-8 b(or)24 b(an)m(y)h(size)g(Hex)h(b)
s(oard,)e(the)h(set)h(of)e(winning)g(op)s(en-mo)m(v)m(e)h(cell)e(lo)s
(cations)g(is)h(symmetric)g(with)h(resp)s(ect)0 5094
y(to)37 b(re\015ection)g(through)h(the)f(cen)m(ter)i(of)e(the)h(b)s
(oard.)f(Notice)f(that)i(the)f Fi(Sol)-9 b(ver)38 b Fr(no)s(de-coun)m
(ts)g(do)f(not)0 5214 y(share)g(this)f(symmetry)-8 b(,)36
b(as)g(neither)h(the)f(order)h(in)e(whic)m(h)i Fi(Sol)-9
b(ver)36 b Fr(considers)h(mo)m(v)m(es)g(nor)f Fi(Sol)-9
b(ver)p Fr('s)p 0 5369 299 4 v 0 5433 a Fw(2)91 5466
y Fs(The)36 b(program)h(w)m(as)g(compiled)e(with)g(gcc)j(3.1.1)h(and)d
(run)f(on)i(an)g(AMD)g(A)m(thlon)g(1800+)h(MHz)f(pro)s(cessor)0
5579 y(with)29 b(512)j(MB)f(memory)f(running)e(Slac)m(kw)m(are)j(Lin)m
(ux.)1885 5912 y Fr(13)p eop
%%Page: 14 14
14 13 bop 0 323 a Fr(implemen)m(tation)35 b(of)j(the)h(static)f
(computation)f(of)h(virtual)f(connections)i(is)f(designed)i(to)e
(re\015ect)h(this)0 443 y(symmetry)-8 b(.)0 614 y(Figure)28
b(12)g(demonstrates)i(the)f(relativ)m(e)f(strength)i(of)e(the)i(three)f
(k)m(ey)i(parts)e(of)f(our)h(algorithm,)d(namely)0 734
y(virtual)34 b(connection)h(computation,)f(side-triangle)f(mo)m(v)m(e)j
(domination,)c(and)k(side-triangle)d(\014ll-in,)f(b)m(y)0
854 y(sho)m(wing)c Fi(Sol)-9 b(ver)26 b Fr(no)s(de-coun)m(ts)h(when)g
(v)-5 b(arious)26 b(of)f(these)j(features)f(are)f(turned)h(o\013.)f(In)
g(particular,)f(no-)0 975 y(tice)g(that)g(adding)g(side-triangle)e
(\014ll-in)g(to)i(virtual)f(connection)h(computation)f(results)i(in)e
(a)i(substan)m(tial)0 1095 y(decrease)39 b(in)d(the)i(n)m(um)m(b)s(er)f
(of)g(no)s(des)h(considered,)g(while)e(further)i(adding)e
(side-triangle)f(domination)0 1216 y(has)e(little)d(e\013ect.)0
1386 y(As)36 b(exp)s(ected,)i Fi(Sol)-9 b(ver)35 b Fr(with)g
(domination)e(and)j(\014ll-in)c(usually)j(needs)i(to)e(explore)h(few)m
(er)h(game-tree)0 1506 y(no)s(des)29 b(to)f(solv)m(e)h(a)g(state)g
(than)f Fi(Sol)-9 b(ver-D)p Fr(,)28 b(whic)m(h)h(uses)h(\014ll-in)c
(but)j(not)f(domination;)e(ho)m(w)m(ev)m(er,)31 b(there)0
1626 y(are)c(a)f(few)i(exceptions.)g(In)f(particular,)e(for)i(eac)m(h)h
(of)e(the)h(6)p Fn(\002)p Fr(6)g(op)s(enings)g(d4,)g(e5,)g(f1,)f(and)h
(f4)g Fi(Sol)-9 b(ver-D)0 1747 y Fr(explored)29 b(sligh)m(tly)d(few)m
(er)k(no)s(des)f(than)f Fi(Sol)-9 b(ver)p Fr(.)28 b(One)h(reason)g(for)
f(this)g(anomalous)e(b)s(eha)m(viour)i(is)g(that)0 1867
y(\014ll-in)38 b(can)i(cause)i(the)f(carrier)e(of)h(the)h(win-link)e
(returned)i(b)m(y)h(our)e(algorithm)d(to)j(b)s(e)h(unnecessarily)0
1988 y(large.)0 2158 y(F)-8 b(or)27 b(example,)h(if)f(in)h(a)f(certain)
h(state)h(there)g(is)e(an)i(empt)m(y)f(side)g(triangle)f(for)g(whic)m
(h)i(b)s(oth)f(the)h(tip)e(and)h(a)0 2278 y(side)k(cell)f(are)h
(winning)f(mo)m(v)m(es,)i(then)f(the)h(carrier)e(of)h(the)g(win-link)e
(disco)m(v)m(ered)k(b)m(y)f(making)d(the)j(mo)m(v)m(e)0
2399 y(to)i(the)h(tip)f(will)e(con)m(tain)j(b)s(oth)f(side)h(cells)f
(and)g(so)h(b)s(e)g(a)f(prop)s(er)h(sup)s(erset)h(of)e(the)h(carrier)f
(disco)m(v)m(ered)0 2519 y(b)m(y)i(making)d(the)j(mo)m(v)m(e)f(to)g
(the)g(side)g(cell;)f(in)g(this)h(case,)g(if)f(domination)e(is)j(not)g
(in)f(e\013ect)i(the)f(smaller)0 2639 y(carrier)i(will)f(b)s(e)i(disco)
m(v)m(ered)h(if)e(mo)m(v)m(e)h(ordering)f(happ)s(ens)i(to)e(pro)s(cess)
i(the)f(side)g(cell)f(b)s(efore)g(the)i(tip,)0 2760 y(and)33
b(this)f(smaller)e(carrier)i(ma)m(y)h(result)f(in)g(few)m(er)i
(recursiv)m(e)g(calls)d(b)s(eing)h(made.)679 4472 y @beginspecial
-26 @llx -98 @lly 276 @urx 91 @ury 3020 @rwi @setspecial
%%BeginDocument: ppr.p12
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: (atend)
%%Title: TeXdraw drawing: ppr.p12
%%Pages: 1
%%Creator: 1995/12/19 TeXdraw V2R0
%%CreationDate: 2006/4/25
50 dict begin
/mv {stroke moveto} def
/lv {lineto} def
/st {currentpoint stroke moveto} def
/sl {st setlinewidth} def
/sd {st 0 setdash} def
/sg {st setgray} def
/bs {gsave} def /es {stroke grestore} def
/fl {gsave setgray fill grestore
 currentpoint newpath moveto} def
/fp {gsave setgray fill grestore st} def
/cv {curveto} def
/cr {gsave currentpoint newpath 3 -1 roll 0 360 arc
 stroke grestore} def
/fc {gsave setgray currentpoint newpath
 3 -1 roll 0 360 arc fill grestore} def
/ar {gsave currentpoint newpath 5 2 roll arc stroke grestore} def
/el {gsave /svm matrix currentmatrix def
 currentpoint translate scale newpath 0 0 1 0 360 arc
 svm setmatrix stroke grestore} def
/fe {gsave setgray currentpoint translate scale newpath
 0 0 1 0 360 arc fill grestore} def
/av {/hhwid exch 2 div def /hlen exch def
 /ah exch def /tipy exch def /tipx exch def
 currentpoint /taily exch def /tailx exch def
 /dx tipx tailx sub def /dy tipy taily sub def
 /alen dx dx mul dy dy mul add sqrt def
 /blen alen hlen sub def
 gsave tailx taily translate dy dx atan rotate
 (V) ah ne {blen 0 gt {blen 0 lineto} if} {alen 0 lineto} ifelse
 stroke blen hhwid neg moveto alen 0 lineto blen hhwid lineto
 (T) ah eq {closepath} if
 (W) ah eq {gsave 1 setgray fill grestore closepath} if
 (F) ah eq {fill} {stroke} ifelse
 grestore tipx tipy moveto} def
0.24 0.24 scale
1 setlinecap 1 setlinejoin
3 setlinewidth [] 0 setdash
0 0 moveto
0 sl
bs
-72 0 mv
-36 63 lv
36 63 lv
72 0 lv
36 -63 lv
-36 -63 lv
-72 0 lv
36 63 mv
72 126 lv
144 126 lv
180 63 lv
144 0 lv
72 0 lv
36 63 lv
144 126 mv
180 189 lv
252 189 lv
288 126 lv
252 63 lv
180 63 lv
144 126 lv
252 189 mv
288 252 lv
360 252 lv
396 189 lv
360 126 lv
288 126 lv
252 189 lv
360 252 mv
396 315 lv
468 315 lv
504 252 lv
468 189 lv
396 189 lv
360 252 lv
468 315 mv
504 378 lv
576 378 lv
612 315 lv
576 252 lv
504 252 lv
468 315 lv
36 -63 mv
72 0 lv
144 0 lv
180 -63 lv
144 -126 lv
72 -126 lv
36 -63 lv
144 0 mv
180 63 lv
252 63 lv
288 0 lv
252 -63 lv
180 -63 lv
144 0 lv
252 63 mv
288 126 lv
360 126 lv
396 63 lv
360 0 lv
288 0 lv
252 63 lv
360 126 mv
396 189 lv
468 189 lv
504 126 lv
468 63 lv
396 63 lv
360 126 lv
468 189 mv
504 252 lv
576 252 lv
612 189 lv
576 126 lv
504 126 lv
468 189 lv
576 252 mv
612 315 lv
684 315 lv
720 252 lv
684 189 lv
612 189 lv
576 252 lv
144 -126 mv
180 -63 lv
252 -63 lv
288 -126 lv
252 -189 lv
180 -189 lv
144 -126 lv
252 -63 mv
288 0 lv
360 0 lv
396 -63 lv
360 -126 lv
288 -126 lv
252 -63 lv
360 0 mv
396 63 lv
468 63 lv
504 0 lv
468 -63 lv
396 -63 lv
360 0 lv
468 63 mv
504 126 lv
576 126 lv
612 63 lv
576 0 lv
504 0 lv
468 63 lv
576 126 mv
612 189 lv
684 189 lv
720 126 lv
684 63 lv
612 63 lv
576 126 lv
684 189 mv
720 252 lv
792 252 lv
828 189 lv
792 126 lv
720 126 lv
684 189 lv
252 -189 mv
288 -126 lv
360 -126 lv
396 -189 lv
360 -252 lv
288 -252 lv
252 -189 lv
360 -126 mv
396 -63 lv
468 -63 lv
504 -126 lv
468 -189 lv
396 -189 lv
360 -126 lv
468 -63 mv
504 0 lv
576 0 lv
612 -63 lv
576 -126 lv
504 -126 lv
468 -63 lv
576 0 mv
612 63 lv
684 63 lv
720 0 lv
684 -63 lv
612 -63 lv
576 0 lv
684 63 mv
720 126 lv
792 126 lv
828 63 lv
792 0 lv
720 0 lv
684 63 lv
792 126 mv
828 189 lv
900 189 lv
936 126 lv
900 63 lv
828 63 lv
792 126 lv
360 -252 mv
396 -189 lv
468 -189 lv
504 -252 lv
468 -315 lv
396 -315 lv
360 -252 lv
468 -189 mv
504 -126 lv
576 -126 lv
612 -189 lv
576 -252 lv
504 -252 lv
468 -189 lv
576 -126 mv
612 -63 lv
684 -63 lv
720 -126 lv
684 -189 lv
612 -189 lv
576 -126 lv
684 -63 mv
720 0 lv
792 0 lv
828 -63 lv
792 -126 lv
720 -126 lv
684 -63 lv
792 0 mv
828 63 lv
900 63 lv
936 0 lv
900 -63 lv
828 -63 lv
792 0 lv
900 63 mv
936 126 lv
1008 126 lv
1044 63 lv
1008 0 lv
936 0 lv
900 63 lv
468 -315 mv
504 -252 lv
576 -252 lv
612 -315 lv
576 -378 lv
504 -378 lv
468 -315 lv
576 -252 mv
612 -189 lv
684 -189 lv
720 -252 lv
684 -315 lv
612 -315 lv
576 -252 lv
684 -189 mv
720 -126 lv
792 -126 lv
828 -189 lv
792 -252 lv
720 -252 lv
684 -189 lv
792 -126 mv
828 -63 lv
900 -63 lv
936 -126 lv
900 -189 lv
828 -189 lv
792 -126 lv
900 -63 mv
936 0 lv
1008 0 lv
1044 -63 lv
1008 -126 lv
936 -126 lv
900 -63 lv
1008 0 mv
1044 63 lv
1116 63 lv
1152 0 lv
1116 -63 lv
1044 -63 lv
1008 0 lv
0 315 mv
45 0 fc
0 -315 mv
45 1 fc
45 cr
1080 -315 mv
45 0 fc
1080 315 mv
45 1 fc
45 cr
es
stroke end showpage
%%Trailer:
%%BoundingBox: -26 -98 276 91
%%EOF

%%EndDocument
 @endspecial 658 3842 a Fc(A)668 3590 y(1)876 3968 y(B)884
3464 y(2)1091 4094 y(C)1100 3338 y(3)1306 4220 y(D)1316
3212 y(4)1525 4346 y(E)1532 3086 y(5)1742 4472 y(F)1748
2960 y(6)884 3618 y(8)1061 3492 y(229)1258 3366 y(1770)1493
3240 y(490)1709 3114 y(564)1925 2988 y(664)1100 3744
y(8)1277 3618 y(164)1512 3492 y(32)1709 3366 y(159)1945
3240 y(24)2180 3114 y(4)1316 3870 y(8)1512 3744 y(40)1728
3618 y(95)1964 3492 y(3)2161 3366 y(51)2396 3240 y(4)1532
3996 y(4)1728 3870 y(38)1964 3744 y(3)2161 3618 y(93)2377
3492 y(36)2612 3366 y(6)1748 4122 y(4)1945 3996 y(28)2141
3870 y(165)2377 3744 y(31)2573 3618 y(133)2828 3492 y(6)1925
4248 y(433)2141 4122 y(742)2357 3996 y(468)2554 3870
y(2270)2789 3744 y(176)3044 3618 y(6)884 3690 y(8)1061
3564 y(229)1258 3438 y(1793)1493 3312 y(524)1709 3186
y(599)1925 3060 y(664)1100 3816 y(8)1277 3690 y(164)1512
3564 y(38)1709 3438 y(159)1945 3312 y(24)2180 3186 y(4)1316
3942 y(8)1512 3816 y(40)1728 3690 y(95)1964 3564 y(3)2161
3438 y(51)2396 3312 y(4)1532 4068 y(4)1728 3942 y(38)1964
3816 y(3)2161 3690 y(90)2377 3564 y(36)2612 3438 y(6)1748
4194 y(4)1945 4068 y(28)2141 3942 y(165)2377 3816 y(31)2573
3690 y(128)2828 3564 y(6)1925 4320 y(430)2141 4194 y(757)2357
4068 y(468)2554 3942 y(2267)2789 3816 y(176)3044 3690
y(6)884 3762 y(8)1061 3636 y(503)1239 3510 y(48240)1474
3384 y(8132)1690 3258 y(8898)1906 3132 y(4123)1100 3888
y(8)1277 3762 y(242)1512 3636 y(40)1671 3510 y(24266)1945
3384 y(55)2180 3258 y(4)1316 4014 y(8)1512 3888 y(44)1709
3762 y(418)1964 3636 y(3)2161 3510 y(55)2396 3384 y(4)1532
4140 y(4)1728 4014 y(44)1964 3888 y(3)2141 3762 y(122)2377
3636 y(40)2593 3510 y(28)1748 4266 y(4)1945 4140 y(56)2122
4014 y(2441)2357 3888 y(130)2573 3762 y(115)2809 3636
y(28)1906 4392 y(5366)2122 4266 y(5943)2319 4140 y(34740)2535
4014 y(34084)2789 3888 y(644)3025 3762 y(28)0 4651 y
Fs(Fig.)25 b(12.)i(Num)m(b)s(er)d(of)h(no)s(des)f(in)g(the)i(6)p
Fu(\002)p Fs(6)f(1-op)s(ening)g(recursion)f(trees)h(for)g
Ff(Sol)-8 b(ver)24 b Fs(\(top)h(en)m(try\),)h Ff(Sol)-8
b(ver)p Fu(\000)p Fs(D,)0 4764 y(namely)38 b Ff(Sol)-8
b(ver)36 b Fs(without)g(side-cell)g(domination)g(\(middle)f(en)m
(try\),)k(and)e Ff(Sol)-8 b(ver)p Fu(\000)p Fs(FD,)36
b(namely)i Ff(Sol)-8 b(ver)0 4877 y Fs(with)21 b(neither)f(side-cell)h
(domination)f(nor)h(\014ll-in)e(\(b)s(ottom)k(en)m(try\).)f(While)f
(corresp)s(onding)f(data)i(w)m(ere)h(obtained)0 4990
y(for)29 b(some)g(7)p Fu(\002)p Fs(7)h(1-op)s(enings,)f
Ff(Sol)-8 b(ver)p Fu(\000)p Fs(FD)27 b(in)h(particular)g(w)m(as)h(to)s
(o)h(slo)m(w)f(to)h(execute)g(for)f(all)f(suc)m(h)h(op)s(enings.)0
5103 y(F)-8 b(or)31 b(example,)f(the)h(b7)f Ff(Sol)-8
b(ver)p Fu(\000)p Fs(FD)29 b(tree)i(has)f(824796)j(no)s(des,)d
(compared)h(to)g(only)e(1196)j(for)e Ff(Sol)-8 b(ver)p
Fs(.)0 5339 y Fr(In)36 b(comparing)e(the)h(winning)g(7)p
Fn(\002)p Fr(7)g(op)s(ening)g(mo)m(v)m(es)h(\(Figure)f(10\))g(with)g
(winning)f(op)s(ening)h(mo)m(v)m(es)h(on)0 5460 y(smaller)e(b)s(oards)i
(\(Figure)g(2\),)f(some)i(features)g(common)d(to)i(eac)m(h)h(of)f
(these)i Fo(n)24 b Fn(\002)i Fo(n)36 b Fr(b)s(oards)g(are)g(w)m(orth)0
5580 y(noting.)c(F)-8 b(or)31 b(example,)1885 5912 y(14)p
eop
%%Page: 15 15
15 14 bop -1 323 a Fn(\017)49 b Fr(the)23 b Fo(n)g Fr(cells)f(on)h(the)
g(short)g(diagonal)d(\(obtuse)k(corner)f(to)f(obtuse)i(corner\))f(are)g
(all)e(\014rst-pla)m(y)m(er)i(winning)98 443 y(op)s(enings,)-1
564 y Fn(\017)49 b Fr(the)31 b Fo(n)20 b Fn(\000)g Fr(1)31
b(cells)g(on)g(eac)m(h)h(of)f(the)h(\014rst-pla)m(y)m(er's)g(sides)g
(\(except)h(for)e(the)g(cell)g(in)f(the)i(short)f(diagonal\))98
684 y(are)h(all)f(\014rst-pla)m(y)m(er)i(losing)e(op)s(enings.)0
854 y(It)24 b(w)m(ould)h(b)s(e)f(of)g(considerable)h(in)m(terest)g(to)f
(sho)m(w)h(whether)h(these)g(results)e(hold)g(in)g(general,)g(esp)s
(ecially)f(if)0 975 y(the)j(pro)s(of)e(is)h(p)s(ositiv)m(e)g(\(as)g
(opp)s(osed)h(to)f(sa)m(y)h(a)f(single)g(coun)m(terexample\),)h(since)f
(to)g(date,)h(for)f(arbitrarily)0 1095 y(large)31 b Fo(n)23
b Fn(\002)f Fo(n)33 b Fr(b)s(oards,)-1 1265 y Fn(\017)49
b Fr(no)32 b(particular)f(mo)m(v)m(e)i(is)f(kno)m(wn)i(to)e(b)s(e)h(a)f
(\014rst-pla)m(y)m(er)h(win,)-1 1386 y Fn(\017)49 b Fr(the)29
b(only)g(mo)m(v)m(es)h(that)f(are)h(kno)m(wn)g(to)f(b)s(e)h
(\014rst-pla)m(y)m(er)g(losses)g(are)f(for)g Fo(n)f Fn(\025)g
Fr(2,)h(the)h(t)m(w)m(o)g(acute)f(corner)98 1506 y(cells)39
b([4],)g(and)h(for)f Fo(n)h Fn(\025)g Fr(3,)g(the)g(t)m(w)m(o)g(cells)f
(eac)m(h)i(in)e(the)h(\014rst-pla)m(y)m(er's)g(side)g(and)g(adjacen)m
(t)g(to)g(the)98 1626 y(acute)33 b(corner)g(cell)e([5].)0
1983 y Fp(6)112 b(Conclusions)37 b(and)h(Op)s(en)g(Problems)0
2274 y Fr(W)-8 b(e)29 b(ha)m(v)m(e)h(sho)m(wn)g(ho)m(w)f(com)m(bining)e
(static)h(and)g(dynamic)g(virtual)f(connection)i(computation)e(metho)s
(ds)0 2394 y(with)43 b(some)g(mo)m(v)m(e)g(domination)e(results)j
(yields)e(an)i(algorithm)c(strong)j(enough)g(to)g(solv)m(e)h(arbitrary)
0 2515 y(7)p Fn(\002)p Fr(7)38 b(Hex)h(states.)g(A)f(next)h(step)g(is)f
(to)f(design)h(an)g(algorithm)d(strong)j(enough)h(to)e(solv)m(e)i(8)p
Fn(\002)p Fr(8)f(states;)0 2635 y(preliminary)21 b(results)i(suggest)h
(that)f(this)g(is)g(considerably)g(more)g(di\016cult)f(and)h(that)h
(further)f(tec)m(hniques)0 2756 y(will)38 b(b)s(e)i(required.)h
(Another)g(direction)e(is)h(to)g(use)h Fi(Sol)-9 b(ver)40
b Fr(to)g(gather)g(7)p Fn(\002)p Fr(7)h(information)c(that)j(can)0
2876 y(b)s(e)d(used)h(to)e(\014nd)h(b)s(etter)h(mo)m(v)m(e)f(ordering)f
(heuristics)g(for)h(Hex)g(game-tree)f(searc)m(h)i(on)f(\(m)m(uc)m(h\))g
(larger)0 2996 y(b)s(oards;)k(for)g(example,)g(suc)m(h)i(data)e(w)m
(ould)g(b)s(e)g(useful)h(in)e(analyzing)g(an)m(y)i(lo)s(cal)d
(con\014guration)h(with)0 3117 y(e\013ectiv)m(e)34 b(b)s(oard)e(size)h
(at)f(most)g(7)p Fn(\002)p Fr(7.)0 3474 y Fp(Ac)m(kno)m(wledgemen)m(ts)
0 3764 y Fr(The)43 b(authors)f(gratefully)f(ac)m(kno)m(wledge)i(the)f
(supp)s(ort)h(of)e(the)h(Natural)f(Sciences)j(and)e(Engineering)0
3885 y(Researc)m(h)23 b(Council)e(of)h(Canada,)g(the)g(Univ)m(ersit)m
(y)h(of)e(Alb)s(erta)g(Researc)m(h)j(Excellence)e(En)m(v)m(elop)s(e,)i
(and)e(the)0 4005 y(Univ)m(ersit)m(y)30 b(of)f(Alb)s(erta)f(GAMES)i
(Researc)m(h)g(Group.)f(Also,)g(the)h(fourth)f(and)g(\014fth)g(authors)
h(gratefully)0 4125 y(ac)m(kno)m(wledge)k(the)f(supp)s(ort)g(of)f(an)g
(NSER)m(C)i(Summer)e(Undergraduate)h(Researc)m(h)h(Aw)m(ard.)0
4296 y(W)-8 b(e)25 b(thank)g(Mic)m(hael)e(Buro,)i(Maryia)e(Kazek)m
(evic)m(h,)k(Martin)c(M)s(\177)-51 b(uller,)23 b(and)h(Jonathan)g(Sc)m
(hae\013er)i(for)d(their)0 4416 y(assistance)30 b(in)f(sustaining)g
(the)h(Mongo)s(ose)g(Hex)g(pro)5 b(ject)30 b(that)g(w)m(as)g(the)g
(starting)f(p)s(oin)m(t)g(for)g(this)g(w)m(ork.)0 4536
y(W)-8 b(e)33 b(also)f(thank)h(the)g(referees)h(for)e(their)g(detailed)
f(commen)m(ts)i(on)f(earlier)f(v)m(ersions)j(of)e(this)g(article.)0
4881 y Fp(References)0 5164 y Fs([1])71 b(V)-8 b(adim)34
b(Anshelevic)m(h.)52 b(The)34 b(Game)i(of)e(Hex:)i(An)e(Automatic)h
(Theorem)f(Pro)m(ving)g(Approac)m(h)h(to)g(Game)166 5277
y(Programming.)40 b Fv(Pr)-5 b(o)g(c.)33 b(17th)i(National)e(Conf.)g
(on)g(AI)g(\(AAAI-2000\))p Fs(,)e(pages)g(189{194,)i(2000.)0
5467 y([2])71 b(V)-8 b(adim)25 b(Anshelevic)m(h.)31 b(The)25
b(Game)h(of)g(Hex:)g(The)f(Hierarc)m(hical)f(Approac)m(h.)33
b(In)24 b(Ric)m(hard)h(J.)g(No)m(w)m(ak)m(o)m(wski,)166
5580 y(editor,)f Fv(Mor)-5 b(e)27 b(Games)g(of)g(No)f(Chanc)-5
b(e)p Fs(,)25 b(v)m(olume)f(42)g(of)g Fv(MSRI)j(Public)-5
b(ations)p Fs(,)25 b(pages)f(151{165.)j(Cam)m(bridge)1885
5912 y Fr(15)p eop
%%Page: 16 16
16 15 bop -126 2213 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0 16 {InitRnode } NewNode end end
 -126 2213 a Fw(b6)83 557 y
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 13.69464 6.84732 2.41109
} false /N@T-0-0 16 {InitRnode } NewNode end end
 83 557
a 47 w Fw(c4)140 537 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 140 537 a 340 557 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-0-0 16 {InitRnode } NewNode end end
 340 557 a
Fw(f2)368 537 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 368 537 a 560 513 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-0-0-0 16 {InitRnode } NewNode end end
 560 513 a Fw(d5)597
493 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 493 a 789 513 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-0-0-0-0 16 {InitRnode } NewNode end end
 789 513 a Fw(d4)826 493 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0 /N@T-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826
493 a 1021 513 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1021 513 a Fw(c5)1055 493 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0 /N@T-0-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055 493
a 1250 513 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1250 513 a Fw(e5)1283 493 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 493 a 1479
513 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1479 513 a Fw(e4)1512 493 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 493 a 1706 513
a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1706 513 a Fw(g3)1741 493 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 493 a 1941 412 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1941
412 a Fw(f3)1970 392 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 392 a 2163 412 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-0-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2163 412
a Fw(g2)2198 392 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2198 392 a 2399 412 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-0-0-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2399 412 a Fw(f4)2427
392 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0-0-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2427 392 a 2621 412 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-0-0-0-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end
end
 2621 412 a Fw(g4)2656 392
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0-0-0-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine
 grestore  grestore end
 2656 392 a 1934 513 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-0-0-0-0-0-0-0-0-1 16 {InitRnode } NewNode end end
 1934 513 a Fw(g2)1970 493 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0-1 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970
493 a 2170 513 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-0-0-0-0-0-0-0-0-1-0 16 {InitRnode } NewNode end end
 2170 513 a Fw(f3)2198 493 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-1 /N@T-0-0-0-0-0-0-0-0-0-1-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2198 493
a 2399 513 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-0-0-0-0-0-0-0-0-1-0-0 16 {InitRnode } NewNode end end
 2399 513 a Fw(f4)2427 493 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-1-0 /N@T-0-0-0-0-0-0-0-0-0-1-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2427 493 a 2621
513 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-0-0-0-0-0-0-0-0-1-0-0-0 16 {InitRnode } NewNode end
end
 2621 513 a Fw(g4)2656 493 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-1-0-0 /N@T-0-0-0-0-0-0-0-0-0-1-0-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine
 grestore  grestore end
 2656 493 a 1941 613
a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-0-0-0-0-0-0-0-0-2 16 {InitRnode } NewNode end end
 1941 613 a Fw(f4)1970 593 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0-2 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 593 a 2163 613 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-0-0-0-0-0-0-0-0-2-0 16 {InitRnode } NewNode end end
 2163
613 a Fw(g4)2198 593 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-2 /N@T-0-0-0-0-0-0-0-0-0-2-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine  grestore
 grestore end
 2198 593 a 564 601 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-0-0-1 16 {InitRnode } NewNode end end
 564 601 a
Fw(e3)597 581 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 581 a 789 601 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-0-0-1-0 16 {InitRnode } NewNode end end
 789 601 a Fw(d4)826
581 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-1 /N@T-0-0-0-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826 581 a 83 698 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 13.69464 6.84732 2.41109
} false /N@T-0-1 16 {InitRnode } NewNode end end
 83 698 a 47 w Fw(e3)140 678
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 140 678 a 335 698 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-1-0 16 {InitRnode } NewNode end end
 335 698 a Fw(c3)368 678 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 368 678
a 564 698 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-1-0-0 16 {InitRnode } NewNode end end
 564 698 a Fw(c4)597 678 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-0 /N@T-0-1-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 678 a 791 698
a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-1-0-0-0 16 {InitRnode } NewNode end end
 791 698 a Fw(a5)826 678 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-0-0 /N@T-0-1-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826 678 a 1019 610 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-1-0-0-0-0 16 {InitRnode } NewNode end end
 1019
610 a Fw(a6)1055 590 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-0-0-0 /N@T-0-1-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055 590 a 1246 610 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-1-0-0-0-0-0 16 {InitRnode } NewNode end end
 1246 610
a Fw(b5)1283 590 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-0-0-0-0 /N@T-0-1-0-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 590 a 1475 610 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-1-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1475 610 a Fw(b4)1512
590 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-0-0-0-0-0 /N@T-0-1-0-0-0-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 590 a 1706 610 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-1-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1706 610 a Fw(a4)1741 590
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-0-0-0-0-0-0 /N@T-0-1-0-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine  grestore  grestore
end
 1741 590 a 1017 698 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-1-0-0-0-1 16 {InitRnode } NewNode end end
 1017 698 a Fw(b5)1055 678 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-0-0-0 /N@T-0-1-0-0-0-1 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055
678 a 1248 698 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-1-0-0-0-1-0 16 {InitRnode } NewNode end end
 1248 698 a Fw(a6)1283 678 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-0-0-0-1 /N@T-0-1-0-0-0-1-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 678
a 1475 698 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-1-0-0-0-1-0-0 16 {InitRnode } NewNode end end
 1475 698 a Fw(b4)1512 678 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-0-0-0-1-0 /N@T-0-1-0-0-0-1-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 678 a 1706
698 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-1-0-0-0-1-0-0-0 16 {InitRnode } NewNode end end
 1706 698 a Fw(a4)1741 678 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-0-0-0-1-0-0 /N@T-0-1-0-0-0-1-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine  grestore  grestore
end
 1741 678 a 1017 785
a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-1-0-0-0-2 16 {InitRnode } NewNode end end
 1017 785 a Fw(b4)1055 765 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-0-0-0 /N@T-0-1-0-0-0-2 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055 765 a 1248 785 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-1-0-0-0-2-0 16 {InitRnode } NewNode end end
 1248
785 a Fw(a4)1283 765 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-0-0-0-2 /N@T-0-1-0-0-0-2-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine  grestore  grestore end
 1283 765 a 79 1241 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 14.6391 7.31955 2.41109
} false /N@T-0-2 16 {InitRnode } NewNode end end
 79 1241 a
47 w Fw(d3)140 1221 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-2 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 140 1221 a 331 1241 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-2-0 16 {InitRnode } NewNode end end
 331 1241
a Fw(b3)368 1221 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2 /N@T-0-2-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 368 1221 a 560 1003 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-2-0-0 16 {InitRnode } NewNode end end
 560 1003 a Fw(b4)597
983 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0 /N@T-0-2-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 983 a 793 1003 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-2-0-0-0 16 {InitRnode } NewNode end end
 793 1003 a Fw(c4)826 983 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-0 /N@T-0-2-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end

826 983 a 1017 873 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-2-0-0-0-0 16 {InitRnode } NewNode end end
 1017 873 a Fw(b5)1055 853 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-0-0 /N@T-0-2-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055
853 a 1250 873 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-2-0-0-0-0-0 16 {InitRnode } NewNode end end
 1250 873 a Fw(c3)1283 853 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-0-0-0 /N@T-0-2-0-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 853
a 1021 957 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-2-0-0-0-1 16 {InitRnode } NewNode end end
 1021 957 a Fw(c5)1055 937 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-0-0 /N@T-0-2-0-0-0-1 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055 937 a 1250
957 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-2-0-0-0-1-0 16 {InitRnode } NewNode end end
 1250 957 a Fw(c3)1283 937 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-0-0-1 /N@T-0-2-0-0-0-1-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 937 a 1017 1045
a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-2-0-0-0-2 16 {InitRnode } NewNode end end
 1017 1045 a Fw(b2)1055 1025 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-0-0 /N@T-0-2-0-0-0-2 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055 1025 a 1250 1045
a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-2-0-0-0-2-0 16 {InitRnode } NewNode end end
 1250 1045 a Fw(c2)1283 1025 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-0-0-2 /N@T-0-2-0-0-0-2-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 1025 a 1017 1133
a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-2-0-0-0-3 16 {InitRnode } NewNode end end
 1017 1133 a Fw(d1)1055 1113 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-0-0 /N@T-0-2-0-0-0-3 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055 1113 a 1250 1133
a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-2-0-0-0-3-0 16 {InitRnode } NewNode end end
 1250 1133 a Fw(c3)1283 1113 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-0-0-3 /N@T-0-2-0-0-0-3-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 1113 a 560 1220
a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-2-0-1 16 {InitRnode } NewNode end end
 560 1220 a Fw(b2)597 1200 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0 /N@T-0-2-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 1200 a 793 1220 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-2-0-1-0 16 {InitRnode } NewNode end end
 793
1220 a Fw(c2)826 1200 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-1 /N@T-0-2-0-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826 1200 a 1017 1220 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-2-0-1-0-0 16 {InitRnode } NewNode end end
 1017 1220
a Fw(b4)1055 1200 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-1-0 /N@T-0-2-0-1-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055 1200 a 1250 1220 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-2-0-1-0-0-0 16 {InitRnode } NewNode end end
 1250 1220
a Fw(c4)1283 1200 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-1-0-0 /N@T-0-2-0-1-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 1200 a 560 1308 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-2-0-2 16 {InitRnode } NewNode end end
 560 1308 a
Fw(b5)597 1288 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0 /N@T-0-2-0-2 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 1288 a 793 1308 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-2-0-2-0 16 {InitRnode } NewNode end end
 793 1308 a Fw(e4)826
1288 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-2 /N@T-0-2-0-2-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826 1288 a 564 1392 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-2-0-3 16 {InitRnode } NewNode end end
 564 1392 a Fw(c2)597 1372
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0 /N@T-0-2-0-3 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 1372 a 793 1392 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-2-0-3-0 16 {InitRnode } NewNode end end
 793 1392 a Fw(e4)826 1372 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-3 /N@T-0-2-0-3-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826
1372 a 1017 1392 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-2-0-3-0-0 16 {InitRnode } NewNode end end
 1017 1392 a Fw(d5)1055 1372 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-3-0 /N@T-0-2-0-3-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055
1372 a 1250 1392 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-2-0-3-0-0-0 16 {InitRnode } NewNode end end
 1250 1392 a Fw(c4)1283 1372 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-3-0-0 /N@T-0-2-0-3-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283
1372 a 560 1480 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-2-0-4 16 {InitRnode } NewNode end end
 560 1480 a Fw(d1)597 1460 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0 /N@T-0-2-0-4 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 1460
a 797 1480 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-2-0-4-0 16 {InitRnode } NewNode end end
 797 1480 a Fw(f2)826 1460 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-2-0-4 /N@T-0-2-0-4-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826 1460 a 83
1329 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 13.69464 6.84732 2.41109
} false /N@T-0-3 16 {InitRnode } NewNode end end
 83 1329 a 47 w Fw(c1)140 1309 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-3 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 140 1309 a 331
1329 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-3-0 16 {InitRnode } NewNode end end
 331 1329 a Fw(d3)368 1309 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-3 /N@T-0-3-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 368 1309 a 83 1413
a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 13.69464 6.84732 2.41109
} false /N@T-0-4 16 {InitRnode } NewNode end end
 83 1413 a 47 w Fw(c2)140 1393 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-4 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 140 1393 a 335 1413
a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-4-0 16 {InitRnode } NewNode end end
 335 1413 a Fw(e3)368 1393 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-4 /N@T-0-4-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 368 1393 a 83 3087 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 13.69464 6.84732 2.41109
} false /N@T-0-5 16 {InitRnode } NewNode end end
 83
3087 a 47 w Fw(c5)140 3067 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-5 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 140 3067 a 335 3087 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0 16 {InitRnode } NewNode end end
 335
3087 a Fw(c3)368 3067 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5 /N@T-0-5-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 368 3067 a 564 2744 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0 16 {InitRnode } NewNode end end
 564 2744
a Fw(c2)597 2724 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0 /N@T-0-5-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 2724 a 789 2230 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-0-0 16 {InitRnode } NewNode end end
 789 2230 a Fw(d2)826
2210 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0 /N@T-0-5-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826 2210 a 1021 2230 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0 16 {InitRnode } NewNode end end
 1021 2230 a Fw(c4)1055
2210 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0 /N@T-0-5-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055 2210 a 1246 1480 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-0-0-0-0 16 {InitRnode } NewNode end end
 1246 1480 a Fw(b4)1283
1460 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0 /N@T-0-5-0-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 1460 a 1475 1480 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1475 1480 a Fw(b5)1512
1460 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-0 /N@T-0-5-0-0-0-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 1460 a 1708 1344 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1708 1344 a Fw(e4)1741
1324 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-0-0 /N@T-0-5-0-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 1324 a 1941 1344 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1941 1344 a Fw(f4)1970
1324 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-0-0-0 /N@T-0-5-0-0-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 1324 a 1713 1431 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-0-0-1 16 {InitRnode } NewNode end end
 1713 1431 a Fw(f3)1741
1411 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-0-0 /N@T-0-5-0-0-0-0-0-0-1 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 1411 a 1936 1431 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-0-0-1-0 16 {InitRnode } NewNode end end
 1936 1431 a Fw(e3)1970
1411 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-0-0-1 /N@T-0-5-0-0-0-0-0-0-1-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 1411 a 1706 1519 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-0-0-2 16 {InitRnode } NewNode end end
 1706 1519 a Fw(g2)1741
1499 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-0-0 /N@T-0-5-0-0-0-0-0-0-2 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 1499 a 1941 1519 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-0-0-2-0 16 {InitRnode } NewNode end end
 1941 1519 a Fw(f4)1970
1499 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-0-0-2 /N@T-0-5-0-0-0-0-0-0-2-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 1499 a 1706 1616 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-0-0-3 16 {InitRnode } NewNode end end
 1706 1616 a Fw(g4)1741
1596 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-0-0 /N@T-0-5-0-0-0-0-0-0-3 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 1596 a 1941 1616 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-0-0-3-0 16 {InitRnode } NewNode end end
 1941 1616 a Fw(f3)1970
1596 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-0-0-3 /N@T-0-5-0-0-0-0-0-0-3-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 1596 a 1246 1850 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-0-0-0-1 16 {InitRnode } NewNode end end
 1246 1850 a Fw(b5)1283
1830 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0 /N@T-0-5-0-0-0-0-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 1830 a 1475 1850 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-0-0-0-1-0 16 {InitRnode } NewNode end end
 1475 1850 a Fw(b4)1512
1830 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-1 /N@T-0-5-0-0-0-0-1-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 1830 a 1708 1713 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-1-0-0 16 {InitRnode } NewNode end end
 1708 1713 a Fw(e4)1741
1693 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-1-0 /N@T-0-5-0-0-0-0-1-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 1693 a 1941 1713 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-1-0-0-0 16 {InitRnode } NewNode end end
 1941 1713 a Fw(f4)1970
1693 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-1-0-0 /N@T-0-5-0-0-0-0-1-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 1693 a 1713 1801 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-1-0-1 16 {InitRnode } NewNode end end
 1713 1801 a Fw(f3)1741
1781 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-1-0 /N@T-0-5-0-0-0-0-1-0-1 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 1781 a 1936 1801 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-1-0-1-0 16 {InitRnode } NewNode end end
 1936 1801 a Fw(e3)1970
1781 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-1-0-1 /N@T-0-5-0-0-0-0-1-0-1-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 1781 a 1706 1889 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-1-0-2 16 {InitRnode } NewNode end end
 1706 1889 a Fw(g2)1741
1869 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-1-0 /N@T-0-5-0-0-0-0-1-0-2 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 1869 a 1941 1889 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-1-0-2-0 16 {InitRnode } NewNode end end
 1941 1889 a Fw(f4)1970
1869 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-1-0-2 /N@T-0-5-0-0-0-0-1-0-2-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 1869 a 1706 1986 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-1-0-3 16 {InitRnode } NewNode end end
 1706 1986 a Fw(g4)1741
1966 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-1-0 /N@T-0-5-0-0-0-0-1-0-3 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 1966 a 1941 1986 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-1-0-3-0 16 {InitRnode } NewNode end end
 1941 1986 a Fw(f3)1970
1966 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-1-0-3 /N@T-0-5-0-0-0-0-1-0-3-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 1966 a 1248 2620 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2 16 {InitRnode } NewNode end end
 1248 2620 a Fw(a5)1283
2600 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0 /N@T-0-5-0-0-0-0-2 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 2600 a 1475 2620 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-0-0-0-2-0 16 {InitRnode } NewNode end end
 1475 2620 a Fw(b4)1512
2600 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2 /N@T-0-5-0-0-0-0-2-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 2600 a 1706 2083 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0 16 {InitRnode } NewNode end end
 1706 2083 a Fw(a4)1741
2063 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0 /N@T-0-5-0-0-0-0-2-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 2063 a 1932 2083 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0 16 {InitRnode } NewNode end end
 1932 2083 a Fw(b3)1970
2063 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0 /N@T-0-5-0-0-0-0-2-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 2063 a 2163 1602 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-0 16 {InitRnode } NewNode end end
 2163 1602 a Fw(a2)2198
1582 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2198 1582 a 2392 1602 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-0-0 16 {InitRnode } NewNode end end
 2392 1602 a Fw(a3)2427
1582 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2427 1582 a 2623 1466 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-0-0-0 16 {InitRnode } NewNode end
end
 2623 1466 a Fw(e4)2656
1446 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2656 1446 a 2856 1466 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-0-0-0-0 16 {InitRnode } NewNode end
end
 2856 1466 a Fw(f4)2885
1446 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2885 1446 a 2628 1554 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-0-0-1 16 {InitRnode } NewNode end
end
 2628 1554 a Fw(f3)2656
1534 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0-1
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2656 1534 a 2851 1554 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-0-0-1-0 16 {InitRnode } NewNode end
end
 2851 1554 a Fw(e3)2885
1534 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0-1 /N@T-0-5-0-0-0-0-2-0-0-0-0-0-1-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2885 1534 a 2621 1641 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-0-0-2 16 {InitRnode } NewNode end
end
 2621 1641 a Fw(g2)2656
1621 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0-2
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2656 1621 a 2856 1641 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-0-0-2-0 16 {InitRnode } NewNode end
end
 2856 1641 a Fw(f4)2885
1621 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0-2 /N@T-0-5-0-0-0-0-2-0-0-0-0-0-2-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2885 1621 a 2621 1738 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-0-0-3 16 {InitRnode } NewNode end
end
 2621 1738 a Fw(g4)2656
1718 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0-3
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2656 1718 a 2856 1738 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-0-0-3-0 16 {InitRnode } NewNode end
end
 2856 1738 a Fw(f3)2885
1718 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-0-0-3 /N@T-0-5-0-0-0-0-2-0-0-0-0-0-3-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2885 1718 a 2163 2204 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1 16 {InitRnode } NewNode end end
 2163 2204 a Fw(a3)2198
2184 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-1 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2198 2184 a 2390 2204 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0 16 {InitRnode } NewNode end end
 2390 2204 a Fw(b1)2427
2184 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1 /N@T-0-5-0-0-0-0-2-0-0-0-1-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2427 2184 a 2619 1839 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0 16 {InitRnode } NewNode end
end
 2619 1839 a Fw(b2)2656
1819 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2656 1819 a 2851 1839 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0 16 {InitRnode } NewNode end
end
 2851 1839 a Fw(c1)2885
1819 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2885 1819 a 3080 1703 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-0 16 {InitRnode } NewNode
end end
 3080 1703 a Fw(e4)3114
1683 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3114 1683 a 3314 1703 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-0-0 16 {InitRnode } NewNode
end end
 3314 1703 a Fw(f4)3342
1683 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3342 1683 a 3085 1790 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-1 16 {InitRnode } NewNode
end end
 3085 1790 a Fw(f3)3114
1770 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-1
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3114 1770 a 3309 1790 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-1-0 16 {InitRnode } NewNode
end end
 3309 1790 a Fw(e3)3342
1770 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-1 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-1-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3342 1770 a 3078 1878 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-2 16 {InitRnode } NewNode
end end
 3078 1878 a Fw(g2)3114
1858 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-2
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3114 1858 a 3314 1878 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-2-0 16 {InitRnode } NewNode
end end
 3314 1878 a Fw(f4)3342
1858 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-2 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-2-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3342 1858 a 3078 1975 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-3 16 {InitRnode } NewNode
end end
 3078 1975 a Fw(g4)3114
1955 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-3
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3114 1955 a 3314 1975 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-3-0 16 {InitRnode } NewNode
end end
 3314 1975 a Fw(f3)3342
1955 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-3 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-0-0-3-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3342 1955 a 2623 2209 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1 16 {InitRnode } NewNode end
end
 2623 2209 a Fw(c1)2656
2189 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2656 2189 a 2848 2209 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0 16 {InitRnode } NewNode end
end
 2848 2209 a Fw(b2)2885
2189 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2885 2189 a 3080 2072 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-0 16 {InitRnode } NewNode
end end
 3080 2072 a Fw(e4)3114
2052 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3114 2052 a 3314 2072 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-0-0 16 {InitRnode } NewNode
end end
 3314 2072 a Fw(f4)3342
2052 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3342 2052 a 3085 2160 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-1 16 {InitRnode } NewNode
end end
 3085 2160 a Fw(f3)3114
2140 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-1
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3114 2140 a 3309 2160 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-1-0 16 {InitRnode } NewNode
end end
 3309 2160 a Fw(e3)3342
2140 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-1 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-1-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3342 2140 a 3078 2248 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-2 16 {InitRnode } NewNode
end end
 3078 2248 a Fw(g2)3114
2228 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-2
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3114 2228 a 3314 2248 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-2-0 16 {InitRnode } NewNode
end end
 3314 2248 a Fw(f4)3342
2228 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-2 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-2-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3342 2228 a 3078 2345 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-3 16 {InitRnode } NewNode
end end
 3078 2345 a Fw(g4)3114
2325 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-3
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3114 2325 a 3314 2345 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-3-0 16 {InitRnode } NewNode
end end
 3314 2345 a Fw(f3)3342
2325 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-3 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-1-0-3-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3342 2325 a 2623 2296 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-2 16 {InitRnode } NewNode end
end
 2623 2296 a Fw(e4)2656
2276 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-2
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2656 2276 a 2856 2296 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-2-0 16 {InitRnode } NewNode end
end
 2856 2296 a Fw(f4)2885
2276 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-2 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-2-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2885 2276 a 2628 2384 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-3 16 {InitRnode } NewNode end
end
 2628 2384 a Fw(f3)2656
2364 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-3
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2656 2364 a 2851 2384 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-3-0 16 {InitRnode } NewNode end
end
 2851 2384 a Fw(e3)2885
2364 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-3 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-3-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2885 2364 a 2621 2472 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-4 16 {InitRnode } NewNode end
end
 2621 2472 a Fw(g2)2656
2452 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-4
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2656 2452 a 2856 2472 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-4-0 16 {InitRnode } NewNode end
end
 2856 2472 a Fw(f4)2885
2452 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-4 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-4-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2885 2452 a 2621 2569 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-5 16 {InitRnode } NewNode end
end
 2621 2569 a Fw(g4)2656
2549 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-5
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2656 2549 a 2856 2569 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-1-0-5-0 16 {InitRnode } NewNode end
end
 2856 2569 a Fw(f3)2885
2549 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-5 /N@T-0-5-0-0-0-0-2-0-0-0-1-0-5-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2885 2549 a 2165 2291 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-2 16 {InitRnode } NewNode end end
 2165 2291 a Fw(e4)2198
2271 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-2 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2198 2271 a 2399 2291 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-2-0 16 {InitRnode } NewNode end end
 2399 2291 a Fw(f4)2427
2271 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-2 /N@T-0-5-0-0-0-0-2-0-0-0-2-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2427 2271 a 2170 2379 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-3 16 {InitRnode } NewNode end end
 2170 2379 a Fw(f3)2198
2359 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-3 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2198 2359 a 2394 2379 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-3-0 16 {InitRnode } NewNode end end
 2394 2379 a Fw(e3)2427
2359 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-3 /N@T-0-5-0-0-0-0-2-0-0-0-3-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2427 2359 a 2163 2467 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-4 16 {InitRnode } NewNode end end
 2163 2467 a Fw(g2)2198
2447 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-4 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2198 2447 a 2399 2467 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-4-0 16 {InitRnode } NewNode end end
 2399 2467 a Fw(f4)2427
2447 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-4 /N@T-0-5-0-0-0-0-2-0-0-0-4-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2427 2447 a 2163 2564 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-5 16 {InitRnode } NewNode end end
 2163 2564 a Fw(g4)2198
2544 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0 /N@T-0-5-0-0-0-0-2-0-0-0-5 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2198 2544 a 2399 2564 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-0-0-5-0 16 {InitRnode } NewNode end end
 2399 2564 a Fw(f3)2427
2544 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-0-0-5 /N@T-0-5-0-0-0-0-2-0-0-0-5-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2427 2544 a 1704 2797 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-0-0-0-2-0-1 16 {InitRnode } NewNode end end
 1704 2797 a Fw(b3)1741
2777 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0 /N@T-0-5-0-0-0-0-2-0-1 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 2777 a 1934 2797 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-1-0 16 {InitRnode } NewNode end end
 1934 2797 a Fw(a4)1970
2777 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-1 /N@T-0-5-0-0-0-0-2-0-1-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 2777 a 2165 2661 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-1-0-0 16 {InitRnode } NewNode end end
 2165 2661 a Fw(e4)2198
2641 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-1-0 /N@T-0-5-0-0-0-0-2-0-1-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2198 2641 a 2399 2661 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-1-0-0-0 16 {InitRnode } NewNode end end
 2399 2661 a Fw(f4)2427
2641 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-1-0-0 /N@T-0-5-0-0-0-0-2-0-1-0-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2427 2641 a 2170 2749 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-1-0-1 16 {InitRnode } NewNode end end
 2170 2749 a Fw(f3)2198
2729 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-1-0 /N@T-0-5-0-0-0-0-2-0-1-0-1 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2198 2729 a 2394 2749 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-1-0-1-0 16 {InitRnode } NewNode end end
 2394 2749 a Fw(e3)2427
2729 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-1-0-1 /N@T-0-5-0-0-0-0-2-0-1-0-1-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2427 2729 a 2163 2836 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-1-0-2 16 {InitRnode } NewNode end end
 2163 2836 a Fw(g2)2198
2816 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-1-0 /N@T-0-5-0-0-0-0-2-0-1-0-2 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2198 2816 a 2399 2836 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-1-0-2-0 16 {InitRnode } NewNode end end
 2399 2836 a Fw(f4)2427
2816 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-1-0-2 /N@T-0-5-0-0-0-0-2-0-1-0-2-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2427 2816 a 2163 2934 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-1-0-3 16 {InitRnode } NewNode end end
 2163 2934 a Fw(g4)2198
2914 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-1-0 /N@T-0-5-0-0-0-0-2-0-1-0-3 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2198 2914 a 2399 2934 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-1-0-3-0 16 {InitRnode } NewNode end end
 2399 2934 a Fw(f3)2427
2914 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-1-0-3 /N@T-0-5-0-0-0-0-2-0-1-0-3-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2427 2914 a 1708 2885 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-2 16 {InitRnode } NewNode end end
 1708 2885 a Fw(e4)1741
2865 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0 /N@T-0-5-0-0-0-0-2-0-2 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 2865 a 1941 2885 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-2-0 16 {InitRnode } NewNode end end
 1941 2885 a Fw(f4)1970
2865 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-2 /N@T-0-5-0-0-0-0-2-0-2-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 2865 a 1713 2973 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-3 16 {InitRnode } NewNode end end
 1713 2973 a Fw(f3)1741
2953 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0 /N@T-0-5-0-0-0-0-2-0-3 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 2953 a 1936 2973 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-2-0-3-0 16 {InitRnode } NewNode end end
 1936 2973 a Fw(e3)1970
2953 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-3 /N@T-0-5-0-0-0-0-2-0-3-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 2953 a 1706 3060 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-4 16 {InitRnode } NewNode end end
 1706 3060 a Fw(g2)1741
3040 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0 /N@T-0-5-0-0-0-0-2-0-4 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 3040 a 1941 3060 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-4-0 16 {InitRnode } NewNode end end
 1941 3060 a Fw(f4)1970
3040 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-4 /N@T-0-5-0-0-0-0-2-0-4-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 3040 a 1706 3158 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-2-0-5 16 {InitRnode } NewNode end end
 1706 3158 a Fw(g4)1741
3138 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0 /N@T-0-5-0-0-0-0-2-0-5 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 3138 a 1941 3158 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-2-0-5-0 16 {InitRnode } NewNode end end
 1941 3158 a Fw(f3)1970
3138 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-2-0-5 /N@T-0-5-0-0-0-0-2-0-5-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1970 3138 a 1250 2708 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-3 16 {InitRnode } NewNode end end
 1250 2708 a Fw(e4)1283
2688 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0 /N@T-0-5-0-0-0-0-3 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 2688 a 1484 2708 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-3-0 16 {InitRnode } NewNode end end
 1484 2708 a Fw(f4)1512
2688 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-3 /N@T-0-5-0-0-0-0-3-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 2688 a 1255 2796 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-4 16 {InitRnode } NewNode end end
 1255 2796 a Fw(f3)1283
2776 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0 /N@T-0-5-0-0-0-0-4 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 2776 a 1479 2796 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-0-0-4-0 16 {InitRnode } NewNode end end
 1479 2796 a Fw(e3)1512
2776 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-4 /N@T-0-5-0-0-0-0-4-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 2776 a 1248 2883 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-5 16 {InitRnode } NewNode end end
 1248 2883 a Fw(g2)1283
2863 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0 /N@T-0-5-0-0-0-0-5 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 2863 a 1484 2883 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-5-0 16 {InitRnode } NewNode end end
 1484 2883 a Fw(f4)1512
2863 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-5 /N@T-0-5-0-0-0-0-5-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 2863 a 1248 2980 a
 tx@Dict begin tx@NodeDict begin {5.15556 1.55556 8.50012 4.25006 2.41109
} false /N@T-0-5-0-0-0-0-6 16 {InitRnode } NewNode end end
 1248 2980 a Fw(g4)1283
2960 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0 /N@T-0-5-0-0-0-0-6 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 2960 a 1484 2980 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-0-0-6-0 16 {InitRnode } NewNode end end
 1484 2980 a Fw(f3)1512
2960 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-0-0-6 /N@T-0-5-0-0-0-0-6-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 2960 a 797 3258 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-5-0-0-1 16 {InitRnode } NewNode end end
 797 3258 a Fw(f2)826 3238
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0 /N@T-0-5-0-0-1 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826 3238 a 1021 3258 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-1-0 16 {InitRnode } NewNode end end
 1021 3258 a Fw(e3)1055 3238
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-1 /N@T-0-5-0-0-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055 3238 a 1246 3258 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-0-1-0-0 16 {InitRnode } NewNode end end
 1246 3258 a Fw(d3)1283 3238
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-1-0 /N@T-0-5-0-0-1-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1283 3238 a 1479 3258 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-0-1-0-0-0 16 {InitRnode } NewNode end end
 1479 3258 a Fw(e2)1512 3238
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-1-0-0 /N@T-0-5-0-0-1-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 3238 a 1704 3258 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-0-1-0-0-0-0 16 {InitRnode } NewNode end end
 1704 3258 a Fw(d2)1741 3238
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-0-1-0-0-0 /N@T-0-5-0-0-1-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 3238 a 564 3346 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-1 16 {InitRnode } NewNode end end
 564 3346 a Fw(c4)597 3326 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0 /N@T-0-5-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end

597 3326 a 789 3346 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-5-0-1-0 16 {InitRnode } NewNode end end
 789 3346 a Fw(d3)826 3326 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-1 /N@T-0-5-0-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826
3326 a 1021 3346 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-1-0-0 16 {InitRnode } NewNode end end
 1021 3346 a Fw(e3)1055 3326 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-1-0 /N@T-0-5-0-1-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055
3326 a 1248 3346 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-5-0-1-0-0-0 16 {InitRnode } NewNode end end
 1248 3346 a Fw(a5)1283 3326 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-1-0-0 /N@T-0-5-0-1-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine  grestore  grestore end
 1283
3326 a 564 3430 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-2 16 {InitRnode } NewNode end end
 564 3430 a Fw(e1)597 3410 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0 /N@T-0-5-0-2 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 3410
a 793 3430 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-5-0-2-0 16 {InitRnode } NewNode end end
 793 3430 a Fw(c2)826 3410 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-5-0-2 /N@T-0-5-0-2-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826 3410 a 79
3518 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 14.6391 7.31955 2.41109
} false /N@T-0-6 16 {InitRnode } NewNode end end
 79 3518 a 47 w Fw(d1)140 3498 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-6 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 140 3498 a 340
3518 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-6-0 16 {InitRnode } NewNode end end
 340 3518 a Fw(f2)368 3498 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-6 /N@T-0-6-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 368 3498 a 564 3518
a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-6-0-0 16 {InitRnode } NewNode end end
 564 3518 a Fw(e3)597 3498 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-6-0 /N@T-0-6-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 3498 a 797 3518 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-6-0-0-0 16 {InitRnode } NewNode end end
 797
3518 a Fw(f3)826 3498 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-6-0-0 /N@T-0-6-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826 3498 a 79 3605 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 14.6391 7.31955 2.41109
} false /N@T-0-7 16 {InitRnode } NewNode end end
 79 3605
a 47 w Fw(d2)140 3585 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-7 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 140 3585 a 335 3605 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-7-0 16 {InitRnode } NewNode end end
 335 3605
a Fw(c4)368 3585 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-7 /N@T-0-7-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 368 3585 a 83 3693 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 13.69464 6.84732 2.41109
} false /N@T-0-8 16 {InitRnode } NewNode end end
 83 3693 a 47
w Fw(e1)140 3673 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-8 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 140 3673 a 340 3693 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 6.84732 3.42366 2.41109
} false /N@T-0-8-0 16 {InitRnode } NewNode end end
 340 3693 a Fw(f2)368
3673 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-8 /N@T-0-8-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 368 3673 a 564 3693 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-8-0-0 16 {InitRnode } NewNode end end
 564 3693 a Fw(e3)597 3673
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-8-0 /N@T-0-8-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 3673 a 789 3693 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-8-0-0-0 16 {InitRnode } NewNode end end
 789 3693 a Fw(d4)826 3673 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-8-0-0 /N@T-0-8-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826
3673 a 83 3781 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 13.69464 6.84732 2.41109
} false /N@T-0-9 16 {InitRnode } NewNode end end
 83 3781 a 47 w Fw(e2)140 3761 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-9 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 140
3761 a 335 3781 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-9-0 16 {InitRnode } NewNode end end
 335 3781 a Fw(e4)368 3761 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-9 /N@T-0-9-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 368 3761
a 564 3781 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-9-0-0 16 {InitRnode } NewNode end end
 564 3781 a Fw(e3)597 3761 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-9-0 /N@T-0-9-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 3761 a 789
3781 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-9-0-0-0 16 {InitRnode } NewNode end end
 789 3781 a Fw(b3)826 3761 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-9-0-0 /N@T-0-9-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826 3761 a 88 3868
a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 12.51407 6.25703 2.41109
} false /N@T-0-10 16 {InitRnode } NewNode end end
 88 3868 a 47 w Fw(f1)140 3848 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-10 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 140 3848 a 335 3868
a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-10-0 16 {InitRnode } NewNode end end
 335 3868 a Fw(c3)368 3848 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10 /N@T-0-10-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 368 3848 a 564 3868 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.0279 4.01395 2.41109
} false /N@T-0-10-0-0 16 {InitRnode } NewNode end end
 564
3868 a Fw(c4)597 3848 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0 /N@T-0-10-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 597 3848 a 789 3868 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-10-0-0-0 16 {InitRnode } NewNode end end
 789 3868
a Fw(d3)826 3848 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0-0 /N@T-0-10-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 826 3848 a 1017 3868 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-10-0-0-0-0 16 {InitRnode } NewNode end end
 1017 3868 a
Fw(d4)1055 3848 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0-0-0 /N@T-0-10-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1055 3848 a 1248 3868 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-10-0-0-0-0-0 16 {InitRnode } NewNode end end
 1248 3868 a
Fw(a5)1283 3848 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0-0-0-0 /N@T-0-10-0-0-0-0-0 InitNC { NCLine  } if
end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1283 3848 a 1477 3781 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-10-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1477 3781 a
Fw(a6)1512 3761 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0-0-0-0-0 /N@T-0-10-0-0-0-0-0-0 InitNC { NCLine 
} if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 3761 a 1704 3781 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-10-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1704 3781 a
Fw(b5)1741 3761 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0-0-0-0-0-0 /N@T-0-10-0-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 3761 a 1932 3781 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-10-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1932 3781 a
Fw(b4)1970 3761 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0-0-0-0-0-0-0 /N@T-0-10-0-0-0-0-0-0-0-0 InitNC {
NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 1970 3761 a 2163 3781 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-10-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2163 3781 a
Fw(a4)2198 3761 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0-0-0-0-0-0-0-0 /N@T-0-10-0-0-0-0-0-0-0-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine  grestore
 grestore end
 2198 3761 a 1475 3868 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-10-0-0-0-0-0-1 16 {InitRnode } NewNode end end
 1475 3868 a
Fw(b5)1512 3848 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0-0-0-0-0 /N@T-0-10-0-0-0-0-0-1 InitNC { NCLine 
} if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 3848 a 1706 3868 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-10-0-0-0-0-0-1-0 16 {InitRnode } NewNode end end
 1706 3868 a
Fw(a6)1741 3848 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0-0-0-0-0-1 /N@T-0-10-0-0-0-0-0-1-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1741 3848 a 1932 3868 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-10-0-0-0-0-0-1-0-0 16 {InitRnode } NewNode end end
 1932 3868 a
Fw(b4)1970 3848 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0-0-0-0-0-1-0 /N@T-0-10-0-0-0-0-0-1-0-0 InitNC {
NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 1970 3848 a 2163 3868 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-10-0-0-0-0-0-1-0-0-0 16 {InitRnode } NewNode end end
 2163 3868 a
Fw(a4)2198 3848 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0-0-0-0-0-1-0-0 /N@T-0-10-0-0-0-0-0-1-0-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine  grestore
 grestore end
 2198 3848 a 1475 3956 a
 tx@Dict begin tx@NodeDict begin {5.55556 0.0 8.97235 4.48618 2.41109
} false /N@T-0-10-0-0-0-0-0-2 16 {InitRnode } NewNode end end
 1475 3956 a
Fw(b4)1512 3936 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0-0-0-0-0 /N@T-0-10-0-0-0-0-0-2 InitNC { NCLine 
} if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1512 3936 a 1706 3956 a
 tx@Dict begin tx@NodeDict begin {5.15556 0.0 8.50012 4.25006 2.41109
} false /N@T-0-10-0-0-0-0-0-2-0 16 {InitRnode } NewNode end end
 1706 3956 a
Fw(a4)1741 3936 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-10-0-0-0-0-0-2 /N@T-0-10-0-0-0-0-0-2-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine  grestore  grestore
end
 1741 3936 a 0 4099 a Fs(Fig.)25 b(13.)g(The)f
Ff(Sol)-8 b(ver)22 b Fs(recursion)h(tree)i(for)g(the)f(7)p
Fu(\002)p Fs(7)h(op)s(ening)e(White-b6)i(\(with)e(the)i(ten)f(no)s(des)
g(connected)h(b)m(y)0 4212 y(dotted)h(edges)g(added)f(so)g(that)h(ev)m
(ery)h(path)e(ends)g(with)f(a)i(winning)c(mo)m(v)m(e\).)28
b(F)-8 b(or)26 b(eac)m(h)g(no)s(de,)f(the)h(order)f(of)h(c)m(hild)0
4325 y(generation)35 b(is)f(top-to-b)s(ottom.)j(Eac)m(h)f
Ff(Sol)-8 b(ver)33 b Fs(recursion)h(tree)h(is)f(a)h(subtree)g(of)g(the)
g(complete)h(game-tree,)0 4438 y(as)d(the)g(only)f(replies)f(to)i(a)g
(winning)d(mo)m(v)m(e)k(whic)m(h)e(app)s(ear)g(in)f(the)i(recursion)e
(tree)j(are)f(those)g(replies)e(in)g(that)0 4550 y(state's)26
b(m)m(ustpla)m(y)e(region.)g(F)-8 b(or)25 b(example,)f(consider)f(for)h
(the)h(tree)g(sho)m(wn)e(here)i(the)f(state)i Fm(G)e
Fs(after)h(White)f(pla)m(ys)0 4663 y(b6.)32 b(As)h(sho)m(wn)e(in)g(the)
i(last)f(diagram)g(in)f(Figure)h(8,)h(White)f(has)g(a)g(win-w)m
(eaklink)e(created)k(b)m(y)e(pla)m(ying)f(at)i(c4)0 4776
y(whic)m(h)i(do)s(es)h(not)h(con)m(tain)g(b5;)f(th)m(us)g(b5)h(is)e
(not)i(in)e(the)i(Blac)m(k)g(m)m(ustpla)m(y)f(region)g(for)g
Fm(G)p Fs(,)h(so)g Ff(Sol)-8 b(ver)35 b Fs(nev)m(er)0
4889 y(needs)25 b(to)h(consider)e(the)h(Blac)m(k)h(mo)m(v)m(e)g(to)g
(b5,)f(so)h(b5)f(do)s(es)f(not)i(app)s(ear)e(as)i(a)f(c)m(hild)e(of)j
(b6)f(in)e(this)h(recursion)g(tree.)0 5002 y(Notice)k(from)f(the)g
(tree)h(sho)m(wn)f(here)g(that)h(in)d(solving)h(the)i(b6)f(op)s(ening)e
(the)j(selection)f(of)g(d2)g(as)h(the)f(\014rst)f(mo)m(v)m(e)0
5115 y(considered)j(at)i(the)f(b6-c5-c3-c2)k(subtree)29
b(w)m(as)i(unfortunate,)f(as)g(d2)g(leads)f(to)i(a)g(White)f(loss)f
(whereas)h(f2,)h(the)0 5228 y(second)c(mo)m(v)m(e)g(considered,)f
(leads)g(to)h(a)g(White)f(win.)f(If)h(f2)h(had)f(b)s(een)g(considered)f
(\014rst,)h(the)h(d2)f(subtree)g(w)m(ould)0 5341 y(not)32
b(ha)m(v)m(e)i(b)s(een)d(explored,)h(and)f(the)h(resulting)f(recursion)
f(tree)j(w)m(ould)e(ha)m(v)m(e)i(had)f(only)f(97)i(no)s(des)e(instead)h
(of)0 5454 y(197.)1885 5912 y Fr(16)p eop
%%Page: 17 17
17 16 bop 166 323 a Fs(Univ)m(ersit)m(y)30 b(Press,)g(Cam)m(bridge,)g
(2002.)0 515 y([3])71 b(V)-8 b(adim)21 b(Anshelevic)m(h.)i(A)e(Hierarc)
m(hical)f(Approac)m(h)g(to)i(Computer)e(Hex.)25 b Fv(A)n(rti\014cial)f
(Intel)5 b(ligenc)-5 b(e)p Fs(,)21 b(134:101{)166 628
y(120,)31 b(2002.)40 b(\(Also)29 b(in:)f(J.)h(Sc)m(hae\013er)g(and)f
(J.)h(V)-8 b(an)30 b(den)e(Herik,)h(\(Eds\).)g Fv(Chips,)j(Computers)h
(and)f(A)n(rti\014cial)166 741 y(Intel)5 b(ligenc)-5
b(e,)33 b(Elsevier)p Fs(,)d(141-160,)k(2002.\).)0 934
y([4])71 b(Anatole)45 b(Bec)m(k,)g(Mic)m(hael)f(N.)g(Bleic)m(her,)f
(and)g(Donald)h(W.)g(Cro)m(w)m(e.)81 b Fv(Excursions)45
b(into)g(Mathematics)p Fs(,)166 1047 y(c)m(hapter)31
b(Games,)h(pages)f(317{387.)43 b(W)-8 b(orth,)32 b(New)e(Y)-8
b(ork,)31 b(1969.)0 1239 y([5])71 b(Anatole)32 b(Bec)m(k,)i(Mic)m(hael)
d(N.)h(Bleic)m(her,)g(and)f(Donald)g(W.)h(Cro)m(w)m(e.)45
b Fv(Excursions)34 b(into)h(Mathematics:)g(the)166 1352
y(Mil)5 b(lennium)32 b(Edition)p Fs(,)g(c)m(hapter)f(App)s(endix)c
(2000.)43 b(A.)30 b(K.)h(P)m(eters,)g(Natic)m(k,)h(2000.)0
1544 y([6])71 b(Claude)29 b(Berge.)42 b(L'Art)31 b(Subtil)c(du)j(Hex.)
41 b(Man)m(uscript,)30 b(1977.)0 1737 y([7])71 b(Yngvi)48
b(Bj\177)-45 b(ornsson,)48 b(Ry)m(an)h(Ha)m(yw)m(ard,)g(Mic)m(hael)f
(Johanson,)g(and)g(Jac)m(k)i(v)-5 b(an)48 b(Rijswijc)m(k.)92
b(Dead)49 b(Cell)166 1850 y(Analysis)35 b(in)g(Hex)i(and)f(the)g
(Shannon)f(Game.)59 b(Man)m(uscript,)36 b Fb(www.cs.cmu.edu/~hde/hex/h)
o(exfa)o(q/)p Fs(,)166 1962 y(submitted)29 b(to)i(Pro)s(c.)g(Graph)e
(Theory)h(2004,)j(2004.)0 2155 y([8])71 b(Cameron)52
b(Bro)m(wne.)105 b Fv(Hex)52 b(Str)-5 b(ate)g(gy:)53
b(Making)f(the)h(Right)g(Conne)-5 b(ctions)p Fs(.)106
b(A.)52 b(K.)g(P)m(eters,)h(Natic)m(k,)166 2268 y(Massac)m(h)m(usetts,)
33 b(2000.)0 2460 y([9])71 b(Bert)31 b(Enderton.)40 b(Answ)m(ers)30
b(to)h(infrequen)m(tly)d(ask)m(ed)j(questions)f(ab)s(out)g(the)h(game)g
(of)f(Hex.)166 2573 y Fb(www.cs.cmu.edu/~hde/hex/h)o(exfa)o(q/)p
Fs(,)24 b(1995.)0 2765 y([10])i(Da)m(vid)f(Gale.)31 b(The)24
b(Game)h(of)g(Hex)g(and)f(the)h(Brou)m(w)m(er)f(Fixed)g(Poin)m(t)h
(Theorem.)30 b Fv(A)n(meric)-5 b(an)28 b(Mathematic)-5
b(al)166 2878 y(Monthly)p Fs(,)32 b(86\(10\):818{827,)37
b(1979.)0 3071 y([11])26 b(Martin)39 b(Gardner.)67 b(Mathematical)40
b(Games.)68 b Fv(Scienti\014c)41 b(Americ)-5 b(an)p Fs(,)40
b(197,)h(1957.)69 b(July)38 b(pp.)h(145{150;)166 3184
y(August)30 b(pp.)g(120{127;)k(Octob)s(er)c(pp.)g(130{138.)0
3376 y([12])c(Martin)48 b(Gardner.)91 b Fv(The)49 b(Scienti\014c)f(A)n
(meric)-5 b(an)49 b(Bo)-5 b(ok)50 b(of)f(Mathematic)-5
b(al)50 b(Puzzles)f(and)g(Diversions)p Fs(,)166 3489
y(c)m(hapter)31 b(The)f(game)i(of)e(Hex,)h(pages)g(73{83.)43
b(Simon)29 b(and)h(Sc)m(h)m(uster,)g(New)h(Y)-8 b(ork,)31
b(1959.)0 3681 y([13])26 b(Mic)m(hael)36 b(R.)g(Garey)h(and)f(Da)m(vid)
g(S.)f(Johnson.)57 b Fv(Computers)39 b(and)g(Intr)-5
b(actability)p Fs(.)60 b(W.H.)37 b(F)-8 b(reeman)37 b(and)166
3794 y(Co.,)31 b(San)f(F)-8 b(rancisco,)31 b(1979.)0
3987 y([14])26 b(Ry)m(an)81 b(Ha)m(yw)m(ard)h(and)e(Jac)m(k)h(v)-5
b(an)81 b(Rijswijc)m(k.)189 b(Hex)81 b(and)f(Com)m(binatorics.)189
b(Man)m(uscript,)166 4100 y Fb(www.cs.ualberta.ca/~haywa)o(rd/p)o(ubli)
o(cat)o(ions)o(.htm)o(l)p Fs(,)49 b(submitted)k(to)j(Discrete)g
(Mathematics,)166 4212 y(2003)32 b(\(revised)e(Oct.)h(2005\).)0
4405 y([15])26 b(Ry)m(an)31 b(B.)g(Ha)m(yw)m(ard.)41
b(Berge)32 b(and)e(the)g(Art)h(of)f(Hex.)41 b(Man)m(uscript,)166
4518 y Fb(www.cs.ualberta.ca/~haywa)o(rd/p)o(ubli)o(cat)o(ions)o(.htm)o
(l)p Fs(,)c(\(to)43 b(app)s(ear)f(in)f(A.)i(Bondy)-8
b(,)43 b(V.)g(Ch)m(v\023)-45 b(atal,)166 4631 y(eds.,)31
b(A)f(biograph)m(y)g(of)g(Claude)f(Berge,)j(Princeton)e(Univ)m(ersit)m
(y)g(Press,)g(in)f(preparation\),)h(2003.)0 4823 y([16])c(Ry)m(an)31
b(B.)g(Ha)m(yw)m(ard.)41 b(A)31 b(Note)g(on)g(Domination)e(in)g(Hex.)42
b(Man)m(uscript,)166 4936 y Fb(www.cs.ualberta.ca/~haywa)o(rd/p)o(ubli)
o(cat)o(ions)o(.htm)o(l)p Fs(,)25 b(Jan)m(uary)30 b(2003.)0
5128 y([17])c(Ry)m(an)38 b(B.)g(Ha)m(yw)m(ard,)h(Yngvi)e(Bj\177)-45
b(ornsson,)37 b(Mic)m(hael)h(Johanson,)f(Morgan)i(Kan,)e(Nathan)h(P)m
(o,)h(and)e(Jac)m(k)166 5241 y(v)-5 b(an)30 b(Rijswijc)m(k.)37
b(Solving)28 b(7)18 b Fu(\002)g Fs(7)30 b(Hex:)g(Virtual)e(Connections)
h(and)f(Game-state)k(Reduction.)38 b(In)29 b(H.)h(Jaap)166
5354 y(v)-5 b(an)43 b(den)e(Herik,)h(Hiro)m(yuki)f(Iida,)h(and)g(Ernst)
f(A.)i(Heinz,)f(editors,)g Fv(A)-5 b(dvanc)g(es)45 b(in)f(Computer)h
(Games)p Fs(,)166 5467 y(v)m(olume)21 b(263)i(of)e Fv(IFIP)k
(International)h(F)-7 b(e)i(der)g(ation)27 b(for)e(Information)i(Pr)-5
b(o)g(c)g(essing)p Fs(,)22 b(pages)g(261{278.)j(Klu)m(w)m(er)166
5580 y(Academic)31 b(Publishers,)c(Boston,)32 b(2003.)1885
5912 y Fr(17)p eop
%%Page: 18 18
18 17 bop 0 323 a Fs([18])26 b(R.)j(M.)g(Karp.)36 b(Reducibilit)m(y)25
b(among)k(com)m(binatorial)e(problems.)36 b(In)28 b(R.)g(E.)g(Miller)f
(and)g(J.)h(W.)h(Thatc)m(her,)166 436 y(editors,)e Fv(Complexity)32
b(of)e(Computer)h(Computations)p Fs(,)f(pages)f(85{103.)h(Plen)m(um)c
(Press,)h(New)h(Y)-8 b(ork,)28 b(1972.)0 622 y([19])e(Stefan)32
b(Kiefer.)42 b(Die)31 b(Menge)i(der)d(Virtuellen)f(V)-8
b(erbindungen)29 b(im)i(Spiel)e(Hex)j(ist)e(PSP)-8 b(A)m(CE-v\177)-45
b(ollstandig.)166 735 y(Studienarb)s(eit)48 b(Nr.)i(1887,)i(F)-8
b(acult\177)-45 b(at)52 b(f)s(\177)-48 b(ur)49 b(Informatik,)g
(Electrotec)m(hnik,)h(und)f(Informationstec)m(hnik,)166
848 y(Univ)m(ersit\177)-45 b(at)30 b(Stuttgart,)i(July)d(2003.)0
1035 y([20])d(Sylvia)j(Nasar.)41 b Fv(A)32 b(Be)-5 b(autiful)33
b(Mind)p Fs(.)41 b(T)-8 b(ouc)m(hstone,)31 b(New)g(Y)-8
b(ork,)31 b(1998.)0 1221 y([21])26 b(Stefan)31 b(Reisc)m(h.)40
b(Hex)31 b(ist)f(PSP)-8 b(A)m(CE-v)m(ollst\177)-45 b(andig.)39
b Fv(A)-5 b(cta)33 b(Informatic)-5 b(a)p Fs(,)33 b(15:167{191,)i(1981.)
0 1407 y([22])26 b(Craige)g(Sc)m(hensted)f(and)g(Charles)f(Titus.)31
b Fv(Mudcr)-5 b(ack)29 b(Y)e(and)i(Poly-Y)p Fs(.)k(Neo)26
b(Press,)f(P)m(eaks)i(Island,)d(Maine,)166 1520 y(1975.)0
1707 y([23])i(Jac)m(k)32 b(v)-5 b(an)30 b(Rijswijc)m(k.)39
b(Queen)m(b)s(ee's)30 b(home)g(page.)166 1819 y Fb
(www.cs.ualberta.ca/~queen)o(bee)p Fs(.)0 2006 y([24])c(Jac)m(k)g(v)-5
b(an)25 b(Rijswijc)m(k.)k(Computer)24 b(Hex:)i(Are)f(Bees)g(b)s(etter)g
(than)g(Fruit\015ies?)k(Master's)d(thesis,)e(Univ)m(ersit)m(y)166
2119 y(of)31 b(Alb)s(erta,)f(Edmon)m(ton,)g(Canada,)h(2000.)0
2305 y([25])26 b(Jac)m(k)38 b(v)-5 b(an)37 b(Rijswijc)m(k.)57
b(Searc)m(h)37 b(and)g(Ev)-5 b(aluation)35 b(in)h(Hex.)60
b(T)-8 b(ec)m(hnical)36 b(rep)s(ort,)h(Univ)m(ersit)m(y)f(of)g(Alb)s
(erta,)166 2418 y(2002.)166 2531 y Fb(www.cs.ualberta.ca/~javha)o(r/re)
o(sear)o(ch.)o(html)o Fs(.)0 2717 y([26])26 b(Jing)k(Y)-8
b(ang.)41 b(Jing)29 b(y)m(ang's)j(w)m(eb)e(site.)166
2830 y Fb(www.ee.umanitoba.ca/~jing)o(yang)o Fs(,)25
b(2003.)0 3017 y([27])h(Jing)36 b(Y)-8 b(ang,)37 b(Simon)e(Liao,)h(and)
g(Mirek)g(P)m(a)m(wlak.)59 b(A)36 b(decomp)s(osition)f(metho)s(d)h(for)
g(\014nding)e(solution)h(in)166 3130 y(game)43 b(Hex)f(7x7.)75
b(In)41 b Fv(International)46 b(Confer)-5 b(enc)g(e)43
b(on)h(Applic)-5 b(ation)45 b(and)f(Development)f(of)h(Computer)166
3242 y(Games)34 b(in)e(the)h(21st)h(Century)p Fs(,)d(pages)g(96{111,)j
(No)m(v)m(em)m(b)s(er)d(2001.)0 3429 y([28])26 b(Jing)34
b(Y)-8 b(ang,)36 b(Simon)d(Liao,)i(and)f(Mirek)g(P)m(a)m(wlak.)55
b(Another)34 b(solution)g(for)g(Hex)h(7x7.)55 b(T)-8
b(ec)m(hnical)34 b(rep)s(ort,)166 3542 y(Univ)m(ersit)m(y)c(of)g
(Manitoba,)h(Winnip)s(eg,)e(Canada,)h(2002.)166 3655
y Fb(www.ee.umanitoba.ca/~jing)o(yang)o(/TR.)o(pdf)o
Fs(.)0 3841 y([29])c(Jing)33 b(Y)-8 b(ang,)35 b(Simon)d(Liao,)j(and)e
(Mirek)g(P)m(a)m(wlak.)52 b(New)34 b(Winning)e(and)h(Losing)g
(Positions)g(for)g(7x7)i(Hex.)166 3954 y(In)28 b Fv(Computers)33
b(and)f(Games)p Fs(,)e(v)m(olume)e(2883)j(of)d Fv(L)-5
b(e)g(ctur)g(e)32 b(Notes)f(in)g(Computer)i(Scienc)-5
b(e)p Fs(,)28 b(pages)i(230{248.)166 4067 y(Springer,)f(2002.)1885
5912 y Fr(18)p eop
%%Page: 19 19
19 18 bop 0 2586 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0 16 {InitRnode } NewNode end end
 0 2586 a Fs(f1)302 2586 y
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0 16 {InitRnode } NewNode end end
 302 2586
a Fs(b6)350 2558 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 350 2558 a 585 1192 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 18.85834 9.42917 3.30017
} false /N@T-0-0-0 16 {InitRnode } NewNode end end
 585 1192 a 60
w Fs(d5)663 1165 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 1165 a 933 1192 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-0-0 16 {InitRnode } NewNode end end
 933 1192 a Fs(e6)976
1165 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 1165 a 1253 1048 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-0-0-0 16 {InitRnode } NewNode end end
 1253 1048 a Fs(f6)1289
1021 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0 /N@T-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 1021 a 1559 1048 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1559 1048 a Fs(e4)1602
1021 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0 /N@T-0-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 1021 a 1253 1194 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-0-0-1 16 {InitRnode } NewNode end end
 1253 1194 a Fs(f5)1289
1167 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0 /N@T-0-0-0-0-1 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 1167 a 1559 1194 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-0-0-1-0 16 {InitRnode } NewNode end end
 1559 1194 a Fs(e4)1602
1167 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-1 /N@T-0-0-0-0-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 1167 a 1244 1336 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-0-0-0-2 16 {InitRnode } NewNode end end
 1244 1336 a Fs(g4)1289
1309 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0 /N@T-0-0-0-0-2 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 1309 a 1559 1336 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-0-0-2-0 16 {InitRnode } NewNode end end
 1559 1336 a Fs(e4)1602
1309 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-2 /N@T-0-0-0-0-2-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 1309 a 590 1834 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 17.64166 8.82083 3.30017
} false /N@T-0-0-1 16 {InitRnode } NewNode end end
 590 1834 a 60 w Fs(e4)663
1807 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 1807 a 933 1834 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-1-0 16 {InitRnode } NewNode end end
 933 1834 a Fs(e6)976 1807
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1 /N@T-0-0-1-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 1807 a 1241 1500 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-1-0-0 16 {InitRnode } NewNode end end
 1241 1500 a Fs(d6)1289 1472
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0 /N@T-0-0-1-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 1472 a 1554 1500 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-1-0-0-0 16 {InitRnode } NewNode end end
 1554 1500 a Fs(d5)1602 1472
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-0 /N@T-0-0-1-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 1472 a 1872 1283 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-1-0-0-0-0 16 {InitRnode } NewNode end end
 1872 1283 a Fs(c5)1915 1255
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-0-0 /N@T-0-0-1-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 1255 a 2181 1283 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-1-0-0-0-0-0 16 {InitRnode } NewNode end end
 2181 1283 a Fs(d3)2229 1255
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-0-0-0 /N@T-0-0-1-0-0-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229 1255 a 1872 1429 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-1-0-0-0-1 16 {InitRnode } NewNode end end
 1872 1429 a Fs(c6)1915 1402
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-0-0 /N@T-0-0-1-0-0-0-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 1402 a 2181 1429 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-1-0-0-0-1-0 16 {InitRnode } NewNode end end
 2181 1429 a Fs(d4)2229 1402
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-0-0-1 /N@T-0-0-1-0-0-0-1-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229 1402 a 1879 1575 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-1-0-0-0-2 16 {InitRnode } NewNode end end
 1879 1575 a Fs(f6)1915 1548
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-0-0 /N@T-0-0-1-0-0-0-2 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 1548 a 2186 1575 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-1-0-0-0-2-0 16 {InitRnode } NewNode end end
 2186 1575 a Fs(e5)2229 1548
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-0-0-2 /N@T-0-0-1-0-0-0-2-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229 1548 a 1870 1717 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-0-1-0-0-0-3 16 {InitRnode } NewNode end end
 1870 1717 a Fs(g4)1915 1689
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-0-0 /N@T-0-0-1-0-0-0-3 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 1689 a 2186 1717 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-1-0-0-0-3-0 16 {InitRnode } NewNode end end
 2186 1717 a Fs(e5)2229 1689
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-0-0-3 /N@T-0-0-1-0-0-0-3-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229 1689 a 1246 1646 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-1-0-1 16 {InitRnode } NewNode end end
 1246 1646 a Fs(c6)1289 1619
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0 /N@T-0-0-1-0-1 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 1619 a 1554 1646 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-1-0-1-0 16 {InitRnode } NewNode end end
 1554 1646 a Fs(d3)1602 1619
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-1 /N@T-0-0-1-0-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 1619 a 1253 1876 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-1-0-2 16 {InitRnode } NewNode end end
 1253 1876 a Fs(f5)1289 1849
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0 /N@T-0-0-1-0-2 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 1849 a 1554 1876 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-1-0-2-0 16 {InitRnode } NewNode end end
 1554 1876 a Fs(d3)1602 1849
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-2 /N@T-0-0-1-0-2-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 1849 a 1872 1876 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-1-0-2-0-0 16 {InitRnode } NewNode end end
 1872 1876 a Fs(c4)1915 1849
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-2-0 /N@T-0-0-1-0-2-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 1849 a 2186 1876 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-1-0-2-0-0-0 16 {InitRnode } NewNode end end
 2186 1876 a Fs(c5)2229 1849
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-2-0-0 /N@T-0-0-1-0-2-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229 1849 a 1253 2022 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-1-0-3 16 {InitRnode } NewNode end end
 1253 2022 a Fs(f6)1289 1995
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0 /N@T-0-0-1-0-3 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 1995 a 1566 2022 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-1-0-3-0 16 {InitRnode } NewNode end end
 1566 2022 a Fs(f5)1602 1995
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-3 /N@T-0-0-1-0-3-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 1995 a 1867 2022 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-1-0-3-0-0 16 {InitRnode } NewNode end end
 1867 2022 a Fs(d6)1915 1995
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-3-0 /N@T-0-0-1-0-3-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 1995 a 2181 2022 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-1-0-3-0-0-0 16 {InitRnode } NewNode end end
 2181 2022 a Fs(d5)2229 1995
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-3-0-0 /N@T-0-0-1-0-3-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229 1995 a 1244 2168 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-0-1-0-4 16 {InitRnode } NewNode end end
 1244 2168 a Fs(g4)1289 2141
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0 /N@T-0-0-1-0-4 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 2141 a 1566 2168 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-1-0-4-0 16 {InitRnode } NewNode end end
 1566 2168 a Fs(f2)1602 2141
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-1-0-4 /N@T-0-0-1-0-4-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 2141 a 590 2332 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 17.64166 8.82083 3.30017
} false /N@T-0-0-2 16 {InitRnode } NewNode end end
 590 2332 a 60 w Fs(e3)663 2305
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0 /N@T-0-0-2 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 2305 a 933 2332 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-2-0 16 {InitRnode } NewNode end end
 933 2332 a Fs(e5)976 2305 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-2 /N@T-0-0-2-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976
2305 a 1241 2332 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-2-0-0 16 {InitRnode } NewNode end end
 1241 2332 a Fs(d5)1289 2305 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-2-0 /N@T-0-0-2-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289
2305 a 1559 2332 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-2-0-0-0 16 {InitRnode } NewNode end end
 1559 2332 a Fs(c7)1602 2305 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-2-0-0 /N@T-0-0-2-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602
2305 a 1867 2186 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-2-0-0-0-0 16 {InitRnode } NewNode end end
 1867 2186 a Fs(b7)1915 2159 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-2-0-0-0 /N@T-0-0-2-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915
2159 a 2186 2186 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-2-0-0-0-0-0 16 {InitRnode } NewNode end end
 2186 2186 a Fs(c6)2229 2159 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-2-0-0-0-0 /N@T-0-0-2-0-0-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229
2159 a 2494 2186 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-2-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2494 2186 a Fs(d6)2542 2159 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-2-0-0-0-0-0 /N@T-0-0-2-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2542
2159 a 2807 2186 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-2-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2807 2186 a Fs(d7)2855 2159 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-2-0-0-0-0-0-0 /N@T-0-0-2-0-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine  grestore  grestore
end
 2855
2159 a 1872 2332 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-2-0-0-0-1 16 {InitRnode } NewNode end end
 1872 2332 a Fs(c6)1915 2305 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-2-0-0-0 /N@T-0-0-2-0-0-0-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915
2305 a 2181 2332 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-2-0-0-0-1-0 16 {InitRnode } NewNode end end
 2181 2332 a Fs(b7)2229 2305 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-2-0-0-0-1 /N@T-0-0-2-0-0-0-1-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229
2305 a 2494 2332 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-2-0-0-0-1-0-0 16 {InitRnode } NewNode end end
 2494 2332 a Fs(d6)2542 2305 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-2-0-0-0-1-0 /N@T-0-0-2-0-0-0-1-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2542
2305 a 2807 2332 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-2-0-0-0-1-0-0-0 16 {InitRnode } NewNode end end
 2807 2332 a Fs(d7)2855 2305 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-2-0-0-0-1-0-0 /N@T-0-0-2-0-0-0-1-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine  grestore  grestore
end
 2855
2305 a 1867 2478 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-2-0-0-0-2 16 {InitRnode } NewNode end end
 1867 2478 a Fs(d6)1915 2451 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-2-0-0-0 /N@T-0-0-2-0-0-0-2 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915
2451 a 2181 2478 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-2-0-0-0-2-0 16 {InitRnode } NewNode end end
 2181 2478 a Fs(d7)2229 2451 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-2-0-0-0-2 /N@T-0-0-2-0-0-0-2-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine  grestore  grestore
end
 2229
2451 a 590 2624 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 17.64166 8.82083 3.30017
} false /N@T-0-0-3 16 {InitRnode } NewNode end end
 590 2624 a 60 w Fs(c6)663 2597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0 /N@T-0-0-3 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663
2597 a 928 2624 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-3-0 16 {InitRnode } NewNode end end
 928 2624 a Fs(d4)976 2597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-3 /N@T-0-0-3-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 2597
a 1246 2624 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-3-0-0 16 {InitRnode } NewNode end end
 1246 2624 a Fs(e4)1289 2597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-3-0 /N@T-0-0-3-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 2597
a 1554 2624 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-3-0-0-0 16 {InitRnode } NewNode end end
 1554 2624 a Fs(d5)1602 2597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-3-0-0 /N@T-0-0-3-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 2597
a 1872 2624 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-3-0-0-0-0 16 {InitRnode } NewNode end end
 1872 2624 a Fs(e5)1915 2597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-3-0-0-0 /N@T-0-0-3-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 2597
a 2192 2624 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-3-0-0-0-0-0 16 {InitRnode } NewNode end end
 2192 2624 a Fs(f2)2229 2597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-3-0-0-0-0 /N@T-0-0-3-0-0-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229 2597
a 2499 2624 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-3-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2499 2624 a Fs(e3)2542 2597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-3-0-0-0-0-0 /N@T-0-0-3-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2542 2597
a 2812 2624 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-3-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2812 2624 a Fs(e2)2855 2597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-3-0-0-0-0-0-0 /N@T-0-0-3-0-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine  grestore  grestore
end
 2855 2597
a 590 2844 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 17.64166 8.82083 3.30017
} false /N@T-0-0-4 16 {InitRnode } NewNode end end
 590 2844 a 60 w Fs(e5)663 2816 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0 /N@T-0-0-4 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 2816
a 939 2844 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-4-0 16 {InitRnode } NewNode end end
 939 2844 a Fs(f2)976 2816 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-4 /N@T-0-0-4-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 2816 a 1246
2771 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-4-0-0 16 {InitRnode } NewNode end end
 1246 2771 a Fs(c4)1289 2743 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-4-0 /N@T-0-0-4-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 2743 a 1554
2771 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-4-0-0-0 16 {InitRnode } NewNode end end
 1554 2771 a Fs(d3)1602 2743 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-4-0-0 /N@T-0-0-4-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 2743 a 1246
2917 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-4-0-1 16 {InitRnode } NewNode end end
 1246 2917 a Fs(e3)1289 2889 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-4-0 /N@T-0-0-4-0-1 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 2889 a 1554
2917 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-4-0-1-0 16 {InitRnode } NewNode end end
 1554 2917 a Fs(d3)1602 2889 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-4-0-1 /N@T-0-0-4-0-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 2889 a 596
2990 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 16.12083 8.06041 3.30017
} false /N@T-0-0-5 16 {InitRnode } NewNode end end
 596 2990 a 61 w Fs(f4)663 2962 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0 /N@T-0-0-5 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 2962 a 928
2990 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-5-0 16 {InitRnode } NewNode end end
 928 2990 a Fs(d5)976 2962 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-5 /N@T-0-0-5-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 2962 a 590 3209
a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 17.64166 8.82083 3.30017
} false /N@T-0-0-6 16 {InitRnode } NewNode end end
 590 3209 a 60 w Fs(c5)663 3182 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0 /N@T-0-0-6 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 3182 a 933 3209
a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-6-0 16 {InitRnode } NewNode end end
 933 3209 a Fs(e5)976 3182 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-6 /N@T-0-0-6-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 3182 a 1241 3063 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-6-0-0 16 {InitRnode } NewNode end end

1241 3063 a Fs(d5)1289 3036 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-6-0 /N@T-0-0-6-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 3036 a 1559 3063 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-6-0-0-0 16 {InitRnode } NewNode end end

1559 3063 a Fs(e4)1602 3036 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-6-0-0 /N@T-0-0-6-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 3036 a 1872 3063 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-6-0-0-0-0 16 {InitRnode } NewNode end end

1872 3063 a Fs(e3)1915 3036 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-6-0-0-0 /N@T-0-0-6-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 3036 a 2186 3063 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-6-0-0-0-0-0 16 {InitRnode } NewNode end end

2186 3063 a Fs(c7)2229 3036 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-6-0-0-0-0 /N@T-0-0-6-0-0-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 3.0 0 0 add DotLine  grestore  grestore
end
 2229 3036 a 1253 3209 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-6-0-1 16 {InitRnode } NewNode end end

1253 3209 a Fs(f5)1289 3182 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-6-0 /N@T-0-0-6-0-1 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 3182 a 1566 3209 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-6-0-1-0 16 {InitRnode } NewNode end end

1566 3209 a Fs(f2)1602 3182 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-6-0-1 /N@T-0-0-6-0-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 3182 a 1872 3209 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-6-0-1-0-0 16 {InitRnode } NewNode end end

1872 3209 a Fs(e3)1915 3182 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-6-0-1-0 /N@T-0-0-6-0-1-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 3182 a 2186 3209 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-6-0-1-0-0-0 16 {InitRnode } NewNode end end

2186 3209 a Fs(e4)2229 3182 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-6-0-1-0-0 /N@T-0-0-6-0-1-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229 3182 a 2505 3209 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-6-0-1-0-0-0-0 16 {InitRnode } NewNode end end

2505 3209 a Fs(f3)2542 3182 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-6-0-1-0-0-0 /N@T-0-0-6-0-1-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2542 3182 a 2807 3209 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-6-0-1-0-0-0-0-0 16 {InitRnode } NewNode end end

2807 3209 a Fs(d3)2855 3182 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-6-0-1-0-0-0-0 /N@T-0-0-6-0-1-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2855 3182 a 1244 3355 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-0-6-0-2 16 {InitRnode } NewNode end end

1244 3355 a Fs(g3)1289 3328 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-6-0 /N@T-0-0-6-0-2 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 3328 a 1566 3355 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-6-0-2-0 16 {InitRnode } NewNode end end

1566 3355 a Fs(f2)1602 3328 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-6-0-2 /N@T-0-0-6-0-2-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 3328 a 596 3515 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 16.12083 8.06041 3.30017
} false /N@T-0-0-7 16 {InitRnode } NewNode end end

596 3515 a 61 w Fs(f3)663 3487 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0 /N@T-0-0-7 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 3487 a 928 3515
a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-7-0 16 {InitRnode } NewNode end end
 928 3515 a Fs(d3)976 3487 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-7 /N@T-0-0-7-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 3487 a 1246 3515 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-7-0-0 16 {InitRnode } NewNode end end

1246 3515 a Fs(e3)1289 3487 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-7-0 /N@T-0-0-7-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 3487 a 1559 3515 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-7-0-0-0 16 {InitRnode } NewNode end end

1559 3515 a Fs(e6)1602 3487 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-7-0-0 /N@T-0-0-7-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 3487 a 587 3661 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 18.25 9.125 3.30017
} false /N@T-0-0-8 16 {InitRnode } NewNode end end

587 3661 a 61 w Fs(g2)663 3633 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0 /N@T-0-0-8 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 3633 a 933 3661
a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-8-0 16 {InitRnode } NewNode end end
 933 3661 a Fs(e4)976 3633 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-8 /N@T-0-0-8-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 3633 a 1241 3661 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-8-0-0 16 {InitRnode } NewNode end end

1241 3661 a Fs(d5)1289 3633 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-8-0 /N@T-0-0-8-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 3633 a 1559 3661 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-8-0-0-0 16 {InitRnode } NewNode end end

1559 3661 a Fs(e6)1602 3633 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-8-0-0 /N@T-0-0-8-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 3633 a 587 3820 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 18.25 9.125 3.30017
} false /N@T-0-0-9 16 {InitRnode } NewNode end end

587 3820 a 61 w Fs(g3)663 3793 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0 /N@T-0-0-9 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 3793 a 939 3820
a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-9-0 16 {InitRnode } NewNode end end
 939 3820 a Fs(f2)976 3793 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-9 /N@T-0-0-9-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 3793 a 1246 3820 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-9-0-0 16 {InitRnode } NewNode end end

1246 3820 a Fs(e3)1289 3793 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-9-0 /N@T-0-0-9-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 3793 a 1554 3820 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-9-0-0-0 16 {InitRnode } NewNode end end

1554 3820 a Fs(d3)1602 3793 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-9-0-0 /N@T-0-0-9-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 3793 a 587 3979 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 18.25 9.125 3.30017
} false /N@T-0-0-10 16 {InitRnode } NewNode end end

587 3979 a 61 w Fs(g4)663 3952 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0 /N@T-0-0-10 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 3952 a 939 3979
a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-0-10-0 16 {InitRnode } NewNode end end
 939 3979 a Fs(f2)976 3952 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-10 /N@T-0-0-10-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 3952 a 1246 3979 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-10-0-0 16 {InitRnode } NewNode end end

1246 3979 a Fs(e3)1289 3952 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-10-0 /N@T-0-0-10-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 3952 a 1559 3979 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-10-0-0-0 16 {InitRnode } NewNode end end

1559 3979 a Fs(e2)1602 3952 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-10-0-0 /N@T-0-0-10-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 3952 a 0 4140 a Fs(Fig.)33
b(14.)i(The)e Ff(Sol)-8 b(ver)31 b Fs(recursion)h(tree)i(for)f(the)g(7)
p Fu(\002)p Fs(7)h(op)s(ening)e(White-f1)h(\(with)g(the)g(\014v)m(e)h
(no)s(des)e(connected)0 4253 y(b)m(y)37 b(dotted)g(edges)g(added)f(so)h
(that)h(ev)m(ery)f(path)g(ends)f(with)f(a)i(winning)d(mo)m(v)m(e\).)39
b(F)-8 b(or)37 b(eac)m(h)h(no)s(de,)e(the)h(order)0 4366
y(of)c(c)m(hild)e(generation)j(is)d(top-to-b)s(ottom.)36
b(Notice)e(that)f(the)g(f1-b6)g(subtree,)g(whic)m(h)f(establishes)f
(that)j(b6)f(is)f(a)0 4479 y(winning)j(coun)m(termo)m(v)m(e)41
b(to)e(f1,)f(is)g(parado)m(xically)f(smaller)f(than)i(the)h(b6)f
(subtree)g(sho)m(wn)f(in)g(Figure)h(13,)h(in)0 4591 y(part)29
b(b)s(ecause)g(of)g(the)g(mo)m(v)m(e)i(ordering)c(here)i(is)f(more)h
(fortunate)h(than)e(there.)i(In)e(this)g(f1-tree,)i(whenev)m(er)f(it)g
(is)0 4704 y(White's)f(turn)e(to)j(pla)m(y)-8 b(,)28
b(the)f(\014rst)g(mo)m(v)m(e)i(considered)e(turns)f(out)i(to)h(b)s(e)e
(a)h(winning)c(mo)m(v)m(e;)30 b(this)c(is)h(not)h(the)g(case)0
4817 y(in)h(the)i(b6)f(tree)h(sho)m(wn)f(in)f(Figure)h(13.)1885
5912 y Fr(19)p eop
%%Page: 20 20
20 19 bop -71 769 a Fa(1)177 b(2)g(3)f(4)h(5)g(6)f(7)h(8)g(9)g(10)141
b(11)h(12)g(13)f(14)h(15)g(16)f(17)h(18)g(19)-71 927
y(a1)36 b(c4)g(a6)g(f2)g(d3)f(b6)h(e4)g(d4)g(e3)g(e5)g(d5)g(e1)f(e2)h
(f1)g(a3)g(b2)g(c2)g(c3)g(a4)f(d2)h(b5)g(a2)g(b3)g(a5)g(b4)f(a7)h(c5)g
(c7)g(b7)g(c6)g(d6)g(d7)-71 1006 y(a2)g(e3)g(f4)g(d5)g(c5)f(d3)h(g2)g
(e6)g(e5)g(c7)g(d6)g(d7)f(g5)h(f7)g(e7)g(f6)g(b6)g(d2)g(c6)f(g1)h(f2)g
(f1)g(e1)g(e2)g(a4)f(b3)-71 1085 y(a3)h(d4)g(c5)g(b4)g(c4)f(d2)h(c3)g
(c2)g(b3)g(b1)g(b2)g(c1)f(e4)h(f2)g(e2)g(d5)g(d3)g(b7)g(a7)f(b6)h(a6)g
(b5)g(e3)g(e5)g(c6)f(c7)h(d6)g(d7)-71 1164 y(a4)g(b3)g(d3)g(d5)g(c5)f
(d2)h(c2)g(b7)g(a7)g(b6)g(a6)g(b5)f(e5)h(c3)g(a5)g(b1)g(a3)g(b2)g(e4)f
(f1)h(e2)g(e1)g(g1)g(f2)g(g2)f(f3)h(g3)g(f4)g(g4)g(f5)g(g5)g(f7)f(f6)h
(e7)g(e6)g(d7)g(c4)-71 1243 y(a5)g(b6)g(c5)g(e3)g(f4)f(d5)h(c6)g(c3)g
(d3)g(e1)g(e2)g(f1)f(g1)h(f2)g(d2)g(d1)g(g2)g(f3)g(g3)f(e6)h(d6)g(e5)g
(g5)g(f7)g(e7)f(f6)h(d4)g(e4)-71 1321 y(a6)g(f1)g(c3)g(b5)g(c6)f(d4)h
(c4)g(c5)g(a5)g(b4)g(a4)g(b3)f(a3)h(a7)g(b6)g(b1)g(b2)g(c1)g(c2)f(d1)h
(e1)g(d2)g(e2)g(d3)g(e4)f(d5)h(e5)g(e3)g(g2)g(f2)g(g1)g(f3)f(g3)h(f4)g
(g4)-71 1400 y(a7)g(d5)g(c3)g(d2)g(c2)f(c4)h(a5)g(b4)g(a4)g(a6)g(e4)g
(d4)f(e5)h(e3)g(b5)g(b3)g(a3)g(b1)g(b2)f(b6)h(c6)g(c5)g(g2)g(f3)g(g3)f
(g1)h(f2)g(f1)g(e2)g(d3)g(e1)g(f4)f(g4)-71 1479 y(b1)h(c4)g(a6)g(f2)g
(d3)f(b6)h(e4)g(d4)g(e3)g(e5)g(d5)g(e1)f(e2)h(f1)g(a3)g(b2)g(c2)g(c3)g
(a4)f(d2)h(b5)g(a2)g(b3)g(a5)g(b4)f(a7)h(c5)g(c7)g(b7)g(c6)g(d6)g(d7)
-71 1558 y(b2)g(e3)g(g2)g(g1)g(a6)f(b3)h(c3)g(d2)g(f2)g(f1)g(e1)g(e2)f
(c2)h(b5)g(d4)g(c4)g(d3)g(d5)g(c5)f(b7)h(a7)g(b6)g(a5)g(b4)g(e4)f(e5)h
(c6)g(c7)g(d6)g(d7)-71 1637 y(b3)g(b1)g(c4)g(c3)g(b6)f(f1)h(b4)g(c2)g
(b2)g(c1)g(d2)g(d3)f(e3)h(d4)g(e4)g(e2)g(g1)g(d5)g(e5)f(f2)h(g2)g(f3)g
(g3)g(f4)g(g4)-71 1716 y(b4)g(f1)g(c2)g(b7)g(a7)f(c3)h(b3)g(b5)g(c4)g
(c5)g(e4)g(d4)f(e3)h(e5)g(d5)g(c7)g(b6)g(c6)g(d6)f(d7)h(e6)g(e7)g(g6)g
(f6)g(g5)f(f5)h(g4)g(f4)g(g3)-71 1795 y(b5)g(f1)g(c3)g(b6)g(c6)f(d2)h
(c5)g(c1)g(a2)g(b4)g(c4)g(b2)f(a3)h(b3)g(c2)g(d1)g(e2)g(d3)g(e3)f(d4)h
(e4)g(e1)g(g1)g(d5)g(e5)f(f2)h(g2)g(f3)g(g3)g(f4)g(g4)-71
1873 y(b6)g(c4)g(f2)g(d5)g(d4)f(c5)h(e5)g(e4)g(g3)g(f3)g(g2)g(f4)f(g4)
-71 1952 y(b7)h(b6)g(e4)g(d5)g(e5)f(e3)h(g2)g(f3)g(g3)g(e6)g(f5)g(f6)f
(c6)h(c5)g(d6)g(f4)g(d4)g(d3)g(g4)f(g1)h(c4)g(c3)g(f2)g(f1)g(e2)f(e1)h
(d2)g(d1)-71 2031 y(c1)g(c4)g(a6)g(f2)g(d3)f(b6)h(e4)g(d4)g(e3)g(e5)g
(d5)g(e1)f(d2)h(c2)g(a3)g(d1)g(b4)g(a4)g(b3)f(b1)h(e2)g(b2)g(f1)g(c7)g
(b7)f(c6)h(a7)g(b5)g(a5)g(c3)g(d6)g(d7)-71 2110 y(c2)g(d5)g(c5)g(b7)g
(a7)f(b6)h(a6)g(b5)g(a5)g(b3)g(c4)g(f1)f(b4)h(c3)g(e2)g(d3)g(e3)g(d4)g
(e5)f(e4)h(g3)g(f3)g(g2)g(g1)g(f2)f(d2)h(e1)g(f4)g(g4)-71
2189 y(c3)g(d4)g(b6)g(b5)g(c5)f(c1)h(c4)g(d2)g(a2)g(b2)g(a3)g(b3)f(a4)h
(b4)g(c2)g(d1)g(e2)g(d3)g(e4)f(d5)h(e5)g(e3)g(g2)g(f2)g(g1)f(f3)h(g3)g
(f4)g(g4)-71 2268 y(c4)g(c3)g(b6)g(d3)g(e3)f(f1)h(d2)g(e2)g(b3)g(b5)g
(b4)g(c5)f(d4)h(d5)g(e5)g(e4)g(g3)g(f3)g(g2)f(g1)h(f2)g(b2)g(c2)g(f4)g
(g4)-71 2347 y(c5)g(d5)g(c2)g(b7)g(a7)f(b6)h(a6)g(b5)g(a5)g(b3)g(c4)g
(f1)f(b4)h(c3)g(e2)g(d3)g(e3)g(d4)g(e5)f(e4)h(g3)g(f3)g(g2)g(g1)g(f2)f
(d2)h(e1)g(f4)g(g4)-71 2426 y(c6)g(d3)g(c3)g(c4)g(e3)f(d5)h(c5)g(d4)g
(e5)g(e4)g(a5)g(b4)f(a4)h(b3)g(a3)g(b1)g(b2)g(b5)g(a6)f(a7)h(b6)g(c1)g
(c2)g(d1)g(d2)f(e1)h(e2)g(f1)g(g1)g(f2)g(g2)g(f3)f(g3)h(f4)g(g4)-71
2504 y(c7)g(b6)g(e4)g(d5)g(e5)f(e3)h(g2)g(f3)g(g3)g(e6)g(f5)g(f6)f(c6)h
(c5)g(d6)g(f4)g(d4)g(d3)g(g4)f(g1)h(c4)g(c3)g(f2)g(f1)g(e2)f(e1)h(d2)g
(d1)-71 2583 y(d1)g(b6)g(c6)g(d4)g(e4)f(d5)h(e5)g(f2)g(e3)g(e2)-71
2662 y(d2)g(c5)g(e4)g(d3)g(f2)f(e5)h(d5)g(f3)g(e3)g(c7)g(b6)g(c6)f(b5)h
(c3)g(c4)g(d4)g(a4)g(b2)g(b3)f(c2)h(d6)g(d7)-71 2741
y(d3)g(d4)g(b6)g(c4)g(a5)f(a6)h(b5)g(b3)g(c3)g(b4)g(e4)g(d5)f(e5)h(e3)g
(g2)g(f3)g(g3)g(g1)g(f2)f(f1)h(e2)g(e1)g(c2)g(f4)g(g4)-71
2820 y(d4)g(d3)g(c4)g(c3)g(e3)f(f1)h(c2)g(d2)g(e1)g(e2)g(g1)g(f2)f(f3)h
(g2)g(a4)g(b3)g(a3)g(b1)g(b2)f(b4)h(a5)-71 2899 y(d5)g(d4)g(f2)g(e4)g
(g3)f(f3)h(g2)g(f5)g(e5)g(f4)g(c4)g(c5)f(a6)h(a7)g(b6)g(b7)g(c6)g(d3)g
(c3)f(b5)h(a5)g(c7)g(e6)g(b4)g(a4)-71 2978 y(d6)g(e3)g(c4)g(d5)g(b6)f
(c3)h(d3)g(b5)g(c5)g(e1)g(f2)g(e2)f(f3)h(e5)g(d4)g(e4)g(g4)g(f6)g(e6)f
(f5)h(d2)g(d1)-71 3057 y(d7)g(b6)g(e4)g(d5)g(e5)f(e3)h(g2)g(f3)g(g3)g
(e6)g(f5)g(f6)f(c6)h(c5)g(d6)g(f4)g(d4)g(d3)g(g4)f(g1)h(c4)g(c3)g(f2)g
(f1)g(e2)f(e1)h(d2)g(d1)-71 3135 y(e1)g(b6)g(c6)g(d4)g(e4)f(d5)h(e5)g
(f2)g(e3)g(e2)-71 3214 y(e2)g(d5)g(e5)g(e4)g(c5)f(d3)h(e3)g(d4)g(c3)g
(c4)g(g3)g(f4)f(g4)h(f3)g(g2)g(f2)g(g1)g(f5)g(g5)f(f7)h(f6)g(e7)g(e6)g
(d7)g(c6)f(d6)h(a5)g(b5)g(a6)g(a7)g(b6)g(b4)f(a4)-71
3293 y(e3)h(d5)g(b6)g(c4)g(c5)f(d4)h(b3)g(b4)g(e5)g(e4)g(g3)g(f2)f(f3)h
(e2)g(d3)g(d2)g(c3)g(c1)g(a2)f(a3)h(b2)g(f4)g(g4)-71
3372 y(e4)g(e3)g(d4)g(d3)g(b3)f(b4)h(c3)g(c4)g(g2)g(g1)g(f2)g(f1)f(e2)h
(e1)g(d2)g(b2)g(c2)g(d7)g(c6)f(f3)h(g3)g(f4)g(g4)-71
3451 y(e5)g(d5)g(e4)g(e3)g(d4)f(d3)h(b3)g(c2)g(b2)g(c4)g(a5)g(a4)f(b4)h
(b6)g(c5)g(b5)g(g2)g(g1)g(f2)f(f1)h(e2)g(e1)g(d2)g(c3)g(d1)f(f3)h(g3)
-71 3530 y(e6)g(f2)g(e3)g(d4)g(e2)f(e4)h(f3)g(f4)g(c4)g(c5)g(a6)g(a7)f
(b6)h(b7)g(c6)g(d3)g(c3)g(b5)g(a5)f(c7)h(d6)g(b4)g(a4)-71
3609 y(e7)g(d3)g(a5)g(b3)g(e3)f(d4)h(e4)g(f1)g(e2)g(e1)g(d2)g(d1)f(c2)h
(c1)g(a2)g(b2)g(g1)g(f2)g(g2)f(f3)h(g3)g(f4)g(g4)g(f6)g(f5)f(e6)h(e5)g
(d6)g(c5)g(b4)-71 3688 y(f1)g(b6)g(e3)g(e5)g(d5)f(c7)h(b7)g(c6)g(d6)g
(d7)-71 3766 y(f2)g(e4)g(b6)g(d3)g(d4)f(e3)h(c3)g(c4)g(a5)g(a6)g(b5)g
(b4)f(a4)-71 3845 y(f3)h(d4)g(e5)g(f4)g(e4)f(f2)h(e2)g(e3)g(c4)g(c5)g
(a6)g(a7)f(b6)h(b7)g(c6)g(d3)g(c3)g(b5)g(a5)f(c7)h(e6)g(d5)g(d6)g(b4)g
(a4)-71 3924 y(f4)g(c5)g(f5)g(d3)g(e3)f(f1)h(g1)g(f3)g(d4)g(e4)g(c4)g
(d5)f(a6)h(a7)g(b6)g(b5)g(a5)g(b7)g(c6)f(c7)h(d6)g(d7)g(f6)g(e5)g(e6)f
(b4)h(a4)-71 4003 y(f5)g(d4)g(f2)g(f3)g(e3)f(e4)h(c4)g(c5)g(a6)g(a7)g
(b6)g(b7)f(c6)h(d3)g(c3)g(b5)g(a5)g(c7)g(d6)f(d7)h(f6)g(e5)g(e6)g(b4)g
(a4)-71 4082 y(f6)g(c5)g(a6)g(a7)g(g2)f(f5)h(e5)g(d6)g(b6)g(b7)g(c6)g
(d5)f(c4)h(c7)g(e6)g(f3)g(e4)g(e3)g(d4)f(c3)h(d3)g(e1)g(e2)g(f1)g(g1)f
(f2)h(f4)g(g3)g(d2)g(d1)-71 4161 y(f7)g(d3)g(a5)g(b3)g(e3)f(d4)h(e4)g
(f1)g(e2)g(e1)g(d2)g(d1)f(c2)h(c1)g(a2)g(b2)g(g1)g(f2)g(g2)f(f3)h(g3)g
(f4)g(g4)g(f6)g(f5)f(e6)h(e5)g(d6)g(c5)g(b4)-71 4240
y(g1)g(b7)g(e5)g(e4)g(f3)f(d6)h(g4)g(f2)g(e3)g(f4)g(g3)g(e7)f(g6)h(g5)g
(f5)g(f6)g(d7)g(e6)g(c6)f(d5)h(c5)g(c7)g(a7)g(g2)g(e2)f(d4)h(c4)g(b6)g
(a6)g(d3)g(c3)g(b5)f(a5)h(b4)g(a4)-71 4318 y(g2)g(b7)g(e5)g(f3)g(e2)f
(d3)h(e3)g(e4)g(d4)g(d5)g(a7)g(c5)f(g3)h(f4)g(g4)g(f2)g(g1)g(f5)g(g5)f
(f7)h(f6)g(e7)g(e6)g(d7)g(d6)f(c7)h(b6)g(c6)g(a5)g(b4)g(a4)g(b5)f(a6)
-71 4397 y(g3)h(f2)g(e3)g(c5)g(d4)f(c2)h(a2)g(b3)g(e2)g(d5)g(e5)g(e4)f
(f3)h(f4)g(g4)g(f5)g(g5)g(f7)g(f6)f(e7)h(e6)g(d7)g(d6)g(c7)-71
4476 y(g4)g(e7)g(c5)g(d3)g(c3)f(b6)h(c4)g(c7)g(c6)g(c1)g(b7)g(d2)f(a2)h
(b2)g(a3)g(b3)g(a4)g(b4)g(a5)f(b5)h(c2)g(d1)g(e3)g(d4)g(e4)f(d5)h(e5)g
(f1)g(e1)g(e2)g(g1)g(f2)f(g2)h(f3)g(g3)g(d6)g(e6)-71
4555 y(g5)g(d4)g(c4)g(d3)g(e3)f(e4)h(c3)g(c5)g(a6)g(b3)g(b5)g(a7)f(b6)h
(b7)g(c6)g(c7)g(d6)g(d7)g(e6)f(e7)h(g6)g(f5)g(f6)g(d1)g(c2)f(c1)h(a2)g
(b2)g(d2)g(e1)-71 4634 y(g6)g(c5)g(g2)g(f5)g(c4)f(c3)h(e5)g(f3)g(f4)g
(g3)g(b4)g(d3)f(a3)h(d4)g(a6)g(a5)g(b5)g(a7)g(b6)f(b1)h(b2)g(a4)g(b3)g
(b7)g(c6)f(c1)h(c2)g(d1)-71 4713 y(g7)g(d3)g(c3)g(c5)g(c4)f(e4)h(d5)g
(d4)g(a6)g(a7)g(b6)g(b5)f(a5)h(b3)g(b4)g(b7)g(c6)g(c7)g(d6)f(d7)h(e6)g
(e7)g(f6)g(f7)g(g6)f(d1)h(c2)g(c1)g(a2)g(b2)g(d2)g(e1)0
4865 y Fs(Fig.)d(15.)h(Longest)f(7)p Fu(\002)p Fs(7)g
Ff(Sol)-8 b(ver)31 b Fs(lines)g(of)i(pla)m(y)-8 b(.)33
b(F)-8 b(or)33 b(eac)m(h)h(of)f(the)g(49)h(7)p Fu(\002)p
Fs(7)f(1-op)s(enings,)f(the)h(corresp)s(onding)0 4978
y(line)d(sho)m(ws)i(a)g(longest)g(line)f(of)h(pla)m(y)f(from)h(the)g
(the)g(asso)s(ciated)h Ff(Sol)-8 b(ver)30 b Fs(solution.)g(The)i(top)g
(ro)m(w)g(sho)m(ws)g(the)0 5091 y(mo)m(v)m(e)g(n)m(um)m(b)s(er)d(of)h
(that)h(column.)1885 5912 y Fr(20)p eop
%%Page: 21 21
21 20 bop 0 2664 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0 16 {InitRnode } NewNode end end
 0 2664 a Fs(f2)307 1936 y
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0 16 {InitRnode } NewNode end end
 307 1936
a Fs(e4)350 1908 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 350 1908 a 615 1936 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-0 16 {InitRnode } NewNode end end
 615 1936 a Fs(b6)663
1908 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 1908 a 928 1884 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-0-0 16 {InitRnode } NewNode end end
 928 1884 a Fs(d3)976 1856
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 1856 a 1241 1884 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-0-0-0 16 {InitRnode } NewNode end end
 1241 1884 a Fs(d4)1289 1856
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0 /N@T-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 1856 a 1559 1884 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1559 1884 a Fs(e3)1602 1856
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0 /N@T-0-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 1856 a 1872 1884 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1872 1884 a Fs(c3)1915 1856
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 1856 a 2186 1884 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2186 1884 a Fs(c4)2229 1856
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229 1856 a 2496 1884 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.95001 5.475 3.30017
} false /N@T-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2496 1884 a Fs(a5)2542 1856
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2542 1856 a 2809 1779 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.95001 5.475 3.30017
} false /N@T-0-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2809 1779 a Fs(a6)2855 1751
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2855 1751 a 3120 1779 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 3120 1779 a Fs(b5)3168 1751
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 3168 1751 a 3433 1779 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-0-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 3433 1779 a Fs(b4)3481 1751
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0-0-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 3481 1751 a 3749 1779 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.95001 5.475 3.30017
} false /N@T-0-0-0-0-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end
end
 3749 1779 a Fs(a4)3794 1751
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0-0-0-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3794 1751 a 2807 1884 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-0-0-0-0-0-0-0-1 16 {InitRnode } NewNode end end
 2807 1884 a Fs(b5)2855 1856
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0-1 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2855 1856 a 3122 1884 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.95001 5.475 3.30017
} false /N@T-0-0-0-0-0-0-0-0-0-1-0 16 {InitRnode } NewNode end end
 3122 1884 a Fs(a6)3168 1856
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-1 /N@T-0-0-0-0-0-0-0-0-0-1-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 3168 1856 a 3433 1884 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-0-0-0-0-0-0-0-1-0-0 16 {InitRnode } NewNode end end
 3433 1884 a Fs(b4)3481 1856
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-1-0 /N@T-0-0-0-0-0-0-0-0-0-1-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 3481 1856 a 3749 1884 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.95001 5.475 3.30017
} false /N@T-0-0-0-0-0-0-0-0-0-1-0-0-0 16 {InitRnode } NewNode end
end
 3749 1884 a Fs(a4)3794 1856
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-1-0-0 /N@T-0-0-0-0-0-0-0-0-0-1-0-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3794 1856 a 2807 1988 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-0-0-0-0-0-0-0-2 16 {InitRnode } NewNode end end
 2807 1988 a Fs(b4)2855 1961
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0-0-0-2 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2855 1961 a 3122 1988 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.95001 5.475 3.30017
} false /N@T-0-0-0-0-0-0-0-0-0-2-0 16 {InitRnode } NewNode end end
 3122 1988 a Fs(a4)3168 1961
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-0-0-0-0-0-0-2 /N@T-0-0-0-0-0-0-0-0-0-2-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 3168 1961 a 933 1988 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-0-0-1 16 {InitRnode } NewNode end end
 933 1988 a Fs(c5)976 1961 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0 /N@T-0-0-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end

976 1961 a 1241 1988 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-0-0-1-0 16 {InitRnode } NewNode end end
 1241 1988 a Fs(b5)1289 1961 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0-1 /N@T-0-0-0-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end

1289 1961 a 307 2110 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-1 16 {InitRnode } NewNode end end
 307 2110 a Fs(c5)350 2083 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 350
2083 a 620 2110 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-1-0 16 {InitRnode } NewNode end end
 620 2110 a Fs(e5)663 2083 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 2083
a 933 2110 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-1-0-0 16 {InitRnode } NewNode end end
 933 2110 a Fs(e4)976 2083 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1-0 /N@T-0-1-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 2083 a 1244
2110 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-1-0-0-0 16 {InitRnode } NewNode end end
 1244 2110 a Fs(g3)1289 2083 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1-0-0 /N@T-0-1-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 2083 a 1566
1988 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-1-0-0-0-0 16 {InitRnode } NewNode end end
 1566 1988 a Fs(f3)1602 1961 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1-0-0-0 /N@T-0-1-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 1961 a 1870
1988 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-1-0-0-0-0-0 16 {InitRnode } NewNode end end
 1870 1988 a Fs(g2)1915 1961 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1-0-0-0-0 /N@T-0-1-0-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 1961 a 2192
1988 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-1-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2192 1988 a Fs(f4)2229 1961 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1-0-0-0-0-0 /N@T-0-1-0-0-0-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229 1961 a 2496
1988 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-1-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2496 1988 a Fs(g4)2542 1961 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1-0-0-0-0-0-0 /N@T-0-1-0-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2542 1961 a 1557
2110 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-1-0-0-0-1 16 {InitRnode } NewNode end end
 1557 2110 a Fs(g2)1602 2083 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1-0-0-0 /N@T-0-1-0-0-0-1 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 2083 a 1879
2110 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-1-0-0-0-1-0 16 {InitRnode } NewNode end end
 1879 2110 a Fs(f3)1915 2083 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1-0-0-0-1 /N@T-0-1-0-0-0-1-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 2083 a 2192
2110 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-1-0-0-0-1-0-0 16 {InitRnode } NewNode end end
 2192 2110 a Fs(f4)2229 2083 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1-0-0-0-1-0 /N@T-0-1-0-0-0-1-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229 2083 a 2496
2110 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-1-0-0-0-1-0-0-0 16 {InitRnode } NewNode end end
 2496 2110 a Fs(g4)2542 2083 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1-0-0-0-1-0-0 /N@T-0-1-0-0-0-1-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2542 2083 a 1566
2233 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-1-0-0-0-2 16 {InitRnode } NewNode end end
 1566 2233 a Fs(f4)1602 2205 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1-0-0-0 /N@T-0-1-0-0-0-2 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 2205 a 1870
2233 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-1-0-0-0-2-0 16 {InitRnode } NewNode end end
 1870 2233 a Fs(g4)1915 2205 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1-0-0-0-2 /N@T-0-1-0-0-0-2-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 2205 a 302
2505 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-2 16 {InitRnode } NewNode end end
 302 2505 a Fs(d5)350 2478 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-2 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 350 2478 a 615 2505
a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-2-0 16 {InitRnode } NewNode end end
 615 2505 a Fs(b6)663 2478 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2 /N@T-0-2-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 2478 a 933 2351 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-2-0-0 16 {InitRnode } NewNode end end
 933
2351 a Fs(c4)976 2323 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0 /N@T-0-2-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 2323 a 1241 2351 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-2-0-0-0 16 {InitRnode } NewNode end end
 1241 2351
a Fs(d4)1289 2323 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0 /N@T-0-2-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 2323 a 1559 2351 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-2-0-0-0-0 16 {InitRnode } NewNode end end
 1559 2351
a Fs(c5)1602 2323 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0 /N@T-0-2-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 2323 a 1872 2351 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-2-0-0-0-0-0 16 {InitRnode } NewNode end end
 1872 2351
a Fs(e5)1915 2323 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0-0 /N@T-0-2-0-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 2323 a 2186 2351 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-2-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2186 2351
a Fs(e4)2229 2323 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0-0-0 /N@T-0-2-0-0-0-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229 2323 a 2496 2351 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-2-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2496 2351
a Fs(g3)2542 2323 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0-0-0-0 /N@T-0-2-0-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2542 2323 a 2818 2228 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-2-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2818 2228
a Fs(f3)2855 2201 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0-0-0-0-0 /N@T-0-2-0-0-0-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2855 2201 a 3122 2228 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-2-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 3122 2228
a Fs(g2)3168 2201 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0-0-0-0-0-0 /N@T-0-2-0-0-0-0-0-0-0-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 3168 2201 a 3444 2228 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-2-0-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 3444 2228
a Fs(f4)3481 2201 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0-0-0-0-0-0-0 /N@T-0-2-0-0-0-0-0-0-0-0-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 3481 2201 a 3749 2228 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-2-0-0-0-0-0-0-0-0-0-0-0 16 {InitRnode } NewNode end
end
 3749 2228
a Fs(g4)3794 2201 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0-0-0-0-0-0-0-0 /N@T-0-2-0-0-0-0-0-0-0-0-0-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3794 2201 a 2809 2351 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-2-0-0-0-0-0-0-0-1 16 {InitRnode } NewNode end end
 2809 2351
a Fs(g2)2855 2323 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0-0-0-0-0 /N@T-0-2-0-0-0-0-0-0-0-1 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2855 2323 a 3131 2351 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-2-0-0-0-0-0-0-0-1-0 16 {InitRnode } NewNode end end
 3131 2351
a Fs(f3)3168 2323 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0-0-0-0-0-1 /N@T-0-2-0-0-0-0-0-0-0-1-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 3168 2323 a 3444 2351 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-2-0-0-0-0-0-0-0-1-0-0 16 {InitRnode } NewNode end end
 3444 2351
a Fs(f4)3481 2323 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0-0-0-0-0-1-0 /N@T-0-2-0-0-0-0-0-0-0-1-0-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 3481 2323 a 3749 2351 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-2-0-0-0-0-0-0-0-1-0-0-0 16 {InitRnode } NewNode end
end
 3749 2351
a Fs(g4)3794 2323 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0-0-0-0-0-1-0-0 /N@T-0-2-0-0-0-0-0-0-0-1-0-0-0
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3794 2323 a 2818 2473 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-2-0-0-0-0-0-0-0-2 16 {InitRnode } NewNode end end
 2818 2473
a Fs(f4)2855 2445 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0-0-0-0-0 /N@T-0-2-0-0-0-0-0-0-0-2 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2855 2445 a 3122 2473 a
 tx@Dict begin tx@NodeDict begin {7.05666 2.12917 10.95001 5.475 3.30017
} false /N@T-0-2-0-0-0-0-0-0-0-2-0 16 {InitRnode } NewNode end end
 3122 2473
a Fs(g4)3168 2445 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-0-0-0-0-0-0-2 /N@T-0-2-0-0-0-0-0-0-0-2-0 InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 3168 2445 a 928 2508 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-2-0-1 16 {InitRnode } NewNode end end
 928 2508 a
Fs(d3)976 2480 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0 /N@T-0-2-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 2480 a 1246 2508 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-2-0-1-0 16 {InitRnode } NewNode end end
 1246 2508 a Fs(c4)1289
2480 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-1 /N@T-0-2-0-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 2480 a 1554 2455 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-2-0-1-0-0 16 {InitRnode } NewNode end end
 1554 2455 a Fs(b5)1602
2428 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-1-0 /N@T-0-2-0-1-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 2428 a 1872 2455 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-2-0-1-0-0-0 16 {InitRnode } NewNode end end
 1872 2455 a Fs(c5)1915
2428 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-1-0-0 /N@T-0-2-0-1-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 2428 a 1559 2560 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-2-0-1-0-1 16 {InitRnode } NewNode end end
 1559 2560 a Fs(c5)1602
2532 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-1-0 /N@T-0-2-0-1-0-1 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 2532 a 1867 2560 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-2-0-1-0-1-0 16 {InitRnode } NewNode end end
 1867 2560 a Fs(b5)1915
2532 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-1-0-1 /N@T-0-2-0-1-0-1-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 2532 a 933 2660 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-2-0-2 16 {InitRnode } NewNode end end
 933 2660 a Fs(c5)976 2633
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0 /N@T-0-2-0-2 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 2633 a 1241 2660 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-2-0-2-0 16 {InitRnode } NewNode end end
 1241 2660 a Fs(b5)1289 2633
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-2 /N@T-0-2-0-2-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 2633 a 1559 2660 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-2-0-2-0-0 16 {InitRnode } NewNode end end
 1559 2660 a Fs(c3)1602 2633
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-2-0 /N@T-0-2-0-2-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 2633 a 1872 2660 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-2-0-2-0-0-0 16 {InitRnode } NewNode end end
 1872 2660 a Fs(c4)1915 2633
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0-2-0-0 /N@T-0-2-0-2-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 2633 a 302 2765 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-3 16 {InitRnode } NewNode end end
 302 2765 a Fs(b7)350 2737 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-3 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end

350 2737 a 615 2765 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-3-0 16 {InitRnode } NewNode end end
 615 2765 a Fs(d5)663 2737 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-3 /N@T-0-3-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663
2737 a 933 2765 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-3-0-0 16 {InitRnode } NewNode end end
 933 2765 a Fs(e4)976 2737 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-3-0 /N@T-0-3-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 2737
a 1253 2765 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 8.82085 4.41042 3.30017
} false /N@T-0-3-0-0-0 16 {InitRnode } NewNode end end
 1253 2765 a Fs(f5)1289 2737 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-3-0-0 /N@T-0-3-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 2737
a 307 2869 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-4 16 {InitRnode } NewNode end end
 307 2869 a Fs(c6)350 2842 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-4 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 350 2842 a 615
2869 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-4-0 16 {InitRnode } NewNode end end
 615 2869 a Fs(b6)663 2842 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-4 /N@T-0-4-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 2842 a 933 2869
a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-4-0-0 16 {InitRnode } NewNode end end
 933 2869 a Fs(c5)976 2842 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-4-0 /N@T-0-4-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 2842 a 1241 2869 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-4-0-0-0 16 {InitRnode } NewNode end end

1241 2869 a Fs(b5)1289 2842 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-4-0-0 /N@T-0-4-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 2842 a 307 2974 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-5 16 {InitRnode } NewNode end end

307 2974 a Fs(c7)350 2946 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-5 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 350 2946 a 615 2974 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-5-0 16 {InitRnode } NewNode end end
 615
2974 a Fs(b6)663 2946 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-5 /N@T-0-5-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 2946 a 933 2974 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-5-0-0 16 {InitRnode } NewNode end end
 933 2974
a Fs(c5)976 2946 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-5-0 /N@T-0-5-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 2946 a 1241 2974 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-5-0-0-0 16 {InitRnode } NewNode end end
 1241 2974 a
Fs(b5)1289 2946 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-5-0-0 /N@T-0-5-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 2946 a 302 3079 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-6 16 {InitRnode } NewNode end end
 302 3079 a Fs(d6)350
3051 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-6 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 350 3051 a 620 3079 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-6-0 16 {InitRnode } NewNode end end
 620 3079 a Fs(e4)663 3051
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-6 /N@T-0-6-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 3051 a 302 3183 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-7 16 {InitRnode } NewNode end end
 302 3183 a Fs(d7)350 3156 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-7 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 350
3156 a 615 3183 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-7-0 16 {InitRnode } NewNode end end
 615 3183 a Fs(b6)663 3156 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-7 /N@T-0-7-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 3156
a 933 3183 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-7-0-0 16 {InitRnode } NewNode end end
 933 3183 a Fs(c5)976 3156 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-7-0 /N@T-0-7-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 3156 a 1241
3183 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-7-0-0-0 16 {InitRnode } NewNode end end
 1241 3183 a Fs(b5)1289 3156 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-7-0-0 /N@T-0-7-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 3156 a 307
3392 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-8 16 {InitRnode } NewNode end end
 307 3392 a Fs(e3)350 3365 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-8 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 350 3365 a 620 3392
a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-8-0 16 {InitRnode } NewNode end end
 620 3392 a Fs(e5)663 3365 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-8 /N@T-0-8-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 663 3365 a 933 3288 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-8-0-0 16 {InitRnode } NewNode end end
 933
3288 a Fs(c7)976 3260 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-8-0 /N@T-0-8-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 3260 a 1241 3288 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-8-0-0-0 16 {InitRnode } NewNode end end
 1241 3288
a Fs(b6)1289 3260 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-8-0-0 /N@T-0-8-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 3260 a 933 3392 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-8-0-1 16 {InitRnode } NewNode end end
 933 3392 a
Fs(e4)976 3365 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-8-0 /N@T-0-8-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 3365 a 1241 3392 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-8-0-1-0 16 {InitRnode } NewNode end end
 1241 3392 a Fs(b6)1289
3365 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-8-0-1 /N@T-0-8-0-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 3365 a 1559 3392 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-8-0-1-0-0 16 {InitRnode } NewNode end end
 1559 3392 a Fs(c5)1602
3365 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-8-0-1-0 /N@T-0-8-0-1-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 3365 a 1867 3392 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-8-0-1-0-0-0 16 {InitRnode } NewNode end end
 1867 3392 a Fs(d5)1915
3365 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-8-0-1-0-0 /N@T-0-8-0-1-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 3365 a 933 3497 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-8-0-2 16 {InitRnode } NewNode end end
 933 3497 a Fs(e6)976 3470
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-8-0 /N@T-0-8-0-2 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 976 3470 a 1241 3497 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-8-0-2-0 16 {InitRnode } NewNode end end
 1241 3497 a Fs(b6)1289 3470
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-8-0-2 /N@T-0-8-0-2-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1289 3470 a 1559 3497 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-8-0-2-0-0 16 {InitRnode } NewNode end end
 1559 3497 a Fs(c5)1602 3470
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-8-0-2-0 /N@T-0-8-0-2-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1602 3470 a 1867 3497 a
 tx@Dict begin tx@NodeDict begin {7.60416 0.0 11.55835 5.77917 3.30017
} false /N@T-0-8-0-2-0-0-0 16 {InitRnode } NewNode end end
 1867 3497 a Fs(d5)1915 3470
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-8-0-2-0-0 /N@T-0-8-0-2-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1915 3470 a 2186 3497 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-8-0-2-0-0-0-0 16 {InitRnode } NewNode end end
 2186 3497 a Fs(c6)2229 3470
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-8-0-2-0-0-0 /N@T-0-8-0-2-0-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2229 3470 a 2499 3497 a
 tx@Dict begin tx@NodeDict begin {7.05666 0.0 10.34167 5.17084 3.30017
} false /N@T-0-8-0-2-0-0-0-0-0 16 {InitRnode } NewNode end end
 2499 3497 a Fs(c4)2542 3470
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-8-0-2-0-0-0-0 /N@T-0-8-0-2-0-0-0-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2542 3470 a 0 3635 a Fs(Fig.)32 b(16.)h(A)f Ff(Sol)-8
b(ver)29 b Fs(pro)s(of)i(tree)i(for)e(the)h(7)p Fu(\002)p
Fs(7)g(op)s(ening)e(White-f2.)j(The)e(data)h(for)g(this)e(tree)j(w)m
(as)f(generated)0 3748 y(b)m(y)26 b(\014rst)f(running)e(a)k(mo)s
(di\014ed)d(v)m(ersion)h(of)33 b Ff(Sol)-8 b(ver)24 b
Fs(in)h(whic)m(h)g(the)h(\014nal)f(mo)m(v)m(e)i(considered)e(from)g(an)
m(y)i(p)s(osition)0 3861 y(is)k(a)i(winning)c(mo)m(v)m(e;)34
b(this)d(guaran)m(tees)i(that)g(ev)m(ery)g(recursion)d(tree)j(path)f
(ends)f(with)g(a)h(winning)e(mo)m(v)m(e.)j(The)0 3974
y(resulting)g(recursion)g(tree)i(w)m(as)g(then)f(pruned,)f(at)i(all)f
(p)s(oin)m(ts)f(in)g(the)i(tree,)h(b)m(y)e(remo)m(ving)g(an)m(y)h
(losing)f(mo)m(v)m(es)0 4087 y(made)c(b)m(y)h(the)f(winning)e(pla)m(y)m
(er)i(b)s(efore)g(the)h(winning)c(mo)m(v)m(e)32 b(for)e(that)h(state)h
(w)m(as)f(found.)1885 5912 y Fr(21)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
